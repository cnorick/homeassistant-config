- id: '1587668411958'
  alias: Calendar Toggles WFH
  description: ''
  trigger:
  - entity_id: calendar.wfh
    platform: state
  condition:
  - condition: state
    entity_id: binary_sensor.is_workday
    state: 'on'
  action:
  - entity_id: input_boolean.wfh
    service: "{% if is_state('binary_sensor.is_workday', 'on') %}\n\
      \  input_boolean.turn_on\n{% else %}\n  input_boolean.turn_off\n{% endif %}"

- id: wfh_fan
  alias: WFH -- Fan
  mode: single
  trigger:
    - platform: numeric_state
      entity_id: sensor.living_room_motion_sensor_air_temperature
      above: input_number.fan_temperature
    - platform: numeric_state
      entity_id: sensor.living_room_motion_sensor_air_temperature
      below: input_number.fan_temperature
    - platform: state
      entity_id: binary_sensor.is_during_workday
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: input_boolean.wfh
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.occupied
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: input_number.fan_temperature
  condition:
  - condition: state
    entity_id: input_boolean.wfh
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_during_workday
    state: 'on'
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.living_room_motion_sensor_air_temperature
        above: input_number.fan_temperature
      sequence:
        - service: switch.turn_on
          target:
            entity_id: switch.office_plug
    default:
      - service: switch.turn_off
        target:
          entity_id: switch.office_plug
    
  

- id: wfh
  alias: Work from Home
  mode: restart
  trigger:
  - platform: state
    entity_id: binary_sensor.is_during_workday
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.wfh
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.occupied
    from: 'off'
    to: 'on'
  - platform: homeassistant
    event: start
  condition:
  - condition: state
    entity_id: input_boolean.wfh
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_during_workday
    state: 'on'
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  action:
  # Morning
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_morning
        state: 'on'
      sequence:
        - service: scene.turn_on
          target:
            entity_id: scene.wfh
        - wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.office_door
            to: 'off'
            from: 'on'
          timeout: 03:00:00
          continue_on_timeout: true
        - service: media_player.media_stop
          target: 
            entity_id: media_player.kitchen_echo_show
        - service: media_player.select_source
          data:
            source: Office Echo
          target:
            entity_id: media_player.spotify_nathan_orick
        - delay: '00:00:05'
        - service: media_player.media_play
          target:
            entity_id: media_player.spotify_nathan_orick
        - wait_template: "{{ is_state('binary_sensor.is_lunch', 'on') }}"
          timeout: 05:00:00
          continue_on_timeout: false
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.occupied
      state: 'on'
    - condition: state
      entity_id: input_boolean.wfh
      state: 'on'

  # Start of Lunch
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_lunch
        state: 'on'
      sequence:
      - service: scene.turn_on
        data:
          entity_id: scene.wfh_relax
          transition: 600
      - service: switch.turn_off
        entity_id: switch.office_plug
      - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.wyze_motion3
          to: 'on'
      - service: media_player.play_media
        data:
          media_content_id: amzn1.ask.skill.8e0fbda3-b70c-481d-878f-a2e5e17158c9
          media_content_type: skill
        target:
          entity_id:
          - media_player.kitchen_echo_show
      - wait_template: "{{ is_state('binary_sensor.is_afternoon', 'on') }}"
        timeout:
            hours: "5"
        continue_on_timeout: false
        
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.occupied
      state: 'on'
    - condition: state
      entity_id: input_boolean.wfh
      state: 'on'

  # End of Lunch
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_afternoon
        state: 'on'
      sequence:
      - service: scene.turn_on
        data:
          entity_id: scene.wfh
          transition: 60
      - service: automation.trigger
        entity_id: automation.wfh_fan
      - wait_template: "{{ is_state('binary_sensor.is_evening', 'on') }}"
        timeout:
            hours: "5"
        continue_on_timeout: false
                
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.occupied
      state: 'on'
    - condition: state
      entity_id: input_boolean.wfh
      state: 'on'

  # End of Day
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_evening
        state: 'on'
      sequence:
      - service: scene.turn_on
        data:
          entity_id: scene.wfh_relax
          transition: 600
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.wfh
      - delay: "00:10:00"
      - service: light.turn_off
        data:
          transition: 10
        target:
          area_id: a78dc9b8222b47eebe4561988e57b0b0
      - service: switch.turn_off
        entity_id: switch.office_plug
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.wfh
