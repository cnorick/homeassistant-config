ass:
  alias: Ass
  sequence:
  - data:
      data:
        type: tts
      message: ass
      target: group.alexa_everywhere
    service: notify.alexa_media
alexa_announce:
  alias: Alexa Announce
  sequence:
  - data_template:
      data:
        type: tts
      message: '{{ states.input_text.announcement_text.state }}'
      target: group.alexa_everywhere
    service: notify.alexa_media
notify_sarah_and_nathan:
  alias: Notify Sarah and Nathan
  fields:
    message:
      description: (required) The message to send to all of the devices
      example: Hello
      selector:
        text:
      required: true
    more_info:
      description: (optional) More information to display on phone notifications.
        Will not play over Alexa.
      example: Click here to for more info
      selector:
        text:
          multiline: true
    url:
      description: (optional) The url to open when the notification is clicked. Most
        often will be a specific dashboard.
      example: /lovelace/default_view
      selector:
        text:
    image:
      description: (optional) The public url of the image to be sent to the devices
      example: /local/mail_and_packages/mail_today.gif
      selector:
        text:
    image_type:
      description: (required if image is specified) The filetype of the image. This
        is required for iphone.
      example: gif
      selector:
        text:
    use_alexa:
      description: Should this notification be made over the echos
      example: 'False'
      default: false
      selector:
        boolean:
      required: true
  sequence:
  - data_template:
      title: '{%- if more_info is defined -%}{{message}}{%- endif -%}'
      message: '{%- if more_info is defined -%}{{more_info}}{%- else -%}{{message}}{%-
        endif -%}'
      data:
        url: '{{ url }}'
        attachment:
          url: '{{ image }}'
          content-type: '{{ image_type }}'
          hide-thumbnail: false
    service: notify.mobile_app_iphone
  - data_template:
      title: '{%- if more_info is defined -%}{{message}}{%- endif -%}'
      message: '{%- if more_info is defined -%}{{more_info}}{%- else -%}{{message}}{%-
        endif -%}'
      data:
        clickAction: '{{ url }}'
        image: '{{ image }}'
    service: notify.mobile_app_pixel_4
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  - condition: template
    value_template: '{{ use_alexa }}'
  - data_template:
      data:
        type: announce
      message: '{{ message }}'
    service: notify.alexa_media_everywhere
  mode: single
alarm:
  alias: Alarm
  sequence:
  - data:
      brightness_pct: 100
      profile: relax
    entity_id: light.bedroom
    service: light.turn_on
  - data: {}
    entity_id: group.fans
    service: homeassistant.turn_off
  - service: input_boolean.turn_off
    data: {}
    entity_id: input_boolean.night_mode
  - data:
      volume_level: 0.8
    entity_id: media_player.bathroom_echo, media_player.bedroom_echo
    service: media_player.volume_set
  - data:
      source: Bedroom Echo
    service: media_player.select_source
    target:
      entity_id: media_player.spotify_nathan_orick
  - delay: 00:00:02
  - data:
      source: Bedroom Echo
    service: media_player.select_source
    target:
      entity_id: media_player.spotify_nathan_orick
  - continue_on_timeout: true
    timeout: 00:00:10
    wait_template: '{{ is_state_attr(''media_player.spotify_nathan_orick'', ''source'',
      ''Bedroom Echo'') }}'
  - data: {}
    entity_id: media_player.spotify_nathan_orick
    service: media_player.media_play_pause
  mode: single
slow_alarm:
  alias: Ease Lights on for Morning
  sequence:
  - data:
      brightness_pct: 100
      profile: relax
      transition: 900
    entity_id: light.sarah_s_nightstand, light.bedroom_ceiling, light.nathan_s_nightstand
    service: light.turn_on
  mode: single
notify_random:
  alias: Notify Random Person
  fields:
    title:
      description: The title of the notification
      example: State change
    message:
      description: The message content
      example: The light is on!
  sequence:
  - data_template:
      title: '{{title}}'
      message: '{{message}}'
    service: '{{ [''notify.mobile_app_pixel_4'', ''notify.mobile_app_iphone''] | random
      }}'
wake_tater_pc:
  alias: Wake Tater PC
  sequence:
  - service: switch.turn_on
    entity_id: switch.tater_pc
  mode: single
show_morning_dashboard:
  alias: Show Morning Dashboard
  sequence:
  - service: media_player.turn_on
    target:
      entity_id: media_player.living_room_tv_2
  - service: media_player.turn_on
    target:
      entity_id: media_player.chromecast
  - wait_for_trigger:
    - platform: state
      entity_id: media_player.chromecast
      for: 00:00:05
      to: idle
    timeout: 00:00:20
  - service: cast.show_lovelace_view
    data:
      entity_id: media_player.chromecast
      dashboard_path: lovelace2
      view_path: morning-dashboard
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: cast.show_lovelace_view
    data:
      entity_id: media_player.chromecast
      dashboard_path: lovelace
      view_path: morning-dashboard
  mode: single
alarm_beep_while_triggered:
  alias: Alarm -- Beep While Triggered
  sequence:
  - repeat:
      while:
      - condition: state
        entity_id: alarm_control_panel.home_alarm
        state: triggered
      sequence:
      - service: media_player.play_media
        data:
          media_content_type: sound
          media_content_id: buzzers_pistols_01
        target:
          entity_id:
          - media_player.guest_bathroom_echo
          - media_player.bedroom_echo
          - media_player.bedroom_tv_2
          - media_player.bathroom_echo
          - media_player.kitchen_echo_show
          - media_player.office_echo
          - media_player.living_room_echo
          - media_player.guest_bedroom_echo
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
  mode: single
alarm_flash_while_triggered:
  alias: Alarm -- Flash Lights While Triggered
  sequence:
  - repeat:
      while:
      - condition: state
        entity_id: alarm_control_panel.home_alarm
        state: triggered
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: group.all_lights
            state: 'on'
          sequence:
          - service: light.turn_off
            target:
              entity_id: group.all_lights
            data: {}
        default:
        - service: light.turn_on
          data:
            effect: random
            brightness: 255
          target:
            entity_id: group.all_lights
        - service: light.turn_on
          target:
            entity_id: group.all_lights
          data:
            flash: long
      - delay:
          hours: 0
          minutes: 0
          seconds: 7
          milliseconds: 0
  mode: single
notify_sarah_leaving_work_or_arriving_home:
  alias: Notify Sarah Leaving Work or Arriving Home
  sequence:
  - wait_for_trigger:
    - platform: zone
      entity_id: person.sarah
      zone: zone.project_access
      event: leave
      id: work
    - platform: zone
      entity_id: person.sarah
      zone: zone.home
      event: enter
      id: home
    continue_on_timeout: false
    timeout: '1:00:00'
  - service: notify.mobile_app_pixel_4
    data:
      message: Sarah just moved
      data:
        clickAction: /lovelace/map
  mode: single
tier_toggle_devices:
  fields:
    action:
      name: Action
      description: Whether the entities should be turned on or off
      selector:
        boolean:
      required: true
    delay:
      name: Delay
      description: Amount of time to wait in between toggling devices
      selector:
        number:
          min: 0
          max: 10000
          unit_of_measurement: milliseconds
          mode: box
      default: 500
      required: true
    entity_1:
      name: Entity 1
      description: The first entity to toggle
      selector:
        target:
    entity_2:
      name: Entity 2
      description: The second entity to toggle
      selector:
        target:
    entity_3:
      name: Entity 3
      description: The third entity to toggle
      selector:
        target:
    entity_4:
      name: Entity 4
      description: The fourth entity to toggle
      selector:
        target:
    entity_5:
      name: Entity 5
      description: The fifth entity to toggle
      selector:
        target:
    entity_6:
      name: Entity 6
      description: The sixth entity to toggle
      selector:
        target:
    entity_7:
      name: Entity 7
      description: The seventh entity to toggle
      selector:
        target:
    entity_8:
      name: Entity 8
      description: The eighth entity to toggle
      selector:
        target:
    entity_9:
      name: Entity 9
      description: The ninth entity to toggle
      selector:
        target:
    entity_10:
      name: Entity 10
      description: The tenth entity to toggle
      selector:
        target:
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ entity_1 is defined and entity_1 != none }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{action}}'
          sequence:
          - service: light.turn_on
            data:
              brightness: 255
            target: '{{entity_1}}'
        default:
        - service: light.turn_off
          target: '{{entity_1}}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: '{{delay}}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ entity_2 is defined and entity_2 != none }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{action}}'
          sequence:
          - service: light.turn_on
            data:
              brightness: 255
            target: '{{entity_2}}'
        default:
        - service: light.turn_off
          target: '{{entity_2}}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: '{{delay}}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ entity_3 is defined and entity_3 != none }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{action}}'
          sequence:
          - service: light.turn_on
            data:
              brightness: 255
            target: '{{entity_3}}'
        default:
        - service: light.turn_off
          target: '{{entity_3}}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: '{{delay}}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ entity_4 is defined and entity_4 != none }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{action}}'
          sequence:
          - service: light.turn_on
            data:
              brightness: 255
            target: '{{entity_4}}'
        default:
        - service: light.turn_off
          target: '{{entity_4}}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: '{{delay}}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ entity_5 is defined and entity_5 != none }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{action}}'
          sequence:
          - service: light.turn_on
            data:
              brightness: 255
            target: '{{entity_5}}'
        default:
        - service: light.turn_off
          target: '{{entity_5}}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: '{{delay}}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ entity_6 is defined and entity_6 != none }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{action}}'
          sequence:
          - service: light.turn_on
            data:
              brightness: 255
            target: '{{entity_6}}'
        default:
        - service: light.turn_off
          target: '{{entity_6}}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: '{{delay}}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ entity_7 is defined and entity_7 != none }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{action}}'
          sequence:
          - service: light.turn_on
            data:
              brightness: 255
            target: '{{entity_7}}'
        default:
        - service: light.turn_off
          target: '{{entity_7}}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: '{{delay}}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ entity_8 is defined and entity_8 != none }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{action}}'
          sequence:
          - service: light.turn_on
            data:
              brightness: 255
            target: '{{entity_8}}'
        default:
        - service: light.turn_off
          target: '{{entity_8}}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: '{{delay}}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ entity_9 is defined and entity_9 != none }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{action}}'
          sequence:
          - service: light.turn_on
            data:
              brightness: 255
            target: '{{entity_9}}'
        default:
        - service: light.turn_off
          target: '{{entity_9}}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: '{{delay}}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ entity_10 is defined and entity_10 != none }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{action}}'
          sequence:
          - service: light.turn_on
            data:
              brightness: 255
            target: '{{entity_10}}'
        default:
        - service: light.turn_off
          target: '{{entity_10}}'
  mode: single
  alias: Turn on Entities One at a Time
