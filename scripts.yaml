ass:
  alias: Ass
  sequence:
  - data:
      data:
        type: tts
      message: ass
      target: group.alexa_everywhere
    service: notify.alexa_media
alexa_announce:
  alias: Alexa Announce
  sequence:
  - data_template:
      data:
        type: tts
      message: '{{ states.input_text.announcement_text.state }}'
      target: group.alexa_everywhere
    service: notify.alexa_media
notify_sarah_and_nathan:
  alias: Notify Sarah and Nathan
  fields:
    message:
      description: (required) The message to send to all of the devices
      example: Hello
    more_info:
      description: (optional) More information to display on phone notifications.
        Will not play over Alexa.
      example: Click here to for more info
    url:
      description: (optional) The url to open when the notification is clicked. Most
        often will be a specific dashboard.
      example: /lovelace/default_view
    image:
      description: (optional) The public url of the image to be sent to the devices
      example: /local/mail_and_packages/mail_today.gif"
    image_type:
      description: (required if image is specified) The filetype of the image. This
        is required for iphone.
      example: gif
  sequence:
  - data_template:
      title: '{%- if more_info is defined -%}{{message}}{%- endif -%}'
      message: '{%- if more_info is defined -%}{{more_info}}{%- else -%}{{message}}{%-
        endif -%}'
      data:
        url: '{{ url }}'
        attachment:
          url: '{{ image }}'
          content-type: '{{ image_type }}'
          hide-thumbnail: false
    service: notify.mobile_app_iphone
  - data_template:
      title: '{%- if more_info is defined -%}{{message}}{%- endif -%}'
      message: '{%- if more_info is defined -%}{{more_info}}{%- else -%}{{message}}{%-
        endif -%}'
      data:
        clickAction: '{{ url }}'
        image: '{{ image }}'
    service: notify.mobile_app_pixel_4
  - data_template:
      data:
        type: announce
      message: '{{ message }}'
    service: notify.alexa_media_everywhere
alarm:
  alias: Alarm
  sequence:
  - data:
      brightness_pct: 100
      profile: relax
    entity_id: light.bedroom
    service: light.turn_on
  - data: {}
    entity_id: group.fans
    service: homeassistant.turn_off
  - data:
      volume_level: 0.5
    entity_id: media_player.bathroom_echo, media_player.bedroom_echo
    service: media_player.volume_set
  - data:
      entity_id: media_player.spotify_nathan_orick
      source: Bedroom
    service: media_player.select_source
  - continue_on_timeout: true
    timeout: 00:01:00
    wait_template: '{{is_state_attr(''media_player.spotify_nathan_orick'', ''source'',
      "Bedroom")}}'
  - data: {}
    entity_id: media_player.spotify_nathan_orick
    service: media_player.media_play_pause
  - service: input_boolean.turn_off
    data: {}
    entity_id: input_boolean.night_mode
  mode: single
slow_alarm:
  alias: Slow Alarm
  sequence:
  - data:
      brightness_pct: 100
      profile: relax
      transition: 900
    entity_id: light.sarah_s_nightstand, light.bedroom_ceiling, light.nathan_s_nightstand
    service: light.turn_on
  - delay: 00:15:00
  - data: {}
    service: script.alarm
  mode: single
notify_random:
  alias: Notify Random Person
  fields:
    title:
      description: The title of the notification
      example: State change
    message:
      description: The message content
      example: The light is on!
  sequence:
  - data_template:
      title: '{{title}}'
      message: '{{message}}'
    service: '{{ [''notify.mobile_app_pixel_4'', ''notify.mobile_app_iphone''] | random
      }}'
wake_tater_pc:
  alias: Wake Tater PC
  sequence:
  - service: switch.turn_on
    entity_id: switch.tater_pc
  mode: single
