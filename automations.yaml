- id: '1609559449831'
  alias: Morning Routine
  description: ''
  trigger:
  - platform: state
    to: 'off'
    entity_id: input_boolean.night_mode
    from: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  action:
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.wyze_motion2
      to: 'on'
      from: 'off'
    timeout: 03:00:00
    continue_on_timeout: false
  - data:
      volume_level: 0.8
    service: media_player.volume_set
    target:
      entity_id:
      - media_player.bathroom_echo
      - media_player.kitchen_echo_show
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: sensor.pixel_4_battery_state
            state: charging
        - condition: state
          entity_id: binary_sensor.pixel_4_device_locked
          state: 'on'
      sequence:
      - service: media_player.play_media
        data:
          entity_id: media_player.bathroom_echo
          media_content_id: amzn1.ask.skill.8e0fbda3-b70c-481d-878f-a2e5e17158c9
          media_content_type: skill
    default: []
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: weather.home
        attribute: temperature
        below: '55'
      sequence:
      - service: climate.turn_on
        target:
          area_id: b2672f722c53428e92427703040fb764
      - service: climate.set_temperature
        target:
          area_id: b2672f722c53428e92427703040fb764
        data:
          temperature: '{{states(''input_number.fireplace_temperature_when_showering'')}}'
    default: []
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_door
      to: 'on'
      from: 'off'
    timeout: 01:00:00
    continue_on_timeout: false
  - type: turn_on
    device_id: 4727b2015d290faf287bd1a335620fab
    entity_id: light.kitchen_counter
    domain: light
  - type: turn_on
    device_id: a634fea07a944853cfa4fe710f25fd04
    entity_id: light.kitchen_overhead
    domain: light
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: sensor.pixel_4_battery_state
            state: charging
        - condition: state
          entity_id: binary_sensor.pixel_4_device_locked
          state: 'on'
      sequence:
      - service: media_player.play_media
        data:
          media_content_id: amzn1.ask.skill.8e0fbda3-b70c-481d-878f-a2e5e17158c9
          media_content_type: skill
        target:
          entity_id:
          - media_player.kitchen_echo_show
  - service: media_player.media_stop
    target:
      entity_id: media_player.bathroom_echo
  - wait_for_trigger:
    - platform: template
      value_template: "{{\n    is_state('binary_sensor.office_door', 'off')\n    and\
        \ is_state('binary_sensor.public_space_motion', 'off')\n}}"
      id: in_office
    - platform: state
      entity_id: binary_sensor.living_room_motion
      from: 'off'
      to: 'on'
      id: in_livingroom
    timeout: 02:00:00
    continue_on_timeout: false
  - choose:
    - conditions:
      - condition: template
        value_template: '{{wait.trigger.id == "in_office"}}'
      sequence:
      - service: media_player.media_stop
        target:
          entity_id: media_player.kitchen_echo_show
    - conditions:
      - condition: template
        value_template: '{{wait.trigger.id == "in_livingroom"}}'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.living_room_lamp
        data:
          transition: 6
          brightness: 255
      - service: media_player.media_stop
        target:
          entity_id: media_player.kitchen_echo_show
      - wait_for_trigger:
        - platform: template
          value_template: "{{\n    is_state('binary_sensor.office_door', 'off')\n\
            \    and is_state('binary_sensor.public_space_motion', 'off')\n}}"
        timeout: 02:00:00
        continue_on_timeout: false
      - service: light.turn_off
        target:
          entity_id: light.living_room_lamp
        data:
          transition: 20
    default: []
  - condition: state
    entity_id: person.sarah
    state: not_home
  - service: light.turn_off
    data: {}
    entity_id: light.bedroom
  mode: single
- id: '1619291764637'
  alias: Motion -- Side Door
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.side_door_motion
      light_target:
        entity_id:
        - light.side_porch
        - light.laundry_room
      elevation_check: 10
      time_scene_evening: 0:00:00
      time_scene_day: 0:00:00
      time_scene_morning: 0:00:00
      automation_blocker: input_boolean.people_outside
      time_scene_ambient_end: 0:00:00
      automation_blocker_boolean: false
      no_motion_wait: 300
- id: '1619296919322'
  alias: Dimmer -- Office
  description: ''
  use_blueprint:
    path: bjpetit/zha_lutron_aurora_blueprint.yaml
    input:
      remote: a01dd1e3ea560f4fb0afcf5354493abb
      light:
        area_id: a78dc9b8222b47eebe4561988e57b0b0
- id: '1619298602418'
  alias: Dimmer -- Guest Bedroom
  description: ''
  use_blueprint:
    path: bjpetit/zha_lutron_aurora_blueprint.yaml
    input:
      remote: 224e0e9a1113cc16236212cc415e37e2
      light:
        area_id: 78d9e7596f014179b37ca4129fcb9a68
- id: '1619298756428'
  alias: Dimmer -- Guest Bathroom
  description: ''
  use_blueprint:
    path: bjpetit/zha_lutron_aurora_blueprint.yaml
    input:
      remote: a6c46ea29be9e854e67b05d5ca0d01fc
      light:
        area_id: 5972569ba2994df483c55163a2d8fd2a
- id: '1619298991377'
  alias: Dimmer -- Living Room
  description: ''
  use_blueprint:
    path: bjpetit/zha_lutron_aurora_blueprint.yaml
    input:
      remote: 9ebcf9676a38312a754423049e5ef143
      light:
        area_id: 87c768ba445d4b398f17ec723dc54377
- id: '1619299286679'
  alias: Dimmer -- Dining Room
  description: ''
  use_blueprint:
    path: bjpetit/zha_lutron_aurora_blueprint.yaml
    input:
      remote: 43c144534af08ead226fb0b11c2ab85b
      light:
        entity_id: light.dining_room_ceiling
- id: '1619299919120'
  alias: Dimmer -- Bedroom
  description: ''
  use_blueprint:
    path: bjpetit/zha_lutron_aurora_blueprint.yaml
    input:
      remote: e765caaa40236417c67b4aebc0c1a8ac
      light:
        area_id: b2672f722c53428e92427703040fb764
- id: '1619300410823'
  alias: Dimmer -- Bathroom
  description: ''
  use_blueprint:
    path: bjpetit/zha_lutron_aurora_blueprint.yaml
    input:
      remote: f0a96177eb7693b52288825ef15218bd
      light:
        entity_id: light.bathroom
- id: '1620332636293'
  alias: Low battery level detection & notification for all battery sensors
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      exclude:
        entity_id:
        - sensor.iphone_battery_state
        - sensor.iphone_battery_level
        - sensor.nathan_s_pixel_battery_level
        - sensor.pixel_4_battery_state
        - sensor.rooben_battery_level
      actions:
      - service: script.notify_sarah_and_nathan
        data:
          message: Battery is Dying
          url: /lovelace/data
          more_info: The battery is dying for {{ sensors }}
          use_alexa: true
- id: '1620357325146'
  alias: Motion -- Back Yard
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.back_porch_motion
      elevation_check: 10
      time_scene_evening: 0:00:00
      time_scene_day: 0:00:00
      time_scene_morning: 0:00:00
      time_scene_ambient_end: 0:00:00
      time_scene_ambient_start: 0:00:00
      automation_blocker: input_boolean.people_outside
      light_target:
        entity_id: light.back_porch
      automation_blocker_boolean: false
      no_motion_wait: 300
- id: '1620360426386'
  alias: Alarm -- Trigger when Armed Away
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.public_space_motion
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.wyze_motion1
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.wyze_motion2
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.back_door_open
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
  action:
  - service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.home_alarm
  mode: single
- id: alexa_media_player_authentication_required
  alias: Alexa Media Player Authentication Required
  trigger:
    platform: event
    event_type: alexa_media_relogin_required
  condition: []
  action:
  - service: notify.mobile_app_pixel_4
    data:
      title: Alexa Media Player Integration
      message: ðŸ”‘ Authentication Required
- id: '1620443082110'
  alias: Alarm -- Run Alarm when Triggered
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: triggered
  - platform: state
    entity_id: alarm_control_panel.wyze_home_monitoring_system
    to: triggered
  condition: []
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: Intruder Alert
      more_info: The house alarm is going off
      use_alexa: true
  - service: media_player.volume_set
    target:
      device_id: 28e026b391880a6a90ba262b30514dcc
    data:
      volume_level: 1
  - service: notify.alexa_media
    data:
      data:
        type: tts
      target: group.alexa_everywhere
      message: Alarm will sound in 10 seconds
  - delay:
      hours: 0
      minutes: 0
      seconds: 14
      milliseconds: 0
  - condition: not
    conditions:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: disarmed
  - service: media_player.volume_set
    data:
      volume_level: 1
    target:
      entity_id: media_player.everywhere
  - service: script.turn_on
    target:
      entity_id:
      - script.alarm_flash_while_triggered
      - script.alarm_beep_while_triggered
    data: {}
  mode: single
- id: '1621301311010'
  alias: Motion -- Front Door
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.front_door_motion
      time_scene_evening: 0:00:00
      time_scene_day: 0:00:00
      light_target:
        entity_id:
        - light.front_porch
      time_scene_morning: 0:00:00
      time_scene_ambient_end: 0:00:00
      automation_blocker: input_boolean.people_outside
      time_scene_ambient_start: 0:00:00
      automation_blocker_boolean: false
      no_motion_wait: 300
- id: '1622924827820'
  alias: Motion -- Bomb Shelter
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.wyze_motion4
      light_target:
        entity_id: light.bomb_shelter
- id: '1622936976816'
  alias: Motion -- Mudroom
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.laundry_room_motion
      light_target:
        entity_id: light.laundry_room
- id: '1622937162847'
  alias: Basement Lights
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.basement_door
    to: 'on'
    id: door_open
  - platform: state
    entity_id: binary_sensor.basement_motion_sensor
    id: motion_on
    to: 'on'
    from: 'off'
  - platform: state
    entity_id: binary_sensor.basement_motion_sensor
    id: motion_off
    to: 'off'
    from: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: door_open
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.basement_stairs
          - light.laundry_room
      - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.basement_door
          from: 'on'
          to: 'off'
          for:
            hours: 0
            minutes: 0
            seconds: 30
        timeout: 00:10:00
        continue_on_timeout: true
      - service: light.turn_off
        target:
          area_id: basement
        data:
          transition: 14
    - conditions:
      - condition: trigger
        id: motion_off
      sequence:
      - service: light.turn_off
        target:
          area_id: basement
        data:
          transition: 30
    - conditions:
      - condition: trigger
        id: motion_on
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.basement_stairs
          - light.basement_lights
    default: []
  mode: restart
- id: '1622939127924'
  alias: Toggle Basement Lights
  description: WIP
  trigger:
  - platform: state
    entity_id: binary_sensor.basement_door
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{\n  states.binary_sensor.basement_door.last_changed | as_timestamp\
          \ -\n  states.binary_sensor.laundry_room_motion.last_changed | as_timestamp\
          \ > 0\n}}"
      sequence: []
    default: []
  mode: parallel
  max: 10
- id: '1622946307084'
  alias: Door -- Back Door
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 00:00:00
      motion_entity: binary_sensor.back_door_open
      light_target:
        device_id:
        - 29856b1eb3bc143dc0aad2cc7f6013e6
        - b52c6034f5332b5f7f795cfaa4bf7eea
        entity_id: light.string_lights
      no_motion_wait: 300
      elevation_check: 4
      no_motion_blocker: automation.people_outside
      no_motion_blocker_boolean: true
- id: '1623941903977'
  alias: Outside Mode
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.people_outside
    to: 'on'
  - platform: state
    entity_id: input_boolean.people_outside
    to: 'off'
  - platform: sun
    event: sunset
    offset: -00:10:00
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.people_outside
        state: 'on'
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.back_yard
      - service: climate.set_preset_mode
        target:
          entity_id: climate.kitchen
        data:
          preset_mode: eco
      - condition: sun
        after: sunset
        after_offset: -00:10:00
      - service: light.turn_on
        target:
          entity_id: light.string_lights
      - device_id: 853415c2bf390dc15ae0e2bf6f7569b4
        domain: vacuum
        entity_id: vacuum.rooben
        type: clean
    default:
    - service: switch.turn_on
      target:
        entity_id: switch.back_yard
    - service: light.turn_off
      target:
        entity_id: light.string_lights
    - service: climate.set_preset_mode
      target:
        entity_id: climate.kitchen
      data:
        preset_mode: none
    - device_id: 853415c2bf390dc15ae0e2bf6f7569b4
      domain: vacuum
      entity_id: vacuum.rooben
      type: dock
  mode: single
- id: '1625057398961'
  alias: Charging Phones Turns on Night Mode
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.iphone_battery_state
    to: Charging
    from: Not Charging
  - platform: state
    entity_id: binary_sensor.pixel_4_is_charging
    to: 'on'
  - platform: state
    entity_id: binary_sensor.is_bedtime
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.night_mode
    state: 'off'
  - condition: state
    entity_id: sensor.iphone_battery_state
    state: Charging
  - condition: state
    entity_id: binary_sensor.pixel_4_is_charging
    state: 'on'
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_bedtime
    state: 'on'
  - condition: state
    entity_id: input_boolean.visitors
    state: 'off'
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.night_mode
  mode: single
- id: '1625057755379'
  alias: Notify of Basement Water
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.basement_water_sensor_water_detected
    to: 'on'
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: Warning, Basement Flooding
      more_info: Water has been detected in the basement. Check the water sensor attached
        to the water heater. Turn off the water main if there is active flooding.
      use_alexa: true
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - repeat:
      while:
      - condition: state
        entity_id: binary_sensor.basement_water_sensor_water_detected
        state: 'on'
      sequence:
      - service: notify.alexa_media_nathan_s_2nd_echo_dot
        data:
          message: Inspect the water sensor attached to the water heater. If there
            is active flooding from the water line, turn off the main water valve
            located on the ceiling in the northwest corner of the basement, directly
            under the guest bedroom, and diagonally opposite of the breaker box. Look
            for a yellow handle on a blue pipe. To stop notifications, pull the water
            sensor out of the water and dry it off. Otherwise, turn off the automation
            named Notify of Basement Water in Home Assistant.
          data:
            type: announce
      - service: notify.alexa_media_upstairs
        data:
          message: Warning! The basement is flooding. Inspect the water sensor near
            the water heater.
          data:
            type: announce
      - delay:
          hours: 0
          minutes: 0
          seconds: 45
          milliseconds: 0
  mode: single
- id: '1626990104585'
  alias: Send Data to OCS
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /10
  condition: []
  action:
  - service: rest_command.ocs
    data: {}
  mode: single
- id: '1627506438431'
  alias: Turn on Lights When Doors are Opened
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_door
    to: 'on'
    id: bedroom_door
  - platform: state
    entity_id: binary_sensor.office_door
    id: office_door
    to: 'on'
  - platform: state
    entity_id: binary_sensor.guest_bedroom_door
    id: guest_bedroom_door
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.couch_sleepers
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.living_room_motion_sensor_illuminance
    below: '5'
  action:
  - service: light.turn_on
    target:
      area_id: dining_room
    data:
      transition: 5
      brightness_pct: 40
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: office_door
        - condition: trigger
          id: guest_bedroom_door
      sequence:
      - service: light.turn_on
        target:
          area_id: hallway
    default: []
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    target:
      area_id: dining_room
    data:
      transition: 9
  - service: light.turn_off
    target:
      area_id: hallway
  mode: parallel
  max: 2
- id: '1628378848989'
  alias: Alexa, I'm Leaving
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.alexa_leaving
    from: 'off'
    to: 'on'
  - platform: time_pattern
    id: time
    hours: /5
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: time
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.alexa_leaving
        data: {}
    default:
    - service: alarm_control_panel.alarm_arm_away
      data: {}
      target:
        entity_id: alarm_control_panel.wyze_home_monitoring_system
    - wait_for_trigger:
      - platform: state
        entity_id: binary_sensor.back_door_open
        from: 'on'
        to: 'off'
      continue_on_timeout: true
      timeout: '120'
    - service: lock.lock
      target:
        entity_id: lock.back_door
      data: {}
    - delay:
        hours: 0
        minutes: 2
        seconds: 0
        milliseconds: 0
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.alexa_leaving
      data: {}
  mode: single
- id: '1629672385421'
  alias: Notify of Object Detection
  description: ''
  trigger:
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_parking_pad'', ''summary'').person
      | default(0) > 0}}'
    id: person
  - platform: template
    id: person
    value_template: '{{ state_attr(''image_processing.doods_back_porch'', ''summary'').person
      | default(0) > 0}}'
  - platform: template
    id: person
    value_template: '{{ state_attr(''image_processing.doods_front_yard'', ''summary'').person
      | default(0) > 0}}'
  - platform: template
    id: person
    value_template: '{{ state_attr(''image_processing.doods_side_porch'', ''summary'').person
      | default(0) > 0}}'
  - platform: template
    id: person
    value_template: '{{ state_attr(''image_processing.doods_front_gate'', ''summary'').person
      | default(0) > 0}}'
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_parking_pad'', ''summary'').cat
      | default(0) > 0}}'
    id: cat
  - platform: template
    id: cat
    value_template: '{{ state_attr(''image_processing.doods_back_porch'', ''summary'').cat
      | default(0) > 0}}'
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_front_yard'', ''summary'').cat
      | default(0) > 0}}'
    id: cat
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_side_porch'', ''summary'').cat
      | default(0) > 0}}'
    id: cat
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_front_gate'', ''summary'').cat
      | default(0) > 0}}'
    id: cat
  condition:
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_back_porch''
        and states(''var.back_porch_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_parking_pad''
        and states(''var.parking_pad_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_front_yard''
        and states(''var.front_yard_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_front_gate''
        and states(''var.front_gate_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_side_porch''
        and states(''var.side_porch_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
  - condition: state
    entity_id: input_boolean.people_outside
    state: 'off'
  - condition: state
    entity_id: input_boolean.alexa_leaving
    state: 'off'
  - condition: template
    value_template: '{{ states.binary_sensor.back_door_open.last_changed | as_timestamp
      < now() | as_timestamp - 60* states(''input_number.camera_notification_refractory_period'')
      | float }}'
  - condition: template
    value_template: "{{\n   states.sensor.number_of_people_at_home.last_changed |\
      \ as_timestamp < now() | as_timestamp - 60 * states('input_number.camera_notification_refractory_period')\
      \ | float or states('sensor.number_of_people_at_home') | int < states('sensor.last_number_of_people_at_home')\
      \ | int\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_parking_pad''
          }}'
      sequence:
      - service: camera.snapshot
        target:
          entity_id: camera.parking_pad
        data:
          filename: /config/www/doods/parking_pad.jpg
      - service: var.update
        data:
          entity_id: var.parking_pad_last_notified
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_back_porch''
          }}'
      sequence:
      - service: camera.snapshot
        data:
          filename: /config/www/doods/back_porch.jpg
        target:
          entity_id: camera.back_porch
      - service: var.update
        data:
          entity_id: var.back_porch_last_notified
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_front_yard''
          }}'
      sequence:
      - service: camera.snapshot
        data:
          filename: /config/www/doods/front_yard.jpg
        target:
          entity_id: camera.front_yard
      - service: var.update
        data:
          entity_id: var.front_yard_last_notified
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_front_gate''
          }}'
      sequence:
      - service: camera.snapshot
        data:
          filename: /config/www/doods/front_gate.jpg
        target:
          entity_id: camera.front_gate
      - service: var.update
        data:
          entity_id: var.front_gate_last_notified
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_side_porch''
          }}'
      sequence:
      - service: camera.snapshot
        data:
          filename: /config/www/doods/side_porch.jpg
        target:
          entity_id: camera.side_porch
      - service: var.update
        data:
          entity_id: var.side_porch_last_notified
    default: []
  - service: script.notify_sarah_and_nathan
    data_template:
      use_alexa: false
      message: '{% if trigger.id == ''person'' %} Person {% elif trigger.id == ''cat''
        %} Cat {% else %} Motion {% endif %} Detected {% if trigger.entity_id == ''image_processing.doods_back_porch''
        %} on Back Porch {% elif trigger.entity_id == ''image_processing.doods_parking_pad''
        %} on Parking Pad {% elif trigger.entity_id == ''image_processing.doods_front_yard''
        %} on Front Yard {% elif trigger.entity_id == ''image_processing.doods_front_gate''
        %} on Front Gate {% elif trigger.entity_id == ''image_processing.doods_side_porch''
        %} on Side Porch {% endif %}'
      image: https://zeryje96cijoslllthx5qprkm9drlxwz.ui.nabu.casa/local/doods/{%-
        if trigger.entity_id == 'image_processing.doods_back_porch' -%} back_porch.jpg
        {%- elif trigger.entity_id == 'image_processing.doods_parking_pad' -%} parking_pad.jpg
        {%- elif trigger.entity_id == 'image_processing.doods_front_yard' -%} front_yard.jpg
        {%- elif trigger.entity_id == 'image_processing.doods_front_gate' -%} front_gate.jpg
        {%- elif trigger.entity_id == 'image_processing.doods_side_porch' -%} side_porch.jpg
        {%- endif -%}
      image_type: jpg
      url: /lovelace/Cameras
  mode: queued
  max: 10
- id: '1630441700096'
  alias: Turn On AC When Headed Home
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: proximity.home
    below: '80'
  condition: []
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: AC Turned On
      more_info: '{% set fallback = {"to_state": {"attributes": {"nearest": "you"}}}
        %} {% set value = trigger | default(fallback) %} {% set value = value.to_state
        | default(fallback.to_state) %} {% set value = value.attributes | default(fallback.to_state.attributes)
        %} {% set value = value.nearest | default(fallback.to_state.attributes.nearest)
        %} {% set person = value.split('','') | join('' and'') %} {% set verb = ''is''
        %} {% if person == ''you'' or value.split('','') | count > 1 %} {% set verb
        = ''are'' %} {% endif %} Home Assistant has observed {{ person }} {{ verb
        }} headed home and has turned on the AC. If this is not expected, click this
        notification to turn it off.'
      url: /lovelace/climate
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.keep_ac_in_eco
  - service: climate.set_preset_mode
    data:
      preset_mode: none
    target:
      entity_id: climate.kitchen
  mode: single
- id: '1637193742323'
  alias: Christmas Lights
  description: ''
  trigger:
  - platform: sun
    event: sunset
    id: sunset
    offset: -01:00:00
  - platform: state
    entity_id: input_boolean.night_mode
    id: sleep
    to: 'on'
    from: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id: binary_sensor.occupied
    id: occupation
  - platform: state
    entity_id: input_boolean.night_mode
    id: wake
    from: 'on'
    to: 'off'
  - platform: time
    at: 00:00:00
    id: midnight
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sunset
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.outside_christmas_lights
          - switch.wp1_smart_socket_2_socket
          - switch.wp1_smart_socket_socket
          - switch.sarah_s_fan_socket_1
          - switch.christmas_tree_socket_1
      - service: light.turn_on
        target:
          entity_id:
          - light.side_porch
          - light.front_porch
          - light.garland
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: sleep
        - condition: trigger
          id: midnight
      sequence:
      - service: switch.turn_off
        target:
          entity_id:
          - switch.outside_christmas_lights
          - switch.wp1_smart_socket_2_socket
          - switch.wp1_smart_socket_socket
          - switch.sarah_s_fan_socket_1
          - switch.christmas_tree_socket_1
      - service: light.turn_off
        target:
          entity_id:
          - light.front_porch
          - light.side_porch
          - light.garland
    - conditions:
      - condition: trigger
        id: wake
      - condition: state
        entity_id: input_boolean.visitors
        state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.garland
    default: []
  mode: queued
  max: 10
- id: '1643038941823'
  alias: Birthday Reminders
  description: ''
  trigger:
  - platform: time
    at: input_datetime.birthday_reminder_time
    id: notification_time
  - platform: state
    entity_id: calendar.birthdays
    id: next_birthday
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: notification_time
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{% set reminderDate = ((state_attr(''calendar.birthdays'',
              ''start_time'') | as_datetime - timedelta(days=states(''input_number.birthday_reminder_offset'')
              | int)) | as_local) %}

              {{ reminderDate.month == now().month and reminderDate.day == now().day
              }}'
          sequence:
          - service: script.notify_sarah_and_nathan
            data:
              message: '{{ state_attr(''calendar.birthdays'', ''message'') }} ðŸŽ‰'
              more_info: '{{ state_attr(''calendar.birthdays'', ''message'') }} is
                coming up on {{ state_attr(''calendar.birthdays'', ''start_time'')
                | as_timestamp | timestamp_custom("%A, %B %d", True)}}'
        - conditions:
          - condition: state
            entity_id: calendar.birthdays
            state: 'on'
          sequence:
          - service: script.notify_sarah_and_nathan
            data:
              message: '{{ state_attr(''calendar.birthdays'', ''message'') }}'
              more_info: Today is {{ state_attr('calendar.birthdays', 'message') }}
                ðŸŽ‚
    - conditions:
      - condition: trigger
        id: next_birthday
      sequence:
      - wait_for_trigger:
        - platform: time
          at: input_datetime.birthday_reminder_time
      - service: script.notify_sarah_and_nathan
        data:
          message: '{{ state_attr(''calendar.birthdays'', ''message'') }} ðŸŽ‰'
          more_info: '{{ state_attr(''calendar.birthdays'', ''message'') }} is coming
            up on {{ state_attr(''calendar.birthdays'', ''start_time'') | as_timestamp
            | timestamp_custom("%A, %B %d", True)}}'
    default: []
  mode: parallel
  max: 2
- id: '1643585268012'
  alias: Bathroom Fan
  description: Toggle Fan Based on Humidity and Motion
  trigger:
  - platform: numeric_state
    entity_id: sensor.bathroom_humidity
    above: input_number.bathroom_humidity_threshold
    id: too_humid
  - platform: state
    entity_id: switch.bathroom_fan
    id: run_for_small_time
    to: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  - platform: state
    entity_id: switch.bathroom_fan
    id: run_for_long_time
    to: 'on'
    for:
      hours: 0
      minutes: 45
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.bathroom_humidity
    id: humidity_lowered
    below: input_number.bathroom_humidity_threshold
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: too_humid
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.bathroom_fan
        data: {}
    - conditions:
      - condition: trigger
        id: run_for_small_time
      - condition: numeric_state
        entity_id: sensor.bathroom_humidity
        below: input_number.bathroom_humidity_threshold
      - condition: state
        entity_id: binary_sensor.wyze_motion2
        state: 'off'
        for:
          hours: 0
          minutes: 5
          seconds: 0
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.bathroom_fan
        data: {}
    - conditions:
      - condition: trigger
        id: run_for_long_time
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.bathroom_fan
        data: {}
    - conditions:
      - condition: trigger
        id: humidity_lowered
      - condition: state
        entity_id: binary_sensor.wyze_motion2
        state: 'off'
        for:
          hours: 0
          minutes: 3
          seconds: 0
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.bathroom_fan
        data: {}
    default: []
  mode: restart
- id: '1645303901832'
  alias: Grow Room
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    id: sunrise
  - platform: template
    value_template: '{% set hours = states(''input_number.hours_of_plant_light'')|float
      %}

      {% set turn_off_time = (state_attr(''sun.sun'', ''next_rising'') | as_datetime
      - timedelta(days = 1) + timedelta(hours = hours))%}

      {{ now() > turn_off_time }}'
    id: time_expired
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sunrise
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.grow_light
    - conditions:
      - condition: trigger
        id: time_expired
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.grow_light
    default: []
  mode: single
- id: '1646491578504'
  alias: Keep AC in Eco
  description: ''
  trigger:
  - platform: state
    entity_id: climate.kitchen
    attribute: preset_mode
    to: none
  - platform: state
    entity_id: input_boolean.keep_ac_in_eco
  condition:
  - condition: state
    entity_id: input_boolean.keep_ac_in_eco
    state: 'on'
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: eco
    target:
      entity_id: climate.kitchen
  mode: queued
  max: 10
