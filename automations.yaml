- id: '1609559449831'
  alias: Morning Routine
  description: ''
  trigger:
  - platform: state
    to: 'off'
    entity_id: input_boolean.night_mode
    from: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  action:
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.wyze_motion2
      to: 'on'
      from: 'off'
    timeout: 03:00:00
    continue_on_timeout: false
  - data:
      volume_level: 0.8
    service: media_player.volume_set
    target:
      entity_id:
      - media_player.bathroom_echo
      - media_player.kitchen_echo_show
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: binary_sensor.pixel_is_charging
            state: 'on'
        - condition: state
          entity_id: binary_sensor.pixel_device_locked
          state: 'on'
      sequence:
      - service: media_player.play_media
        data:
          entity_id: media_player.bathroom_echo
          media_content_id: amzn1.ask.skill.8e0fbda3-b70c-481d-878f-a2e5e17158c9
          media_content_type: skill
    default: []
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: weather.home
        attribute: temperature
        below: '55'
      - condition: not
        conditions:
        - condition: state
          entity_id: climate.kitchen
          state: cool
      sequence:
      - service: climate.turn_on
        target:
          area_id: b2672f722c53428e92427703040fb764
        data: {}
      - service: climate.set_temperature
        target:
          area_id: b2672f722c53428e92427703040fb764
        data:
          temperature: '{{states(''input_number.fireplace_temperature_when_showering'')}}'
    default: []
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_door
      to: 'on'
      from: 'off'
    timeout:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: false
  - type: turn_on
    device_id: 4727b2015d290faf287bd1a335620fab
    entity_id: light.kitchen_counter
    domain: light
  - type: turn_on
    device_id: a634fea07a944853cfa4fe710f25fd04
    entity_id: light.kitchen_overhead
    domain: light
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: binary_sensor.pixel_is_charging
            state: 'on'
        - condition: state
          entity_id: binary_sensor.pixel_device_locked
          state: 'on'
      sequence:
      - service: media_player.play_media
        data:
          media_content_id: amzn1.ask.skill.8e0fbda3-b70c-481d-878f-a2e5e17158c9
          media_content_type: skill
        target:
          entity_id:
          - media_player.kitchen_echo_show
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.heat_coffee_water
  - service: media_player.media_stop
    target:
      entity_id: media_player.bathroom_echo
    data: {}
  - wait_for_trigger:
    - platform: template
      value_template: "{{\n    is_state('binary_sensor.office_door', 'off')\n    and
        is_state('binary_sensor.public_space_motion', 'off')\n}}"
      id: in_office
    - platform: state
      entity_id: binary_sensor.living_room_motion
      from: 'off'
      to: 'on'
      id: in_livingroom
    timeout: 02:00:00
    continue_on_timeout: false
  - choose:
    - conditions:
      - condition: template
        value_template: '{{wait.trigger.id == "in_office"}}'
      sequence:
      - service: media_player.media_stop
        target:
          entity_id: media_player.kitchen_echo_show
        data: {}
    - conditions:
      - condition: template
        value_template: '{{wait.trigger.id == "in_livingroom"}}'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.living_room_lamp
        data:
          transition: 6
          brightness: 255
      - service: media_player.media_stop
        target:
          entity_id: media_player.kitchen_echo_show
        data: {}
      - wait_for_trigger:
        - platform: template
          value_template: "{{\n    is_state('binary_sensor.office_door', 'off')\n
            \   and is_state('binary_sensor.public_space_motion', 'off')\n}}"
        timeout: 02:00:00
        continue_on_timeout: false
      - service: light.turn_off
        target:
          entity_id: light.living_room_lamp
        data:
          transition: 20
    default: []
  - condition: state
    entity_id: person.sarah
    state: not_home
  - service: light.turn_off
    data: {}
    entity_id: light.bedroom
  mode: single
- id: '1619291764637'
  alias: Motion -- Side Door
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.side_door_motion
      light_target:
        entity_id:
        - light.side_porch
        - light.laundry_room
      elevation_check: 10
      time_scene_evening: 0:00:00
      time_scene_day: 0:00:00
      time_scene_morning: 0:00:00
      automation_blocker: input_boolean.people_outside
      time_scene_ambient_end: 0:00:00
      automation_blocker_boolean: false
      no_motion_wait: 300
- id: '1620332636293'
  alias: Low battery level detection & notification for all battery sensors
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      exclude:
        entity_id:
        - sensor.iphone_2_battery_state
        - sensor.iphone_2_battery_level
        - sensor.nathan_s_pixel_battery_level
        - sensor.pixel_battery_state
        - sensor.rooben_battery_level
        - sensor.google_pixel_watch_battery_level
      actions:
      - service: script.notify_sarah_and_nathan
        data:
          message: Battery is Dying
          url: /lovelace/data
          more_info: The battery is dying for {{ sensors }}
          use_alexa: false
          notify_nathan: true
          notify_sarah: false
          text_nathan: false
          text_sarah: false
          text_ice_contacts: false
          bypass_quiet_mode: false
- id: '1620357325146'
  alias: Motion -- Back Yard
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.back_porch_motion
      elevation_check: 10
      time_scene_evening: 0:00:00
      time_scene_day: 0:00:00
      time_scene_morning: 0:00:00
      time_scene_ambient_end: 0:00:00
      time_scene_ambient_start: 0:00:00
      automation_blocker: input_boolean.people_outside
      light_target:
        entity_id: light.back_porch
      automation_blocker_boolean: false
      no_motion_wait: 300
- id: '1620360426386'
  alias: Alarm -- Trigger when Armed Away
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.public_space_motion
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.wyze_motion1
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.wyze_motion2
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.back_door_open
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
  action:
  - service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.home_alarm
  mode: single
- id: alexa_media_player_authentication_required
  alias: Alexa Media Player Authentication Required
  trigger:
    platform: event
    event_type: alexa_media_relogin_required
  condition: []
  action:
  - service: notify.mobile_app_pixel
    data:
      title: Alexa Media Player Integration
      message: "\U0001F511 Authentication Required"
- id: '1620443082110'
  alias: Alarm -- Run Alarm when Triggered
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: triggered
  - platform: state
    entity_id: alarm_control_panel.wyze_home_monitoring_system
    to: triggered
  condition: []
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: Intruder Alert
      more_info: The house alarm is going off
      use_alexa: true
      notify_nathan: true
      notify_sarah: true
      text_nathan: true
      text_sarah: true
      text_ice_contacts: false
      bypass_quiet_mode: true
  - service: media_player.volume_set
    target:
      device_id: 28e026b391880a6a90ba262b30514dcc
    data:
      volume_level: 1
  - service: notify.alexa_media
    data:
      data:
        type: tts
      target: group.alexa_everywhere
      message: Alarm will sound in 10 seconds
  - delay:
      hours: 0
      minutes: 0
      seconds: 14
      milliseconds: 0
  - condition: not
    conditions:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: disarmed
  - service: media_player.volume_set
    data:
      volume_level: 1
    target:
      entity_id: media_player.everywhere
  - service: script.turn_on
    target:
      entity_id:
      - script.alarm_flash_while_triggered
      - script.alarm_beep_while_triggered
    data: {}
  mode: single
- id: '1621301311010'
  alias: Motion -- Front Door
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.front_door_motion
      time_scene_evening: 0:00:00
      time_scene_day: 0:00:00
      light_target:
        entity_id:
        - light.front_porch
      time_scene_morning: 0:00:00
      time_scene_ambient_end: 0:00:00
      automation_blocker: input_boolean.people_outside
      time_scene_ambient_start: 0:00:00
      automation_blocker_boolean: false
      no_motion_wait: 300
- id: '1622924827820'
  alias: Motion -- Bomb Shelter
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.wyze_motion4
      light_target:
        entity_id: light.bomb_shelter
- id: '1622936976816'
  alias: Motion -- Mudroom
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.laundry_room_motion
      light_target:
        entity_id: light.laundry_room
- id: '1622937162847'
  alias: Basement Lights
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.basement_door
    to: 'on'
    id: door_open
  - platform: state
    entity_id: binary_sensor.basement_motion_sensor
    id: motion_on
    to: 'on'
    from: 'off'
  - platform: state
    entity_id: binary_sensor.basement_motion_sensor
    id: motion_off
    to: 'off'
    from: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: door_open
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.basement_stairs
          - light.laundry_room
      - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.basement_door
          from: 'on'
          to: 'off'
          for:
            hours: 0
            minutes: 0
            seconds: 30
        timeout: 00:10:00
        continue_on_timeout: true
      - service: light.turn_off
        target:
          area_id: basement
        data:
          transition: 14
    - conditions:
      - condition: trigger
        id: motion_off
      sequence:
      - service: light.turn_off
        target:
          area_id: basement
        data:
          transition: 30
    - conditions:
      - condition: trigger
        id: motion_on
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.basement_stairs
          - light.basement_lights
    default: []
  mode: restart
- id: '1622939127924'
  alias: Toggle Basement Lights
  description: WIP
  trigger:
  - platform: state
    entity_id: binary_sensor.basement_door
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{\n  states.binary_sensor.basement_door.last_changed | as_timestamp
          -\n  states.binary_sensor.laundry_room_motion.last_changed | as_timestamp
          > 0\n}}"
      sequence: []
    default: []
  mode: parallel
  max: 10
- id: '1622946307084'
  alias: Door -- Back Door
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 00:00:00
      motion_entity: binary_sensor.back_door_open
      light_target:
        device_id:
        - 29856b1eb3bc143dc0aad2cc7f6013e6
        - b52c6034f5332b5f7f795cfaa4bf7eea
        entity_id: light.string_lights
      no_motion_wait: 300
      elevation_check: 4
      no_motion_blocker: automation.people_outside
      no_motion_blocker_boolean: true
- id: '1623941903977'
  alias: Outside Mode
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.people_outside
    to: 'on'
  - platform: state
    entity_id: input_boolean.people_outside
    to: 'off'
  - platform: sun
    event: sunset
    offset: -00:10:00
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.people_outside
        state: 'on'
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.back_yard
      - service: climate.set_preset_mode
        target:
          entity_id: climate.kitchen
        data:
          preset_mode: eco
      - condition: sun
        after: sunset
        after_offset: -00:10:00
      - service: light.turn_on
        target:
          entity_id: light.string_lights
      - device_id: 853415c2bf390dc15ae0e2bf6f7569b4
        domain: vacuum
        entity_id: vacuum.rooben
        type: clean
    default:
    - service: switch.turn_on
      target:
        entity_id: switch.back_yard
    - service: light.turn_off
      target:
        entity_id: light.string_lights
    - service: climate.set_preset_mode
      target:
        entity_id: climate.kitchen
      data:
        preset_mode: none
    - device_id: 853415c2bf390dc15ae0e2bf6f7569b4
      domain: vacuum
      entity_id: vacuum.rooben
      type: dock
  mode: single
- id: '1625057398961'
  alias: Charging Phones Turns on Night Mode
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.iphone_2_battery_state
    to: Charging
    from: Not Charging
  - platform: state
    entity_id: binary_sensor.pixel_is_charging
    to: 'on'
  - platform: state
    entity_id: binary_sensor.is_bedtime
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.night_mode
    state: 'off'
  - condition: state
    entity_id: sensor.iphone_2_battery_state
    state: Charging
  - condition: state
    entity_id: binary_sensor.pixel_is_charging
    state: 'on'
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_bedtime
    state: 'on'
  - condition: state
    entity_id: input_boolean.visitors
    state: 'off'
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.night_mode
  mode: single
- id: '1625057755379'
  alias: Leak Detection
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.basement_water_sensor_water_detected
    to: 'on'
    id: water-heater
  - platform: state
    entity_id:
    - binary_sensor.kitchen_sink_moisture
    to: 'on'
    id: kitchen
  - platform: state
    entity_id:
    - binary_sensor.titan_water_valve_actuator_water_alarm_water_leak_detected
    to: 'on'
    id: valve
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.titan_water_valve_actuator
  - choose:
    - conditions:
      - condition: trigger
        id: water-heater
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          message: Warning, Water Heater Flooding
          more_info: Water has been detected in the basement near the water heater.
            Check the water sensor attached to the water heater. The water main has
            already been turned off. Click this notification to turn it back on, or
            press the button on the device in the basement.
          use_alexa: true
          notify_nathan: true
          notify_sarah: true
          text_nathan: true
          text_sarah: true
          text_ice_contacts: true
          bypass_quiet_mode: true
          url: /config/devices/device/80111a0a6cdedbf4e578450bc83cd527
    - conditions:
      - condition: trigger
        id: kitchen
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          message: Warning, Kitchen Sink is Flooding
          more_info: Check under the kitchen sink for water. The water main in the
            basement has already been shut off. Click this notification to turn it
            back on, or press the button on the device in the basement.
          use_alexa: true
          notify_sarah: true
          notify_nathan: true
          text_nathan: true
          text_sarah: true
          text_ice_contacts: true
          bypass_quiet_mode: true
          url: /config/devices/device/80111a0a6cdedbf4e578450bc83cd527
    - conditions:
      - condition: trigger
        id: valve
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          message: Warning, Basement is Flooding
          more_info: Check the basement near the main water valve for water. The water
            main in the basement has already been shut off. Click this notification
            to turn it back on, or press the button on the device in the basement.
          use_alexa: true
          notify_sarah: true
          notify_nathan: true
          text_nathan: true
          text_sarah: true
          text_ice_contacts: true
          bypass_quiet_mode: true
          url: /config/devices/device/80111a0a6cdedbf4e578450bc83cd527
    default: []
  mode: single
- id: '1626990104585'
  alias: Send Data to OCS
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /10
  condition: []
  action:
  - service: rest_command.ocs
    data:
      payload: "[\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\",\n
        \   \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"streamId\":
        \"nathan-office-temp\",\n    \"data\": {\n      \"timestamp\": \"{{now()}}\",\n
        \     \"value\": \"{{states('sensor.bme280_temperature')}}\"\n    }\n  },\n
        \ {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\",\n    \"namespaceId\":
        \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"streamId\": \"nathan-office-humidity\",\n
        \   \"data\": {\n      \"timestamp\": \"{{now()}}\",\n      \"value\": \"{{states('sensor.bme280_humidity')}}\"\n
        \   }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\",\n
        \   \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"streamId\":
        \"nathan-office-pressure\",\n    \"data\": {\n      \"timestamp\": \"{{now()}}\",\n
        \     \"value\": \"{{states('sensor.bme280_pressure')}}\"\n    }\n  },\n  {\n
        \   \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\",\n    \"namespaceId\":
        \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"streamId\": \"nathan-livingroom-temperature\",\n
        \   \"data\": {\n      \"timestamp\": \"{{now()}}\",\n      \"value\": \"{{states('sensor.living_room_motion_sensor_air_temperature')}}\"\n
        \   }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\",\n
        \   \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"streamId\":
        \"nathan-livingroom-illuminance\",\n    \"data\": {\n      \"timestamp\":
        \"{{now()}}\",\n      \"value\": \"{{states('sensor.living_room_motion_sensor_illuminance')}}\"\n
        \   }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\",\n
        \   \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"streamId\":
        \"nathan-kitchen-temperature\",\n    \"data\": {\n      \"timestamp\": \"{{now()}}\",\n
        \     \"value\": \"{{states('sensor.kitchen_temperature')}}\"\n    }\n  },\n
        \ {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\",\n    \"namespaceId\":
        \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"streamId\": \"nathan-kitchen-humidity\",\n
        \   \"data\": {\n      \"timestamp\": \"{{now()}}\",\n      \"value\": \"{{states('sensor.kitchen_humidity')}}\"\n
        \   }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\",\n
        \   \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"streamId\":
        \"nathan-basement-temperature\",\n    \"data\": {\n      \"timestamp\": \"{{now()}}\",\n
        \     \"value\": \"{{states('sensor.basement_water_sensor_temperature')}}\"\n
        \   }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\",\n
        \   \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"streamId\":
        \"nathan-basement-humidity\",\n    \"data\": {\n      \"timestamp\": \"{{now()}}\",\n
        \     \"value\": \"{{states('sensor.basement_water_sensor_humidity')}}\"\n
        \   }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\",\n
        \   \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"streamId\":
        \"nathan-bathroom-humidity\",\n    \"data\": {\n      \"timestamp\": \"{{now()}}\",\n
        \     \"value\": \"{{states('sensor.bathroom_humidity')}}\"\n    }\n  },\n
        \ {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\",\n    \"namespaceId\":
        \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"streamId\": \"nathan-bathroom-temperature\",\n
        \   \"data\": {\n      \"timestamp\": \"{{now()}}\",\n      \"value\": \"{{states('sensor.bathroom_temperature')}}\"\n
        \   }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\",\n
        \   \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"streamId\":
        \"nathan-outside-temperature\",\n    \"data\": {\n      \"timestamp\": \"{{now()}}\",\n
        \     \"value\": \"{{state_attr('weather.home', 'temperature')}}\"\n    }\n
        \ },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\",\n    \"namespaceId\":
        \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"streamId\": \"nathan-outside-humidity\",\n
        \   \"data\": {\n      \"timestamp\": \"{{now()}}\",\n      \"value\": \"{{state_attr('weather.home',
        'humidity')}}\"\n    }\n  }\n]"
  mode: single
- id: '1627506438431'
  alias: Turn on Lights When Doors are Opened
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_door
    to: 'on'
    id: bedroom_door
  - platform: state
    entity_id: binary_sensor.office_door
    id: office_door
    to: 'on'
  - platform: state
    entity_id: binary_sensor.guest_bedroom_door
    id: guest_bedroom_door
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.couch_sleepers
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.living_room_motion_sensor_illuminance
    below: '5'
  action:
  - service: light.turn_on
    target:
      area_id: dining_room
    data:
      transition: 5
      brightness_pct: 40
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: office_door
        - condition: trigger
          id: guest_bedroom_door
      sequence:
      - service: light.turn_on
        target:
          area_id: hallway
        data: {}
    default: []
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    target:
      area_id: dining_room
    data:
      transition: 9
  - service: light.turn_off
    target:
      area_id: hallway
    data: {}
  mode: parallel
  max: 2
- id: '1628378848989'
  alias: Alexa, I'm Leaving
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.alexa_leaving
    from: 'off'
    to: 'on'
  - platform: time_pattern
    id: time
    hours: /5
  - platform: tag
    tag_id: leaving
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: time
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.alexa_leaving
        data: {}
    default:
    - service: alarm_control_panel.alarm_arm_away
      data: {}
      target:
        entity_id: alarm_control_panel.wyze_home_monitoring_system
    - parallel:
      - sequence:
        - wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.back_door_open
            from: 'on'
            to: 'off'
          continue_on_timeout: true
          timeout: '120'
        - delay:
            hours: 0
            minutes: 2
            seconds: 0
            milliseconds: 0
        - service: lock.lock
          target:
            entity_id: lock.back_door
          data: {}
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.alexa_leaving
          data: {}
      - service: script.start_tesla_and_turn_off_if_doesnt_leave_home
        data: {}
  mode: restart
- id: '1629672385421'
  alias: Notify of Object Detection
  description: ''
  trigger:
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_parking_pad'', ''summary'').person
      | default(0) > 0}}'
    id: person
  - platform: template
    id: person
    value_template: '{{ state_attr(''image_processing.doods_back_porch'', ''summary'').person
      | default(0) > 0}}'
  - platform: template
    id: person
    value_template: '{{ state_attr(''image_processing.doods_front_yard'', ''summary'').person
      | default(0) > 0}}'
  - platform: template
    id: person
    value_template: '{{ state_attr(''image_processing.doods_side_porch'', ''summary'').person
      | default(0) > 0}}'
  - platform: template
    id: person
    value_template: '{{ state_attr(''image_processing.doods_front_gate'', ''summary'').person
      | default(0) > 0}}'
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_parking_pad'', ''summary'').cat
      | default(0) > 0}}'
    id: cat
  - platform: template
    id: cat
    value_template: '{{ state_attr(''image_processing.doods_back_porch'', ''summary'').cat
      | default(0) > 0}}'
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_front_yard'', ''summary'').cat
      | default(0) > 0}}'
    id: cat
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_side_porch'', ''summary'').cat
      | default(0) > 0}}'
    id: cat
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_front_gate'', ''summary'').cat
      | default(0) > 0}}'
    id: cat
  condition:
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_back_porch''
        and states(''var.back_porch_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_parking_pad''
        and states(''var.parking_pad_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_front_yard''
        and states(''var.front_yard_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_front_gate''
        and states(''var.front_gate_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_side_porch''
        and states(''var.side_porch_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
  - condition: state
    entity_id: input_boolean.people_outside
    state: 'off'
  - condition: state
    entity_id: input_boolean.alexa_leaving
    state: 'off'
  - condition: template
    value_template: '{{ states.binary_sensor.back_door_open.last_changed | as_timestamp
      < now() | as_timestamp - 60* states(''input_number.camera_notification_refractory_period'')
      | float }}'
  - condition: template
    value_template: "{{\n   states.sensor.number_of_people_at_home.last_changed |
      as_timestamp < now() | as_timestamp - 60 * states('input_number.camera_notification_refractory_period')
      | float or states('sensor.number_of_people_at_home') | int < states('sensor.last_number_of_people_at_home')
      | int\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_parking_pad''
          }}'
      sequence:
      - service: camera.snapshot
        target:
          entity_id: camera.parking_pad
        data:
          filename: /config/www/doods/parking_pad.jpg
      - service: var.update
        data:
          entity_id: var.parking_pad_last_notified
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_back_porch''
          }}'
      sequence:
      - service: camera.snapshot
        data:
          filename: /config/www/doods/back_porch.jpg
        target:
          entity_id: camera.back_porch
      - service: var.update
        data:
          entity_id: var.back_porch_last_notified
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_front_yard''
          }}'
      sequence:
      - service: camera.snapshot
        data:
          filename: /config/www/doods/front_yard.jpg
        target:
          entity_id: camera.front_yard
      - service: var.update
        data:
          entity_id: var.front_yard_last_notified
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_front_gate''
          }}'
      sequence:
      - service: camera.snapshot
        data:
          filename: /config/www/doods/front_gate.jpg
        target:
          entity_id: camera.front_gate
      - service: var.update
        data:
          entity_id: var.front_gate_last_notified
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_side_porch''
          }}'
      sequence:
      - service: camera.snapshot
        data:
          filename: /config/www/doods/side_porch.jpg
        target:
          entity_id: camera.side_porch
      - service: var.update
        data:
          entity_id: var.side_porch_last_notified
    default: []
  - service: script.notify_sarah_and_nathan
    data_template:
      use_alexa: false
      message: '{% if trigger.id == ''person'' %} Person {% elif trigger.id == ''cat''
        %} Cat {% else %} Motion {% endif %} Detected {% if trigger.entity_id == ''image_processing.doods_back_porch''
        %} on Back Porch {% elif trigger.entity_id == ''image_processing.doods_parking_pad''
        %} on Parking Pad {% elif trigger.entity_id == ''image_processing.doods_front_yard''
        %} on Front Yard {% elif trigger.entity_id == ''image_processing.doods_front_gate''
        %} on Front Gate {% elif trigger.entity_id == ''image_processing.doods_side_porch''
        %} on Side Porch {% endif %}'
      image: https://zeryje96cijoslllthx5qprkm9drlxwz.ui.nabu.casa/local/doods/{%-
        if trigger.entity_id == 'image_processing.doods_back_porch' -%} back_porch.jpg
        {%- elif trigger.entity_id == 'image_processing.doods_parking_pad' -%} parking_pad.jpg
        {%- elif trigger.entity_id == 'image_processing.doods_front_yard' -%} front_yard.jpg
        {%- elif trigger.entity_id == 'image_processing.doods_front_gate' -%} front_gate.jpg
        {%- elif trigger.entity_id == 'image_processing.doods_side_porch' -%} side_porch.jpg
        {%- endif -%}
      image_type: jpg
      url: /lovelace/Cameras
      notify_nathan: true
      notify_sarah: true
      text_nathan: false
      text_sarah: false
      text_ice_contacts: false
      bypass_quiet_mode: false
  mode: queued
  max: 10
- id: '1630441700096'
  alias: Turn On AC When Headed Home and Leaving
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: proximity.home
    below: '80'
    id: headed_home
  - platform: numeric_state
    entity_id: proximity.home
    id: leaving_home
    above: '80'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: headed_home
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          message: AC Turned On
          more_info: '{% set fallback = {"to_state": {"attributes": {"nearest": "you"}}}
            %} {% set value = trigger | default(fallback) %} {% set value = value.to_state
            | default(fallback.to_state) %} {% set value = value.attributes | default(fallback.to_state.attributes)
            %} {% set value = value.nearest | default(fallback.to_state.attributes.nearest)
            %} {% set person = value.split('','') | join('' and'') %} {% set verb
            = ''is'' %} {% if person == ''you'' or value.split('','') | count > 1
            %} {% set verb = ''are'' %} {% endif %} Home Assistant has observed {{
            person }} {{ verb }} headed home and has turned on the AC. If this is
            not expected, click this notification to turn it off.'
          url: /lovelace/climate
          notify_nathan: true
          notify_sarah: true
          text_nathan: false
          text_sarah: false
          text_ice_contacts: false
          bypass_quiet_mode: false
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.keep_ac_in_eco
      - service: climate.set_preset_mode
        data:
          preset_mode: none
        target:
          entity_id: climate.kitchen
    - conditions:
      - condition: trigger
        id: leaving_home
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          message: AC Turned Off
          more_info: '{% set fallback = {"to_state": {"attributes": {"nearest": "you"}}}
            %} {% set value = trigger | default(fallback) %} {% set value = value.to_state
            | default(fallback.to_state) %} {% set value = value.attributes | default(fallback.to_state.attributes)
            %} {% set value = value.nearest | default(fallback.to_state.attributes.nearest)
            %} {% set person = value.split('','') | join('' and'') %} {% set verb
            = ''is'' %} {% if person == ''you'' or value.split('','') | count > 1
            %} {% set verb = ''are'' %} {% endif %} Home Assistant has observed {{
            person }} {{ verb }} leaving home and has turned off the AC. If this is
            not expected, click this notification to turn it back on.'
          url: /lovelace/climate
          notify_nathan: true
          notify_sarah: true
          text_nathan: false
          text_sarah: false
          text_ice_contacts: false
          bypass_quiet_mode: false
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.keep_ac_in_eco
      - service: climate.set_preset_mode
        data:
          preset_mode: Eco
        target:
          entity_id: climate.kitchen
    default: []
  mode: single
- id: '1637193742323'
  alias: Christmas Lights
  description: ''
  trigger:
  - platform: sun
    event: sunset
    id: sunset
    offset: -01:00:00
  - platform: state
    entity_id: input_boolean.night_mode
    id: sleep
    to: 'on'
    from: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id: binary_sensor.occupied
    id: occupation
  - platform: state
    entity_id: input_boolean.night_mode
    id: wake
    from: 'on'
    to: 'off'
  - platform: time
    at: 00:00:00
    id: midnight
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sunset
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.outside_christmas_lights
          - switch.wp1_smart_socket_2_socket
          - switch.wp1_smart_socket_socket
          - switch.sarah_s_fan_socket_1
          - switch.christmas_tree_socket_1
        data: {}
        enabled: false
      - service: light.turn_on
        target:
          entity_id:
          - light.side_porch
          - light.front_porch
          - light.garland
        data: {}
        enabled: false
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.sarah_s_fan_socket_1
          - switch.blue_door_on_off
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: sleep
        - condition: trigger
          id: midnight
      sequence:
      - service: switch.turn_off
        target:
          entity_id:
          - switch.outside_christmas_lights
          - switch.wp1_smart_socket_2_socket
          - switch.wp1_smart_socket_socket
          - switch.sarah_s_fan_socket_1
          - switch.christmas_tree_socket_1
        data: {}
        enabled: false
      - service: light.turn_off
        target:
          entity_id:
          - light.front_porch
          - light.side_porch
          - light.garland
        data: {}
        enabled: false
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.sarah_s_fan_socket_1
          - switch.blue_door_on_off
    - conditions:
      - condition: trigger
        id: wake
      - condition: state
        entity_id: input_boolean.visitors
        state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.garland
        data: {}
    default: []
  mode: queued
  max: 10
- id: '1643038941823'
  alias: Birthday Reminders
  description: ''
  trigger:
  - platform: time
    at: input_datetime.birthday_reminder_time
    id: notification_time
  - platform: state
    entity_id: calendar.birthdays
    id: next_birthday
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: notification_time
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{% set reminderDate = ((state_attr(''calendar.birthdays'',
              ''start_time'') | as_datetime - timedelta(days=states(''input_number.birthday_reminder_offset'')
              | int)) | as_local) %}

              {{ reminderDate.month == now().month and reminderDate.day == now().day
              }}'
          sequence:
          - service: script.notify_sarah_and_nathan
            data:
              message: "{{ state_attr('calendar.birthdays', 'message') }} \U0001F389"
              more_info: '{{ state_attr(''calendar.birthdays'', ''message'') }} is
                coming up on {{ state_attr(''calendar.birthdays'', ''start_time'')
                | as_timestamp | timestamp_custom("%A, %B %d", True)}}'
              notify_nathan: true
              notify_sarah: true
              text_nathan: false
              text_sarah: false
              text_ice_contacts: false
              bypass_quiet_mode: false
        - conditions:
          - condition: state
            entity_id: calendar.birthdays
            state: 'on'
          sequence:
          - service: script.notify_sarah_and_nathan
            data:
              message: '{{ state_attr(''calendar.birthdays'', ''message'') }}'
              more_info: "Today is {{ state_attr('calendar.birthdays', 'message')
                }} \U0001F382"
              notify_nathan: true
              notify_sarah: true
              text_nathan: false
              text_sarah: false
              text_ice_contacts: false
              bypass_quiet_mode: false
    - conditions:
      - condition: trigger
        id: next_birthday
      sequence:
      - wait_for_trigger:
        - platform: time
          at: input_datetime.birthday_reminder_time
      - service: script.notify_sarah_and_nathan
        data:
          message: "{{ state_attr('calendar.birthdays', 'message') }} \U0001F389"
          more_info: '{{ state_attr(''calendar.birthdays'', ''message'') }} is coming
            up on {{ state_attr(''calendar.birthdays'', ''start_time'') | as_timestamp
            | timestamp_custom("%A, %B %d", True)}}'
          notify_nathan: true
          notify_sarah: true
          text_nathan: false
          text_sarah: false
          text_ice_contacts: false
          bypass_quiet_mode: false
    default: []
  mode: parallel
  max: 2
- id: '1643585268012'
  alias: Bathroom Fan
  description: Toggle Fan Based on Humidity and Motion
  trigger:
  - platform: numeric_state
    entity_id: sensor.bathroom_humidity
    above: input_number.bathroom_humidity_threshold
    id: too_humid
  - platform: state
    entity_id: switch.bathroom_fan
    id: run_for_small_time
    to: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  - platform: state
    entity_id: switch.bathroom_fan
    id: run_for_long_time
    to: 'on'
    for:
      hours: 0
      minutes: 45
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.bathroom_humidity
    id: humidity_lowered
    below: input_number.bathroom_humidity_threshold
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: too_humid
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.bathroom_fan
        data: {}
    - conditions:
      - condition: trigger
        id: run_for_small_time
      - condition: numeric_state
        entity_id: sensor.bathroom_humidity
        below: input_number.bathroom_humidity_threshold
      - condition: state
        entity_id: binary_sensor.wyze_motion2
        state: 'off'
        for:
          hours: 0
          minutes: 5
          seconds: 0
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.bathroom_fan
        data: {}
    - conditions:
      - condition: trigger
        id: run_for_long_time
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.bathroom_fan
        data: {}
    - conditions:
      - condition: trigger
        id: humidity_lowered
      - condition: state
        entity_id: binary_sensor.wyze_motion2
        state: 'off'
        for:
          hours: 0
          minutes: 3
          seconds: 0
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.bathroom_fan
        data: {}
    default: []
  mode: restart
- id: '1645303901832'
  alias: Grow Room
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    id: sunrise
  - platform: template
    value_template: '{% set hours = states(''input_number.hours_of_plant_light'')|float
      %}

      {% set turn_off_time = (state_attr(''sun.sun'', ''next_rising'') | as_datetime
      - timedelta(days = 1) + timedelta(hours = hours))%}

      {{ now() > turn_off_time }}'
    id: time_expired
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sunrise
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.grow_light
    - conditions:
      - condition: trigger
        id: time_expired
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.grow_light
    default: []
  mode: single
- id: '1646491578504'
  alias: Keep AC in Eco
  description: ''
  trigger:
  - platform: state
    entity_id: climate.kitchen
    attribute: preset_mode
    to: none
  - platform: state
    entity_id: input_boolean.keep_ac_in_eco
  condition:
  - condition: state
    entity_id: input_boolean.keep_ac_in_eco
    state: 'on'
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: eco
    target:
      entity_id: climate.kitchen
  mode: queued
  max: 10
- id: '1587852659451'
  alias: Tv Night Scenes
  description: Turns on the appropriate living room scenes when the tv is playing
    at night
  trigger:
  - platform: sun
    event: sunset
    offset: -00:20:00
  - entity_id: media_player.living_room_tv_2
    for: 00:00:10
    platform: state
    to: playing
  - entity_id: media_player.living_room_tv_2
    platform: state
    to: paused
  - entity_id: media_player.living_room_tv_2
    for: 00:00:22
    platform: state
    to: standby
  - entity_id: media_player.living_room_tv_2
    platform: state
    to: 'off'
  condition:
  - condition: or
    conditions:
    - after: sunset
      condition: sun
      after_offset: -00:25:00
    - before: sunrise
      condition: sun
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  - condition: state
    entity_id: input_boolean.night_mode
    state: 'off'
  - condition: template
    value_template: '{{ trigger.from_state.state != "unavailable" }}'
  action:
  - data_template:
      entity_id: "{% if is_state('media_player.living_room_tv_2', 'playing') %}\n
        \ scene.tv_playing_at_night\n{% elif is_state('media_player.living_room_tv_2',
        'standby')\n   or is_state('media_player.living_room_tv_2', 'paused')\n%}\n
        \ scene.tv_paused_at_night\n{% else %}\n  scene.tv_off_at_night\n{% endif
        %}\n"
      transition: 10
    service: scene.turn_on
- id: '1587264300585'
  alias: Phone Alarm Sync
  description: Turns on alarm in bedroom when Pixel alarm goes off
  mode: parallel
  trigger:
  - platform: template
    id: ease_on_lights
    value_template: '{{ now() > states(''sensor.pixel_next_alarm'') | as_datetime
      - timedelta(minutes = 15) }}'
  - platform: template
    id: play_alarm
    value_template: '{{ now() > states(''sensor.pixel_next_alarm'') | as_datetime
      - timedelta(minutes = 1) }} '
  condition:
  - condition: state
    entity_id: person.nathan
    state: home
  action:
  - alias: either turn on lights or play alarm
    choose:
    - conditions:
      - condition: trigger
        id: ease_on_lights
      sequence:
        service: script.turn_on
        target:
          entity_id:
          - script.slow_alarm
    - conditions:
      - condition: trigger
        id: play_alarm
      sequence:
        service: script.turn_on
        target:
          entity_id:
          - script.alarm
- id: '1587255222033'
  alias: Run Roomba Every Morning
  description: ''
  trigger:
  - platform: time
    at: input_datetime.roomba_run_time
  condition: []
  action:
  - service: script.vacuum_rooms
    data:
      rooms:
      - '15'
      - '17'
      - '18'
      - '11'
      - '9'
      - '5'
- id: '1586661602545'
  alias: Turn On Master Bedroom Before Bed
  description: ''
  trigger:
  - at: '21:00:00'
    platform: time
  condition:
  - condition: state
    entity_id: group.master_room_people
    state: home
  - condition: state
    entity_id: input_boolean.night_mode
    state: 'off'
  action:
  - service: scene.turn_on
    data:
      entity_id: scene.bedtime
      transition: 15
- id: '1587443561409'
  alias: Notify of Intruder
  description: ''
  trigger:
  - entity_id: binary_sensor.kitchen_motion
    platform: state
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: alarm_control_panel.alexa_guard_ee9c2
      state: armed_away
    - condition: state
      entity_id: binary_sensor.occupied
      state: 'off'
  action:
  - data:
      message: Motion Detected in Living Room
      title: Hide Yo Kids, Hide Yo Wife!
    service: notify.notify
- id: jammed-lock-notifications
  alias: Notify when Door is Jammed
  description: ''
  trigger:
  - entity_id: lock.back_door
    platform: state
    to: jammed
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: Back Door is Jammed
      use_alexa: true
      notify_nathan: true
      notify_sarah: true
      text_nathan: false
      text_sarah: false
      text_ice_contacts: false
      bypass_quiet_mode: false
  mode: single
- id: shed-notifications
  alias: Notify when Shed Door is Opened
  description: ''
  trigger:
  - entity_id: binary_sensor.shed_door
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id:
    - input_boolean.people_outside
    state: 'off'
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: Shed Door Was Opened
      use_alexa: true
      notify_nathan: true
      notify_sarah: true
      text_nathan: false
      text_sarah: false
      text_ice_contacts: false
      bypass_quiet_mode: false
  mode: single
- id: '1587614908680'
  alias: Notify If Bedroom Door Changes When We're Away
  description: ''
  trigger:
  - entity_id: binary_sensor.wyze_door1
    platform: state
    to: 'off'
  - entity_id: binary_sensor.wyze_door1
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: group.master_room_people
    state: not_home
  action:
  - data:
      message: The bedroom door was {% if is_state('binary_sensor.wyze_door1', 'on')
        %}opened{% else %}closed{% endif %}!
      title: Someone is in your room
    service: notify.mobile_app_iphone
  - data:
      message: The bedroom door was {% if is_state('binary_sensor.wyze_door1', 'on')
        %}opened{% else %}closed{% endif %}!
      title: Someone is in your room
    service: notify.mobile_app_pixel
- id: '1604755622228'
  alias: Notify When There Are Packages
  description: Sends a notification to everyone when there are packages to be checked.
  trigger:
  - platform: state
    entity_id: sensor.mail_packages_delivered
    not_from: unavailable
  condition:
  - condition: numeric_state
    entity_id: sensor.mail_packages_delivered
    above: '0'
  - condition: state
    entity_id: input_boolean.night_mode
    state: 'off'
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: Package Delivered
      more_info: Packages have been delivered. Click to see package status.
      url: /lovelace/mail
      use_alexa: true
      notify_nathan: true
      notify_sarah: true
      text_nathan: false
      text_sarah: false
      text_ice_contacts: false
      bypass_quiet_mode: false
  mode: single
- id: '1604755622229'
  alias: Notify When There Is Mail
  description: Sends a notification to everyone when there is mail to be checked.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.mailbox_vibration
    to: 'on'
    id: vibration
  - platform: time
    at: 00:00:00
    id: midnight
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.mail_usps_mail
        above: '0'
      - condition: state
        entity_id: input_boolean.night_mode
        state: 'off'
      - condition: state
        entity_id:
        - input_boolean.mail_in_box
        state: 'off'
      - condition: trigger
        id: vibration
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          message: Mail Time
          more_info: Mail has been delivered to the mailbox. Click to see what you
            have.
          url: /lovelace/mail
          image: '{{ states(''sensor.mail_image_url'') }}'
          image_type: gif
          use_alexa: true
          notify_nathan: true
          notify_sarah: true
          text_nathan: false
          text_sarah: false
          text_ice_contacts: false
          bypass_quiet_mode: false
      - service: input_boolean.turn_on
        entity_id: input_boolean.mail_in_box
    default:
    - service: input_boolean.turn_off
      entity_id: input_boolean.mail_in_box
  mode: single
- id: '1586306345598'
  alias: Turn Off Fans When Cold
  description: Turn off the fans if the temperature drops below 40 and we're in bed
  trigger:
  - below: '60'
    entity_id: weather.home
    platform: numeric_state
    value_template: '{{ state.attributes.temperature }}'
  condition:
  - after: sunset
    before: sunrise
    before_offset: '+3:00:00'
    condition: sun
  action:
  - data: {}
    entity_id: group.fans
    service: homeassistant.turn_off
- id: '1587668411958'
  alias: Calendar Toggles WFH
  description: ''
  trigger:
  - entity_id: calendar.wfh
    platform: state
  condition:
  - condition: state
    entity_id: binary_sensor.is_workday
    state: 'on'
  action:
  - entity_id: input_boolean.wfh
    service: "{% if is_state('binary_sensor.is_workday', 'on') %}\n  input_boolean.turn_on\n{%
      else %}\n  input_boolean.turn_off\n{% endif %}"
- id: wfh_fan
  alias: WFH -- Fan
  mode: single
  trigger:
  - platform: numeric_state
    entity_id: sensor.bme280_temperature
    above: input_number.fan_temperature
    for: 00:01:00
  - platform: numeric_state
    entity_id: sensor.bme280_temperature
    below: input_number.fan_temperature
    for: 00:01:00
  - platform: state
    entity_id: binary_sensor.is_during_workday
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.wfh
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.occupied
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_number.fan_temperature
  condition:
  - condition: state
    entity_id: input_boolean.wfh
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_during_workday
    state: 'on'
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.bme280_temperature
        above: input_number.fan_temperature
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.office_plug
    default:
    - service: switch.turn_off
      target:
        entity_id: switch.office_plug
- id: mutesync
  alias: WFH -- Unmuting
  trigger:
  - platform: state
    entity_id: binary_sensor.muted
  condition:
  - condition: state
    entity_id: input_boolean.wfh
    state: 'on'
  - condition: state
    entity_id: binary_sensor.in_meeting
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.muted
        state: 'on'
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.before_unmute
      - service: scene.create
        data:
          scene_id: before_unmute
          snapshot_entities: []
    - conditions:
      - condition: state
        entity_id: binary_sensor.muted
        state: 'off'
      sequence:
      - service: scene.create
        data:
          scene_id: before_unmute
          snapshot_entities:
          - switch.office_plug
      - service: scene.turn_on
        target:
          entity_id: scene.wfh_unmuted
- id: wfh
  alias: Work from Home
  trigger:
  - platform: state
    entity_id: binary_sensor.is_during_workday
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.wfh
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: person.nathan
    from: not_home
    to: home
  - platform: state
    entity_id: person.sarah
    from: not_home
    to: home
  - platform: state
    entity_id: person.nathan
    from: home
    to: not_home
    id: nathan_left
  - platform: state
    entity_id: person.sarah
    from: home
    to: not_home
    id: sarah_left
  - platform: state
    entity_id: binary_sensor.occupied
    from: 'off'
    to: 'on'
  - platform: homeassistant
    event: start
  - platform: event
    event_type: automation_reloaded
  condition:
  - condition: state
    entity_id: input_boolean.wfh
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_during_workday
    state: 'on'
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: nathan_left
      sequence:
      - service: homeassistant.turn_off
        target:
          area_id: a78dc9b8222b47eebe4561988e57b0b0
        data: {}
    - conditions:
      - condition: trigger
        id: sarah_left
      sequence:
      - service: homeassistant.turn_off
        target:
          area_id: b2672f722c53428e92427703040fb764
        data: {}
        enabled: false
    alias: Someone leaves during the workday
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_morning
        state: 'on'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.sarah
            state: home
          sequence:
          - service: scene.turn_on
            target:
              entity_id: scene.wfh_bedroom
            data: {}
        enabled: false
        alias: Sarah Actions
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.nathan
            state: home
          sequence:
          - service: scene.turn_on
            target:
              entity_id: scene.wfh
            data: {}
          - wait_for_trigger:
            - platform: state
              entity_id: binary_sensor.office_door
              to: 'off'
              from: 'on'
            timeout: 03:00:00
            continue_on_timeout: true
          - service: media_player.media_stop
            target:
              entity_id: media_player.kitchen_echo_show
            data: {}
          - if:
            - condition: state
              entity_id: binary_sensor.office_door
              state: 'off'
            then:
            - service: media_player.select_source
              data:
                source: Office Echo
              target:
                entity_id: media_player.spotify_nathan_orick
            - delay: 00:00:05
            - service: media_player.media_play
              target:
                entity_id: media_player.spotify_nathan_orick
              data: {}
          - if:
            - condition: not
              conditions:
              - condition: state
                entity_id: person.sarah
                state: home
            then:
            - service: homeassistant.turn_off
              data: {}
              target:
                area_id: b2672f722c53428e92427703040fb764
            - service: climate.turn_off
              data: {}
              target:
                entity_id: climate.bedroom_thermostat
        alias: Nathan Actions
      - wait_template: '{{ is_state(''binary_sensor.is_lunch'', ''on'') }}'
        timeout: 05:00:00
        continue_on_timeout: false
    alias: Morning Actions
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.occupied
      state: 'on'
    - condition: state
      entity_id: input_boolean.wfh
      state: 'on'
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_lunch
        state: 'on'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.nathan
            state: home
          sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.wfh_relax
              transition: 600
          - service: switch.turn_off
            entity_id: switch.office_plug
          - wait_for_trigger:
            - platform: state
              entity_id:
              - binary_sensor.kitchen_q_sensor_sensor_state_motion
              to: 'on'
          - service: media_player.play_media
            data:
              media_content_id: amzn1.ask.skill.8e0fbda3-b70c-481d-878f-a2e5e17158c9
              media_content_type: skill
            target:
              entity_id:
              - media_player.kitchen_echo_show
        alias: Nathan Actions
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.sarah
            state: home
          sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.wfh_relax_bedroom
              transition: 600
        alias: Sarah Actions
        enabled: false
      - wait_for_trigger:
        - platform: state
          entity_id:
          - binary_sensor.living_room_motion
          to: 'on'
        timeout:
          minutes: 30
      - service: media_player.media_stop
        target:
          entity_id: media_player.kitchen_echo_show
        data: {}
      - service: media_player.turn_on
        target:
          entity_id: media_player.living_room_tv
        data: {}
      - service: media_player.select_source
        target:
          entity_id: media_player.living_room_tv
        data:
          source: '{{states("input_select.lunch_tv_app")}}'
      - wait_template: '{{ is_state(''binary_sensor.is_afternoon'', ''on'') }}'
        timeout:
          hours: '5'
        continue_on_timeout: false
    alias: Lunch Actions
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.occupied
      state: 'on'
    - condition: state
      entity_id: input_boolean.wfh
      state: 'on'
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_afternoon
        state: 'on'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.nathan
            state: home
          sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.wfh
              transition: 60
          - service: automation.trigger
            data:
              skip_condition: true
            target:
              entity_id: automation.wfh_fan
        alias: Nathan Actions
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.sarah
            state: home
          sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.wfh_bedroom
              transition: 60
        alias: Sarah Actions
        enabled: false
      - wait_template: '{{ is_state(''binary_sensor.is_evening'', ''on'') }}'
        timeout:
          hours: '5'
        continue_on_timeout: false
    alias: Afternoon Actions
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.occupied
      state: 'on'
    - condition: state
      entity_id: input_boolean.wfh
      state: 'on'
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_evening
        state: 'on'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.nathan
            state: home
          sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.wfh_relax
              transition: 600
          - service: switch.turn_off
            entity_id: switch.office_plug
        alias: Nathan Actions
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.sarah
            state: home
          sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.wfh_relax_bedroom
              transition: 600
        alias: Sarah Actions
        enabled: false
      - delay: 00:10:00
      - service: light.turn_off
        data:
          transition: 10
        target:
          area_id: a78dc9b8222b47eebe4561988e57b0b0
      - service: light.turn_off
        data:
          transition: 10
        target:
          area_id: b2672f722c53428e92427703040fb764
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.wfh
    alias: Evening Actions
  mode: restart
- id: '1586737651295'
  alias: Toggle Automations When There Are Visitors
  description: ''
  trigger:
  - entity_id: input_boolean.visitors
    platform: state
  condition: []
  action:
  - entity_id: group.visitor_automations
    service: "{% if is_state('input_boolean.visitors', 'on') %}\n  homeassistant.turn_off\n{%
      else %}\n  homeassistant.turn_on\n{% endif %}"
- id: '1587273614675'
  alias: Calendar Toggles Visitors
  description: ''
  trigger:
  - entity_id: calendar.visitors
    platform: state
  condition: []
  action:
  - entity_id: input_boolean.visitors
    service: "{% if is_state('calendar.visitors', 'on') %}\n  input_boolean.turn_on\n{%
      else %}\n  input_boolean.turn_off\n{% endif %}"
- id: known_visitor_presence_toggle
  alias: Known Visitor Presence Toggles Visitor Mode
  description: When a visitor that is on the list shows up, visitor mode turns on
    automatically
  trigger:
  - entity_id: group.known_visitors
    platform: state
  condition: []
  action:
  - entity_id: input_boolean.visitors
    service: '{% if is_state(''group.known_visitors'', ''home'') %} input_boolean.turn_on
      {% else %} input_boolean.turn_off {% endif %}'
- id: '1588639275094'
  alias: Toggle Night Mode
  description: ''
  trigger:
  - entity_id: binary_sensor.everyone_in_bed
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: calendar.alarm
    from: 'off'
    platform: state
    to: 'on'
  - platform: template
    value_template: '{{ states(''sensor.time'') >= states(''input_datetime.morning'')
      }}'
  action:
  - entity_id: input_boolean.night_mode
    service: '{% if trigger.entity_id == ''binary_sensor.everyone_in_bed'' %} input_boolean.turn_on
      {% else %} input_boolean.turn_off {% endif %}'
- id: '1587677710011'
  alias: Toggle Night Automations
  description: ''
  trigger:
  - entity_id: input_boolean.night_mode
    platform: state
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.night_mode
        state: 'on'
      sequence:
      - service: homeassistant.turn_on
        data: {}
        target:
          entity_id:
          - group.bedtime_automations
          - input_boolean.quiet_mode
    - conditions:
      - condition: state
        entity_id: input_boolean.night_mode
        state: 'off'
      sequence:
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.quiet_mode
          - group.bedtime_automations
- id: '1587996987502'
  alias: Night Mode -- Set Night State for All Devices
  description: ''
  trigger:
  - entity_id: input_boolean.night_mode
    platform: state
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.couch_sleepers
        state: 'off'
      - condition: state
        entity_id: input_boolean.office_sleepers
        state: 'off'
      sequence:
      - entity_id: group.all_lights
        service: homeassistant.turn_off
      - service: switch.turn_off
        entity_id: switch.office_plug
    - conditions:
      - condition: state
        entity_id: input_boolean.couch_sleepers
        state: 'off'
      - condition: state
        entity_id: input_boolean.office_sleepers
        state: 'on'
      sequence:
      - service: homeassistant.turn_off
        target:
          entity_id: group.public_lights
        data: {}
    - conditions:
      - condition: state
        entity_id: input_boolean.couch_sleepers
        state: 'on'
      - condition: state
        entity_id: input_boolean.office_sleepers
        state: 'off'
      sequence:
      - service: homeassistant.turn_off
        target:
          area_id: a78dc9b8222b47eebe4561988e57b0b0
        data: {}
      - service: homeassistant.turn_off
        target:
          entity_id: group.kitchen_lights
        data: {}
      - service: switch.turn_off
        entity_id: switch.office_plug
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id: light.hallway
    - conditions:
      - condition: state
        entity_id: input_boolean.couch_sleepers
        state: 'on'
      - condition: state
        entity_id: input_boolean.office_sleepers
        state: 'on'
      sequence:
      - service: homeassistant.turn_off
        target:
          entity_id: group.kitchen_lights
        data: {}
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id: light.hallway
  - service: switch.turn_on
    entity_id: switch.nathans_fan
  - service: lock.lock
    entity_id: lock.back_door
  - data: {}
    entity_id: media_player.living_room_tv
    service: media_player.turn_off
  - service: switch.turn_off
    entity_id: switch.truck
  - alias: Reminder to Let Water Drip
    choose:
    - conditions:
      - condition: template
        value_template: '{{ state_attr(''weather.home'', ''forecast'') | map(attribute=''templow'')
          | first < 32}}'
      sequence:
      - service: notify.alexa_media
        data:
          data:
            type: tts
          message: Don't forget to let the water drip. The low for tonight is {{ state_attr('weather.home',
            'forecast') | map(attribute='templow') | first}}
          target: media_player.bedroom_echo
    default: []
- id: couch_sleepers
  alias: Toggle Automations When Someone is Sleeping on the Couch
  description: ''
  trigger:
  - entity_id: input_boolean.couch_sleepers
    platform: state
  condition: []
  action:
  - entity_id: group.couch_sleeping_automations
    service: '{% if is_state(''input_boolean.couch_sleepers'', ''on'') %} homeassistant.turn_off
      {% else %} homeassistant.turn_on {% endif %}'
- id: '1589240357141'
  alias: Turn Off Public Lights After No Motion
  description: ''
  trigger:
  - entity_id: binary_sensor.public_space_motion
    for: 0:05:00
    platform: state
    to: 'off'
  condition: []
  action:
  - data: {}
    entity_id: group.public_lights
    service: homeassistant.turn_off
- id: '1587438080867'
  alias: Turn On Kitchen if Motion
  description: ''
  trigger:
  - entity_id:
    - binary_sensor.kitchen_q_sensor_sensor_state_motion
    platform: state
    to: 'on'
  action:
  - data: {}
    entity_id: group.kitchen_lights
    service: homeassistant.turn_on
- id: '1587438080868'
  alias: Turn Off Kitchen After No Motion
  description: ''
  trigger:
  - entity_id: binary_sensor.kitchen_q_sensor_sensor_state_motion
    for:
      seconds: '{{ states(''input_number.kitchen_motion_timeout'') | int * 60 }}'
    platform: state
    to: 'off'
  condition: []
  action:
  - data: {}
    entity_id: group.kitchen_lights
    service: homeassistant.turn_off
  - service: light.turn_off
    entity_id: light.back_door
- id: bathroom_on_motion
  alias: Toggle Bathroom on Motion
  description: ''
  mode: restart
  trigger:
  - entity_id: binary_sensor.wyze_motion2
    platform: state
    to: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.night_mode
        state: 'off'
      sequence:
      - service: script.tier_toggle_devices
        data:
          action: true
          entity_1:
            entity_id: light.bath_1
          entity_2:
            entity_id: light.bath_2
          entity_3:
            entity_id: light.bath_3
          entity_4:
            entity_id: light.bath_4
          entity_5:
            entity_id: light.bath_5
          entity_6:
            entity_id: light.bath_6
          entity_7:
            entity_id: light.bath_ceiling
          delay: 250
    - conditions:
      - condition: state
        entity_id: input_boolean.night_mode
        state: 'on'
      sequence:
      - service: scene.turn_on
        entity_id: scene.bathroom_night
  - service: scene.turn_on
    data_template:
      entity_id: '{% if is_state("input_boolean.night_mode", "on") %} scene.bathroom_night
        {% else %} scene.bathroom_day {% endif %}'
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.wyze_motion2
      to: 'off'
      for:
        seconds: '{% set pee_timeout = states(''input_number.pee_timeout'') | int
          * 60 %} {% set poo_timeout = states(''input_number.poo_timeout'') | int
          * 60 %} {% set night_timeout = states(''input_number.night_timeout'') |
          int * 60 %} {% if is_state("binary_sensor.bathroom_door", "off") %} {% set
          action = "poo" %} {% else %} {% set action = "pee" %} {% endif %} {% if
          action == "poo" %} {{ poo_timeout }} {% elif is_state(''input_boolean.night_mode'',
          ''on'') %} {{ night_timeout }} {% else %} {{ pee_timeout }} {% endif %}'
    timeout: 3600
    continue_on_timeout: true
  - service: script.tier_toggle_devices
    data:
      action: false
      entity_1:
        entity_id: light.bath_1
      entity_2:
        entity_id: light.bath_2
      entity_3:
        entity_id: light.bath_3
      entity_4:
        entity_id: light.bath_4
      entity_5:
        entity_id: light.bath_5
      entity_6:
        entity_id: light.bath_6
      entity_7:
        entity_id: light.bath_ceiling
      delay: 1000
- id: guest_bathroom_on_motion
  alias: Toggle Guest Bathroom on Motion
  description: ''
  mode: restart
  trigger:
  - entity_id: binary_sensor.wyze_motion1
    platform: state
    to: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.night_mode
        state: 'off'
      sequence:
      - service: script.tier_toggle_devices
        data:
          action: true
          entity_1:
            entity_id: light.guest_bath_1
          entity_2:
            entity_id: light.guest_bath_3
          entity_3:
            entity_id: light.guest_bath_2
          delay: 250
    - conditions:
      - condition: state
        entity_id: input_boolean.night_mode
        state: 'on'
      sequence:
      - service: scene.turn_on
        entity_id: scene.guest_bathroom_night
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.wyze_motion1
      to: 'off'
      for:
        seconds: '{% set pee_timeout = states(''input_number.pee_timeout'') | int
          * 60 %} {% set poo_timeout = states(''input_number.poo_timeout'') | int
          * 60 %} {% set night_timeout = states(''input_number.night_timeout'') |
          int * 60 %} {% if is_state("binary_sensor.guest_bathroom_door", "off") %}
          {% set action = "poo" %} {% else %} {% set action = "pee" %} {% endif %}
          {% if action == "poo" %} {{ poo_timeout }} {% elif is_state(''input_boolean.night_mode'',
          ''on'') %} {{ night_timeout }} {% else %} {{ pee_timeout }} {% endif %}'
    timeout: 3600
    continue_on_timeout: true
  - service: script.tier_toggle_devices
    data:
      action: false
      entity_1:
        entity_id: light.guest_bath_1
      entity_2:
        entity_id: light.guest_bath_3
      entity_3:
        entity_id: light.guest_bath_2
      delay: 1000
- id: guest_air_freshener
  alias: Turn On Air Freshener When Bathroom Is Occupied When There Are Scheduled
    Visitors
  description: ''
  trigger:
  - entity_id: light.guest_bathroom
    platform: state
  condition:
  - condition: state
    entity_id: input_boolean.visitors
    state: 'on'
  action:
  - service: '{% if is_state(''light.guest_bathroom'', ''on'') %} switch.turn_on {%
      else %} switch.turn_off {% endif %}'
    data:
      entity_id: switch.guest_air_freshener
- id: '1586735161292'
  alias: Turn Off Everything When Everyone Leaves
  description: ''
  trigger:
  - entity_id: binary_sensor.occupied
    for: 00:05:00
    platform: state
    to: 'off'
  condition: []
  action:
  - data: {}
    entity_id: group.all_lights
    service: homeassistant.turn_off
  - data: {}
    entity_id: media_player.living_room_tv
    service: media_player.turn_off
  - entity_id: group.fans
    service: homeassistant.turn_off
  - service: climate.turn_off
    entity_id: climate.bedroom_thermostat
  - service: switch.turn_on
    entity_id: switch.mudroom_camera
  - service: script.vacuum_rooms
    data:
      rooms:
      - '1'
      - '8'
      - '15'
      - '17'
      - '18'
      - '9'
      - '5'
      - '11'
  - service: alarm_control_panel.alarm_arm_away
    entity_id: alarm_control_panel.alexa_guard_ee9c2
  - service: switch.turn_off
    entity_id: switch.truck
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.coffee_kettle
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: climate.kitchen
        state: 'off'
    then:
    - service: climate.set_preset_mode
      target:
        entity_id: climate.kitchen
      data:
        preset_mode: eco
      enabled: true
- id: '1587162726799'
  alias: First Person Home
  description: ''
  trigger:
  - entity_id: binary_sensor.occupied
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: sun
        after: sunset
        after_offset: -01:00:00
      sequence:
      - service: light.turn_on
        target:
          entity_id: '{{ lights }}'
    default: []
  - service: switch.turn_off
    entity_id: switch.mudroom_camera
  - service: alarm_control_panel.alarm_disarm
    entity_id: alarm_control_panel.alexa_guard_ee9c2
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: climate.kitchen
        state: 'off'
    then:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.keep_ac_in_eco
    - service: climate.set_preset_mode
      target:
        entity_id: climate.kitchen
      data:
        preset_mode: none
      enabled: true
  - data: {}
    entity_id: vacuum.rooben
    service: vacuum.stop
  - wait_template: '{{ is_state(''vacuum.rooben'', ''idle'') }}'
    continue_on_timeout: true
    timeout: 00:00:10
  - data: {}
    entity_id: vacuum.rooben
    service: vacuum.return_to_base
  - delay: 00:10:00
  - service: light.turn_off
    target:
      entity_id: '{{ lights }}'
  variables:
    lights:
    - light.front_porch
    - light.back_porch
    - light.side_porch
    - light.laundry_room
    - light.back_door
    - light.front_door
- id: '1587673304305'
  alias: Turn On Kitchen When Leaving Bedroom
  description: ''
  trigger:
  - entity_id: binary_sensor.bedroom_door
    platform: state
    to: 'on'
  condition: []
  action:
  - data: {}
    target:
      area_id: 1f75029558cd46f69ddb7d3a9f537726
    service: light.turn_on
- id: '1651167205604'
  alias: Tag Office is scanned
  description: ''
  trigger:
  - platform: tag
    tag_id: office
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.spotify_nathan_orick
        state: playing
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.spotify_nathan_orick
            attribute: source
            state: Office Echo
          sequence:
          - service: media_player.select_source
            data:
              source: Everywhere
            target:
              entity_id: media_player.spotify_nathan_orick
        default:
        - service: media_player.select_source
          data:
            source: Office Echo
          target:
            entity_id: media_player.spotify_nathan_orick
    default:
    - service: media_player.select_source
      data:
        source: Office Echo
      target:
        entity_id: media_player.spotify_nathan_orick
    - wait_template: '{{is_state_attr(''media_player.spotify_nathan_orick'', ''source'',
        ''Office Echo'')}}'
      timeout: '5'
      continue_on_timeout: true
    - service: media_player.media_play
      data: {}
      target:
        entity_id: media_player.spotify_nathan_orick
  mode: single
- id: '1651260896457'
  alias: Tag Back Porch Speakers is scanned
  description: ''
  trigger:
  - platform: tag
    tag_id: back-porch
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.spotify_nathan_orick
        state: playing
      sequence:
      - service: media_player.media_pause
        data: {}
        target:
          entity_id: media_player.spotify_nathan_orick
    default:
    - service: media_player.select_source
      data:
        source: Back Porch
      target:
        entity_id: media_player.spotify_nathan_orick
    - wait_template: '{{is_state_attr(''media_player.spotify_nathan_orick'', ''source'',
        ''Back Porch'')}}'
      timeout: '10'
      continue_on_timeout: true
    - service: media_player.media_play
      data: {}
      target:
        entity_id: media_player.spotify_nathan_orick
  mode: single
- id: '1651684693891'
  alias: Switch Turns On Showering Mode
  description: Turn on news and fan when switch is toggled twice
  trigger:
  - platform: state
    entity_id: binary_sensor.bathroom_fan_input
    not_from: unavailable
    not_to: unavailable
  condition: []
  action:
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.bathroom_fan_input
      for:
        hours: 0
        minutes: 0
        seconds: 0
    timeout:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
    continue_on_timeout: false
  - service: media_player.play_media
    data:
      entity_id: media_player.bathroom_echo
      media_content_id: amzn1.ask.skill.8e0fbda3-b70c-481d-878f-a2e5e17158c9
      media_content_type: skill
  - delay:
      hours: 0
      minutes: 0
      seconds: 4
      milliseconds: 0
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.bathroom_fan
  mode: single
- id: '1653422336570'
  alias: Start Tesla
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_button.start_tesla
  condition: []
  action:
  - service: script.start_tesla
    data: {}
  mode: single
- id: '1654447518234'
  alias: Laundry Notifcations
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.washer_power_switch_electric_consumption_w
    below: '3'
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition: []
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: Laundry Done
      more_info: Washing machine finished running
      use_alexa: true
      notify_sarah: true
      notify_nathan: true
      text_nathan: false
      text_sarah: false
      text_ice_contacts: false
      bypass_quiet_mode: false
  mode: single
- id: '1654459157218'
  alias: Tesla Charging Notifications
  description: ''
  trigger:
  - platform: time
    at: '10:00:00'
  condition:
  - condition: time
    before: 00:00:00
    weekday:
    - mon
  action:
  - parallel:
    - if:
      - condition: numeric_state
        entity_id: sensor.last_week_s_charging_cost_at_rusty_and_donna_s
        above: '0'
      then:
      - service: script.notify_sarah_and_nathan
        data:
          message: You Owe Mom ${{states('sensor.last_week_s_charging_cost_at_rusty_and_donna_s')
            | round(2, "half")}} for Charging
          more_info: Click to pay
          use_alexa: true
          notify_sarah: true
          notify_nathan: true
          text_nathan: false
          text_sarah: false
          text_ice_contacts: false
          bypass_quiet_mode: false
          url: https://www.paypal.com/myaccount/transfer/homepage/contact-list
  mode: single
- id: '1654714270155'
  alias: Keyboard Trigger
  description: ''
  trigger:
  - platform: webhook
    webhook_id: willy-wonka-gd1VAN7gY8jO_C9yQtmrhBMh
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{trigger.query.id == "wanka"}}'
      sequence:
      - service: light.turn_on
        data:
          rgb_color:
          - 225
          - 0
          - 255
        target:
          area_id: 87c768ba445d4b398f17ec723dc54377
      - service: media_player.select_source
        data:
          source: Living Room Echo
        target:
          entity_id: media_player.spotify_nathan_orick
      - delay:
          hours: 0
          minutes: 0
          seconds: 3
          milliseconds: 0
      - service: media_player.play_media
        data:
          media_content_id: https://open.spotify.com/track/4f4HLo6L9CJNhD4mEYxrCL?si=2939352bd4da45f4
          media_content_type: music
          enqueue: play
        target:
          entity_id: media_player.spotify_nathan_orick
      - repeat:
          count: '3'
          sequence:
          - service: light.turn_on
            data:
              transition: 7
              rgb_color:
              - 20
              - 7
              - 213
            target:
              area_id: 87c768ba445d4b398f17ec723dc54377
          - delay:
              hours: 0
              minutes: 0
              seconds: 7
              milliseconds: 0
          - service: light.turn_on
            data:
              transition: 7
              rgb_color:
              - 5
              - 230
              - 20
            target:
              area_id: 87c768ba445d4b398f17ec723dc54377
          - delay:
              hours: 0
              minutes: 0
              seconds: 7
              milliseconds: 0
          - service: light.turn_on
            data:
              transition: 7
              rgb_color:
              - 226
              - 230
              - 5
            target:
              area_id: 87c768ba445d4b398f17ec723dc54377
          - delay:
              hours: 0
              minutes: 0
              seconds: 7
              milliseconds: 0
          - service: light.turn_on
            data:
              transition: 7
              rgb_color:
              - 230
              - 170
              - 5
            target:
              area_id: 87c768ba445d4b398f17ec723dc54377
          - delay:
              hours: 0
              minutes: 0
              seconds: 7
              milliseconds: 0
          - service: light.turn_on
            data:
              transition: 7
              rgb_color:
              - 230
              - 5
              - 222
            target:
              area_id: 87c768ba445d4b398f17ec723dc54377
          - delay:
              hours: 0
              minutes: 0
              seconds: 7
              milliseconds: 0
    - conditions:
      - condition: template
        value_template: '{{trigger.query.id == "c-chord"}}'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.living_room_lamp
    - conditions:
      - condition: template
        value_template: '{{trigger.query.id == "f-chord"}}'
      sequence:
      - service: light.turn_on
        data:
          color_temp: 373
        target:
          entity_id: light.living_room_lamp
    - conditions:
      - condition: template
        value_template: '{{trigger.query.id == "nbc"}}'
      sequence:
      - service: media_player.turn_on
        data: {}
        target:
          entity_id:
          - media_player.living_room_tv
      - service: media_player.select_source
        data:
          source: com.peacock.peacockfiretv
        target:
          entity_id:
          - media_player.living_room_tv
    - conditions:
      - condition: template
        value_template: '{{trigger.query.id == "g-chord"}}'
      sequence:
      - service: media_player.media_pause
        data: {}
        target:
          entity_id: media_player.spotify_nathan_orick
      - service: light.turn_off
        data: {}
        target:
          area_id: 87c768ba445d4b398f17ec723dc54377
      - service: media_player.turn_off
        data: {}
        target:
          entity_id:
          - media_player.living_room_tv
    - conditions:
      - condition: template
        value_template: '{{trigger.query.id == "furElise"}}'
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          message: Nice Job Showoff
          use_alexa: true
    - conditions:
      - condition: template
        value_template: '{{trigger.query.id == "am-chord"}}'
      sequence:
      - service: light.turn_on
        data:
          color_temp: 369
        target:
          entity_id: light.living_room_ceiling
    - conditions:
      - condition: template
        value_template: '{{trigger.query.id == "cfirst-chord"}}'
      sequence:
      - service: light.turn_on
        data:
          color_temp: 414
          flash: short
        target:
          area_id: 87c768ba445d4b398f17ec723dc54377
      - service: light.turn_on
        data:
          color_temp: 369
        target:
          area_id: 87c768ba445d4b398f17ec723dc54377
    - conditions:
      - condition: template
        value_template: '{{trigger.query.id == "seq-egc"}}'
      sequence:
      - service: light.turn_on
        data:
          flash: short
        target:
          entity_id: light.living_room_ceiling_1
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - service: light.turn_on
        data:
          flash: short
        target:
          entity_id:
          - light.living_room_ceiling_2
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - service: light.turn_on
        data:
          flash: short
        target:
          entity_id: light.living_room_lamp
    - conditions:
      - condition: template
        value_template: '{{trigger.query.id == "seq-cge"}}'
      sequence:
      - service: light.turn_on
        data:
          flash: short
        target:
          entity_id: light.living_room_lamp
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - service: light.turn_on
        data:
          flash: short
        target:
          entity_id:
          - light.living_room_ceiling_2
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - service: light.turn_on
        data:
          flash: short
        target:
          entity_id: light.living_room_ceiling_1
    - conditions:
      - condition: template
        value_template: '{{trigger.query.id == "seq-ecg"}}'
      sequence:
      - service: light.turn_on
        data:
          flash: short
        target:
          entity_id: light.living_room_ceiling_1
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - service: light.turn_on
        data:
          flash: short
        target:
          entity_id:
          - light.living_room_lamp
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - service: light.turn_on
        data:
          flash: short
        target:
          entity_id: light.living_room_ceiling_2
    - conditions:
      - condition: template
        value_template: '{{trigger.query.id == "jingleBells"}}'
      sequence:
      - event: jingle-bells
        event_data: {}
  mode: restart
- id: '1656682088465'
  alias: AutoHotKeys
  description: ''
  trigger:
  - platform: webhook
    webhook_id: autohotkeys-ud-K0buAMNufeBDPqaOvFcyh
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{trigger.query.id == "toggle_office_lights"}}'
    then:
    - service: light.toggle
      data:
        brightness_pct: 100
      target:
        area_id: a78dc9b8222b47eebe4561988e57b0b0
  mode: restart
- id: '1656689582285'
  alias: Tesla Charging Cost Notifications
  description: ''
  trigger:
  - platform: time
    at: input_datetime.birthday_reminder_time
  condition: []
  action:
  - if:
    - condition: time
      weekday:
      - mon
      before: 00:00:00
    then:
    - service: script.notify_sarah_and_nathan
      data:
        message: Tesla Charging Summary
        url: /lovelace/tesla
        more_info: 'Cost at Home so far this Month: ${{states(''sensor.tesla_home_monthly_charging_cost'')}}

          Cost at Rusty and Donna''s Last Week: ${{states(''sensor.last_week_s_charging_cost_at_rusty_and_donna_s'')}}

          Click for more'
        notify_sarah: true
        notify_nathan: true
        use_alexa: false
        text_nathan: false
        text_sarah: false
        text_ice_contacts: false
        bypass_quiet_mode: false
  - if:
    - condition: template
      value_template: '{{ now().day == 1 }}'
    then:
    - service: script.notify_sarah_and_nathan
      data:
        message: '{{(now().replace(day=1) - timedelta(days=1)).strftime(''%B'')}}
          Tesla Charging Summary'
        url: /lovelace/tesla
        more_info: 'Home Charging: ${{states(''sensor.home_charging_cost_last_month'')}}

          Garrett Charging: ${{states(''sensor.others_charging_at_home_cost_last_month'')}}'
        notify_sarah: true
        notify_nathan: true
        use_alexa: false
        text_nathan: false
        text_sarah: false
        text_ice_contacts: false
        bypass_quiet_mode: false
  mode: single
- id: '1656699090791'
  alias: Ikea Shortcut Button -- Guest Bedroom
  description: ''
  trigger:
  - device_id: 8845d3be13bedb8d93a8ef44f4f2e90a
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: turn_on
    id: single
  - device_id: 8845d3be13bedb8d93a8ef44f4f2e90a
    domain: zha
    platform: device
    type: remote_button_long_press
    subtype: dim_up
    id: long-down
  - device_id: 8845d3be13bedb8d93a8ef44f4f2e90a
    domain: zha
    platform: device
    type: remote_button_long_release
    subtype: dim_up
    id: long-up
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: single
      sequence:
      - if:
        - condition: template
          value_template: '{% set area_lights = expand(area_entities(''Guest Bedroom''))
            | selectattr(''domain'', ''eq'', ''light'') | list %}

            {% set lights_on = area_lights | selectattr(''state'', ''eq'', ''on'')
            | list | count > 0 %}


            {{lights_on}}'
        then:
        - service: light.turn_off
          data:
            transition: 1
          target:
            area_id: 78d9e7596f014179b37ca4129fcb9a68
        else:
        - service: light.turn_on
          data:
            transition: 1
            brightness_pct: 100
          target:
            entity_id: light.guest_bedroom_lamp
    - conditions:
      - condition: trigger
        id: long-down
      sequence:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.guest_bedroom_fan
    default: []
  mode: single
- id: '1658177531312'
  alias: Ikea Shortcut Button -- Living Room
  description: ''
  trigger:
  - device_id: 01632afbe7a0628355b82d4ddf1c27da
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: turn_on
    id: single
  - device_id: 01632afbe7a0628355b82d4ddf1c27da
    domain: zha
    platform: device
    type: remote_button_long_press
    subtype: dim_up
    id: long-down
  - device_id: 01632afbe7a0628355b82d4ddf1c27da
    domain: zha
    platform: device
    type: remote_button_long_release
    subtype: dim_up
    id: long-up
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: long-down
      sequence:
      - if:
        - condition: template
          value_template: '{% set area_lights = expand(area_entities(''Living Room''))
            | selectattr(''domain'', ''eq'', ''light'') | list %}

            {% set lights_on = area_lights | selectattr(''state'', ''eq'', ''on'')
            | list | count > 0 %}


            {{lights_on}}'
        then:
        - service: light.turn_off
          data:
            transition: 1
          target:
            area_id: living_space
        else:
        - service: light.turn_on
          data:
            transition: 1
            brightness_pct: 100
          target:
            device_id:
            - c730d517cc9d462698579ca079ca5754
            - d424c5c84ec447c58f8161044e5cf3a3
            - bf03597d00814f079ad3d5b9a625a708
    - conditions:
      - condition: trigger
        id: single
      sequence:
      - service: light.toggle
        data:
          brightness_pct: 100
        target:
          entity_id: light.living_room_lamp
    default: []
  mode: single
- id: '1663336492808'
  alias: House Keeper Mode
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.house_keeper_mode
    to: 'on'
    id: turned_on
  - platform: state
    entity_id:
    - input_boolean.house_keeper_mode
    to: 'off'
    id: turned_off
  - platform: state
    entity_id:
    - binary_sensor.inside_motion
    to: 'off'
    for:
      hours: 0
      minutes: 20
      seconds: 0
    id: no_motion
  - platform: state
    entity_id:
    - binary_sensor.front_door_motion
    to: 'on'
    id: front_door_motion
  - platform: calendar
    event: start
    offset: '-12:0:0'
    entity_id: calendar.cleaners
    id: twelve_hours_before
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: turned_on
      sequence:
      - service: automation.turn_off
        data:
          stop_actions: true
        target:
          entity_id:
          - automation.bathroom_fan
          - automation.new_automation_2
          - automation.first_person_home
          - automation.laundry_notifcations
          - automation.morning_routine
          - automation.motion_mudroom_2
          - automation.switch_turns_on_showering_mode
          - automation.turn_on_bathroom_when_motion_detected_2
          - automation.turn_on_guest_bathroom_when_motion_detected_3
          - automation.turn_off_everything_when_people_leave
          - automation.no_motion_kitchen
          - automation.kitchen_motion
          - automation.turn_on_kitchen_when_leaving_bedroom
          - automation.turn_on_lights_when_doors_are_opened
          - automation.work_from_home
      - service: homeassistant.turn_on
        data: {}
        target:
          entity_id: group.all_lights
        enabled: false
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.quiet_mode
      - service: alarm_control_panel.alarm_disarm
        data: {}
        target:
          entity_id: alarm_control_panel.wyze_home_monitoring_system
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.cleaning
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.enable_vacuum
    - conditions:
      - condition: state
        entity_id: input_boolean.house_keeper_mode
        state: 'off'
        enabled: false
      - condition: trigger
        id: turned_off
      sequence:
      - service: automation.turn_on
        data: {}
        target:
          entity_id:
          - automation.bathroom_fan
          - automation.new_automation_2
          - automation.first_person_home
          - automation.laundry_notifcations
          - automation.morning_routine
          - automation.motion_mudroom_2
          - automation.switch_turns_on_showering_mode
          - automation.turn_on_bathroom_when_motion_detected_2
          - automation.turn_on_guest_bathroom_when_motion_detected_3
          - automation.turn_off_everything_when_people_leave
          - automation.no_motion_kitchen
          - automation.kitchen_motion
          - automation.turn_on_kitchen_when_leaving_bedroom
          - automation.turn_on_lights_when_doors_are_opened
          - automation.work_from_home
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id: group.all_lights
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.quiet_mode
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.enable_vacuum
    - conditions:
      - condition: trigger
        id: no_motion
      - condition: state
        entity_id: input_boolean.house_keeper_mode
        state: 'on'
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          use_alexa: false
          notify_sarah: true
          notify_nathan: true
          text_nathan: false
          text_sarah: false
          text_ice_contacts: false
          bypass_quiet_mode: false
          message: No motion for 20 minutes
          more_info: The cleaners are probably gone.
          url: /lovelace/Cameras
    - conditions:
      - condition: trigger
        id: front_door_motion
      - condition: template
        value_template: '{{ now() + timedelta(minutes=30) > state_attr(''calendar.cleaners'',
          ''start_time'') | as_datetime | as_local}}'
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          use_alexa: false
          notify_sarah: true
          notify_nathan: true
          text_nathan: false
          text_sarah: false
          text_ice_contacts: false
          bypass_quiet_mode: false
          message: Cleaners are Here
          more_info: Turning on Cleaning Mode
          url: /lovelace/Cameras
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.house_keeper_mode
    - conditions:
      - condition: trigger
        id: twelve_hours_before
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.enable_vacuum
  mode: queued
  max: 3
- id: '1665086286680'
  alias: Heat Coffee Water
  description: Turns on the water kettle and notifies when finished
  trigger:
  - platform: state
    entity_id:
    - switch.coffee_kettle
    to: 'on'
    from: 'off'
  - platform: state
    entity_id:
    - input_button.heat_coffee
    id: button
  condition:
  - condition: or
    conditions:
    - condition: not
      conditions:
      - condition: trigger
        id: button
    - condition: state
      entity_id: binary_sensor.occupied
      state: 'on'
  action:
  - service: script.new_script
    data: {}
- id: '1665147750557'
  alias: Morning Routine -- Sarah
  description: ''
  trigger:
  - platform: time
    at: 07:45:00
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    before: 00:00:00
    after: 00:00:00
  - condition: state
    entity_id: person.sarah
    state: home
  action:
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.start_tesla_and_turn_off_if_doesnt_leave_home
  mode: single
- id: '1665663691673'
  alias: Guard Mode
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.guard_mode
    to: 'on'
    id: guard-mode-on
  - platform: state
    entity_id:
    - input_boolean.guard_mode
    to: 'off'
    id: guard-mode-off
  - platform: state
    entity_id:
    - binary_sensor.front_door_motion
    - binary_sensor.side_door_motion
    to: 'on'
    id: door-motion
  - platform: state
    entity_id:
    - schedule.guard_mode_schedule
    id: schedule-changed
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: guard-mode-on
      sequence: []
    - conditions:
      - condition: trigger
        id: guard-mode-off
      sequence: []
    - conditions:
      - condition: trigger
        id: door-motion
      - condition: state
        entity_id: input_boolean.guard_mode
        state: 'on'
      - condition: state
        entity_id: schedule.guard_mode_schedule
        state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.nathans_fan
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id: light.bedroom
      - service: script.notify_sarah_and_nathan
        data:
          message: Intruder Alert
          use_alexa: true
          notify_sarah: true
          notify_nathan: true
          text_nathan: true
          text_sarah: true
          text_ice_contacts: true
          bypass_quiet_mode: true
          more_info: Motion detected at {{state_attr(trigger.entity_id, 'friendly_name')}}
      - repeat:
          count: '5'
          sequence:
          - service: light.turn_off
            data: {}
            target:
              entity_id:
              - light.side_porch
              - light.string_lights
              - light.back_porch
              - light.front_porch
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
          - service: light.turn_on
            data: {}
            target:
              entity_id:
              - light.side_porch
              - light.string_lights
              - light.back_porch
              - light.front_porch
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
          - if:
            - condition: state
              entity_id: device_tracker.tesleigh_lynn_location_tracker
              state: home
            then:
            - service: button.press
              continue_on_error: true
              data: {}
              target:
                entity_id:
                - button.horn
                - button.flash_lights
        alias: Flash Porch Lights and Honk Horn
    - conditions:
      - condition: trigger
        id: schedule-changed
      sequence: []
  mode: queued
  max: 4
- id: '1670001478544'
  alias: Christmas Present Hunt
  description: ''
  trigger:
  - device_id: e09b0160fe46cbe2aadf009d127c9f91
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: turn_on
  - device_id: 01632afbe7a0628355b82d4ddf1c27da
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: turn_on
    id: start-button-pressed
  - platform: state
    entity_id:
    - input_boolean.christmas_hunt_enable
    from: 'off'
    to: 'on'
    id: hunt-enabled
  - platform: state
    entity_id:
    - input_select.christmas_current_step
    to: '1'
    id: clue-1-started
  - platform: state
    entity_id:
    - input_select.christmas_room_selector
    to: Main Bathroom
    id: clue-1-done
  - platform: state
    entity_id:
    - input_select.christmas_current_step
    to: '2'
    id: clue-2-started
  - platform: template
    value_template: '{{states(''binary_sensor.back_door_input'') == ''off'' and

      states(''binary_sensor.island_input'') == ''on'' and

      states(''binary_sensor.back_porch_input'') == ''on'' and

      states(''binary_sensor.kitchen_overhead_input'') == ''on'' and

      states(''binary_sensor.kitchen_counter_input'') == ''on''}}'
    id: clue-2-done
  - platform: state
    entity_id:
    - input_select.christmas_current_step
    to: '3'
    id: clue-3-started
  - device_id: e09b0160fe46cbe2aadf009d127c9f91
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: turn_on
    id: clue-3-done
  - platform: state
    entity_id:
    - input_select.christmas_current_step
    to: '4'
    id: clue-4-started
  - platform: event
    event_type: jingle-bells
    id: clue-4-done
  - platform: state
    entity_id:
    - input_select.christmas_current_step
    to: '5'
    id: clue-5-started
  - platform: state
    entity_id:
    - input_button.christmas_clue_5_solved
    id: clue-5-done
  - platform: state
    entity_id:
    - input_select.christmas_current_step
    to: '6'
    id: clue-6-started
  - platform: template
    value_template: '{{states(''input_button.christmas_complete_current_clue'') |
      as_timestamp  > now() | as_timestamp - 1  and states(''input_select.christmas_current_step'')
      == ''1''}}'
    id: clue-1-done
  - platform: template
    value_template: '{{states(''input_button.christmas_complete_current_clue'') |
      as_timestamp  > now() | as_timestamp - 1  and states(''input_select.christmas_current_step'')
      == ''2''}}'
    id: clue-2-done
  - platform: template
    value_template: '{{states(''input_button.christmas_complete_current_clue'') |
      as_timestamp  > now() | as_timestamp - 1  and states(''input_select.christmas_current_step'')
      == ''3''}}'
    id: clue-3-done
  - platform: template
    value_template: '{{states(''input_button.christmas_complete_current_clue'') |
      as_timestamp  > now() | as_timestamp - 1  and states(''input_select.christmas_current_step'')
      == ''4''}}'
    id: clue-4-done
  - platform: template
    value_template: '{{states(''input_button.christmas_complete_current_clue'') |
      as_timestamp  > now() | as_timestamp - 1  and states(''input_select.christmas_current_step'')
      == ''5''}}'
    id: clue-5-done
  - platform: template
    value_template: '{{states(''input_button.christmas_complete_current_clue'') |
      as_timestamp  > now() | as_timestamp - 1 and states(''input_select.christmas_current_step'')
      == ''6''}}'
    id: clue-6-done
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_boolean.christmas_hunt_enable
      state: 'on'
    - condition: trigger
      id: start-button-pressed
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: start-button-pressed
        alias: Start Button Pressed
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.christmas_hunt_enable
    - conditions:
      - condition: trigger
        id: hunt-enabled
        alias: Hunt Started
      sequence:
      - service: input_select.select_option
        data:
          option: '0'
        target:
          entity_id: input_select.christmas_current_step
      - parallel:
        - choose:
          default:
          - service: media_player.volume_set
            data:
              volume_level: 0.6
            target:
              entity_id: media_player.everywhere
          alias: Set Volume everywhere
        - choose:
          default:
          - service: light.turn_off
            data: {}
            target:
              entity_id: light.home
          - service: switch.turn_off
            data: {}
            target:
              entity_id: switch.sarah_s_fan_socket_1
          alias: Turn off lights
        alias: Set volume and turn off lights
      - service: media_player.volume_set
        data:
          volume_level: 0.9
        target:
          entity_id: media_player.living_room_echo
      - parallel:
        - choose:
          default:
          - service: media_player.play_media
            data:
              media_content_type: sound
              media_content_id: christmas_05
            target:
              entity_id:
              - media_player.living_room_echo
          - service: notify.alexa_media_living_room_echo
            data:
              data:
                type: tts
              message: Merry Christmas! You've got some really nice presents waiting
                for you this year, but they won't come free. I have a bunch of puzzles
                for you to solve first. It'll probably take you a while, so I'll put
                on some Christmas music while you work.
          alias: Explain the game
        - choose:
          default:
          - service: media_player.select_source
            data:
              source: Everywhere
            target:
              entity_id: media_player.spotify_nathan_orick
          - delay:
              hours: 0
              minutes: 0
              seconds: 20
              milliseconds: 0
            alias: Wait for source to change and wait for announcement to finish
          - service: media_player.play_media
            data:
              media_content_type: playlist
              media_content_id: https://open.spotify.com/playlist/37i9dQZF1DX6R7QUWePReA?si=e5dda850a8ef4d64
            target:
              entity_id: media_player.spotify_nathan_orick
          alias: Turn on Music
        - choose: []
          alias: Handle Lights
          default:
          - delay:
              hours: 0
              minutes: 0
              seconds: 5
              milliseconds: 0
          - service: switch.turn_on
            data: {}
            target:
              entity_id: switch.sarah_s_fan_socket_1
          - delay:
              hours: 0
              minutes: 0
              seconds: 20
              milliseconds: 0
          - service: scene.turn_on
            data: {}
            target:
              entity_id: scene.living_space_under_the_tree
        alias: Intro, start music, and turn on lights
      - if:
        - condition: not
          conditions:
          - condition: state
            entity_id: media_player.spotify_nathan_orick
            state: playing
            for:
              hours: 0
              minutes: 0
              seconds: 3
        then:
        - wait_for_trigger:
          - platform: state
            entity_id:
            - media_player.spotify_nathan_orick
            to: playing
            for:
              hours: 0
              minutes: 0
              seconds: 3
          timeout:
            hours: 0
            minutes: 0
            seconds: 10
            milliseconds: 0
        alias: Wait for music
      - service: notify.alexa_media_living_room_echo
        data:
          data:
            type: tts
          message: Ok, now that we have some tunes, let me give you your first clue
        alias: Working on First Clue Announcement
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: input_select.select_option
        data:
          option: '1'
        target:
          entity_id: input_select.christmas_current_step
      - service: input_select.select_option
        data:
          option: None Selected
        target:
          entity_id: input_select.christmas_room_selector
      - service: script.notify_sarah_and_nathan
        data:
          message: Click For the First Clue
          notify_nathan: true
          notify_sarah: true
          use_alexa: false
          url: /lovelace/christmas-hunt
        alias: Send First Clue Notification
      - service: notify.alexa_media_living_room_echo
        data:
          data:
            type: tts
          message: Ok, I just sent you a notification. Check your phone for the first
            clue... Good luck!
        alias: Check your phone announcement
      - service: media_player.volume_set
        data:
          volume_level: 0.6
        target:
          entity_id: media_player.living_room_echo
    - conditions:
      - condition: trigger
        id: clue-1-started
      sequence:
      - service: light.turn_off
        data: {}
        target:
          area_id: living_space
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.turn_on_bathroom_when_motion_detected_2
      - repeat:
          while:
          - condition: state
            entity_id: input_select.christmas_current_step
            state: '1'
          sequence:
          - service: script.tier_toggle_devices
            data:
              action: true
              entity_1:
                entity_id: light.bath_1
              entity_2:
                entity_id: light.bath_2
              entity_3:
                entity_id: light.bath_3
              entity_4:
                entity_id: light.bath_4
              entity_5:
                entity_id: light.bath_5
              entity_6:
                entity_id: light.bath_6
              entity_7:
                entity_id: light.bath_ceiling
              delay: 250
          - service: script.tier_toggle_devices
            data:
              action: false
              entity_1:
                entity_id: light.bath_1
              entity_2:
                entity_id: light.bath_2
              entity_3:
                entity_id: light.bath_3
              entity_4:
                entity_id: light.bath_4
              entity_5:
                entity_id: light.bath_5
              entity_6:
                entity_id: light.bath_6
              entity_7:
                entity_id: light.bath_ceiling
              delay: 250
        alias: Blink Bathroom Lights Until Clue 1 is Done
    - conditions:
      - condition: trigger
        id: clue-1-done
      sequence:
      - service: media_player.volume_set
        data:
          volume_level: 0.9
        target:
          entity_id: media_player.bathroom_echo
      - service: input_select.select_option
        data:
          option: '1.5'
        target:
          entity_id: input_select.christmas_current_step
        alias: Update Step to 1.5 so lights quit blinking
      - service: notify.alexa_media_bathroom_echo
        data:
          message: Nice job! That wasn't too hard, right?
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.living_space_under_the_tree
      - service: light.turn_off
        data: {}
        target:
          area_id: a6f57bbbc237412ea553e7537a1bb3f2
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - service: light.turn_on
        data: {}
        target:
          entity_id:
          - light.bath_1
          - light.bath_5
          - light.bath_6
          - light.bath_ceiling
          - light.bath_4
          - light.bath_3
          - light.bath_2
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.bathroom_fan
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.bedroom_rope_lights
      - delay:
          hours: 0
          minutes: 0
          seconds: 3
          milliseconds: 0
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.bathroom_fan
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.turn_on_bathroom_when_motion_detected_2
      - delay:
          hours: 0
          minutes: 0
          seconds: 3
          milliseconds: 0
      - service: input_select.select_option
        data:
          option: '2'
        target:
          entity_id: input_select.christmas_current_step
    - conditions:
      - condition: trigger
        id: clue-2-started
      sequence:
      - service: notify.alexa_media_bathroom_echo
        data:
          message: Okie dokie. Now, we're gonna make it a whole lot harder. Head back
            over to Home Assistant for your next clue. I'll send you another link
            just in case you lost it.
      - service: script.notify_sarah_and_nathan
        data:
          message: Click For the Second Clue
          notify_nathan: true
          notify_sarah: true
          use_alexa: false
          url: /lovelace/christmas-hunt
          image: https://zeryje96cijoslllthx5qprkm9drlxwz.ui.nabu.casa/local/photos/clue2.jpg
          image_type: jpeg
        alias: Send Second Clue Notification
      - service: media_player.volume_set
        data:
          volume_level: 0.6
        target:
          entity_id: media_player.bathroom_echo
    - conditions:
      - condition: trigger
        id: clue-2-done
      - condition: state
        entity_id: input_select.christmas_current_step
        state: '2'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id:
          - light.kitchen_counter
          - light.kitchen_overhead
          - light.island
      - service: media_player.volume_set
        data:
          volume_level: 0.9
        target:
          entity_id: media_player.kitchen_echo_show
      - service: notify.alexa_media_kitchen_echo_show
        data:
          message: Sweet! Nicely done! I think there's a present for this one. Hang
            on.
      - delay:
          hours: 0
          minutes: 0
          seconds: 15
          milliseconds: 0
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.kitchen_counter
          - light.kitchen_overhead
          - light.island
          - light.back_porch
          - light.back_door
      - service: media_player.volume_set
        data:
          volume_level: 0.6
        target:
          entity_id: media_player.kitchen_echo_show
      - service: media_player.volume_set
        data:
          volume_level: 1
        target:
          entity_id: media_player.nathan_s_echo_dot
      - service: notify.alexa_media_nathan_s_echo_dot
        data:
          message: Ok, come in here! I'm in the laundry room! ... Come into the laundry
            room! ... Come here! ... Laundry Room ... I'm in the Laundry room
      - repeat:
          count: '10'
          sequence:
          - service: light.toggle
            data: {}
            target:
              entity_id: light.laundry_room
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
        alias: Flash Laundry Room
      - wait_template: '{{states(''binary_sensor.laundry_room_motion'') == ''on''}}'
        continue_on_timeout: true
        timeout: '30'
      - service: notify.alexa_media_nathan_s_echo_dot
        data:
          message: Check inside the dryer!
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - service: input_select.select_option
        data:
          option: '3'
        target:
          entity_id: input_select.christmas_current_step
    - conditions:
      - condition: trigger
        id: clue-3-started
      sequence:
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.turn_on_basement_when_door_is_opened
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.motion_bomb_shelter
      - service: notify.alexa_media_nathan_s_echo_dot
        data:
          message: Ok, you gotta go downstairs for this one. Open your present, and
            check out your phone.
      - service: media_player.volume_set
        data:
          volume_level: 0.6
        target:
          entity_id: media_player.nathan_s_echo_dot
      - service: script.notify_sarah_and_nathan
        data:
          use_alexa: false
          notify_sarah: true
          notify_nathan: true
          message: Click for Third Clue
          url: /lovelace/christmas-hunt
      - service: light.turn_on
        data: {}
        target:
          entity_id:
          - light.basement_stairs
          - light.bl1
          - light.bl2
      - wait_for_trigger:
        - platform: state
          entity_id:
          - binary_sensor.basement_motion_sensor
          to: 'on'
          for:
            hours: 0
            minutes: 0
            seconds: 0
        timeout:
          hours: 0
          minutes: 2
          seconds: 0
          milliseconds: 0
      - delay:
          hours: 0
          minutes: 0
          seconds: 4
          milliseconds: 0
      - service: media_player.volume_set
        data:
          volume_level: 0.9
        target:
          entity_id: media_player.nathan_s_2nd_echo_dot
      - service: notify.alexa_media_nathan_s_2nd_echo_dot
        data:
          message: '''Twas the night before Christmas, when all through the house
            Not a creature was stirring, not even a mouse; The stockings were hung
            by the chimney with care, In hopes that St. Nicholas soon would be there;  The
            children were nestled all snug in their beds, While visions of sugar-plums
            danced in their heads; And mamma in her ''kerchief, and I in my cap, Had
            just settled down for a long winter''s nap,  When out on the lawn there
            arose such a clatter, I sprang from the bed to see what was the matter.
            Away to the window I flew like a flash, Tore open the shutters and threw
            up the sash.  The moon on the breast of the new-fallen snow Gave the lustre
            of mid-day to objects below, When, what to my wondering eyes should appear,
            But a miniature sleigh, and eight tiny reindeer,  With a little old driver,
            so lively and quick, I knew in a moment it must be St. Nick. More rapid
            than eagles his coursers they came, And he whistled, and shouted, and
            called them by name;  "Now, DASHER! now, DANCER! now, PRANCER and VIXEN!
            On, COMET! on CUPID! on, DONNER and BLITZEN! To the top of the porch!
            to the top of the wall! Now dash away! dash away! dash away all!"  As
            dry leaves that before the wild hurricane fly, When they meet with an
            obstacle, mount to the sky, So up to the house-top the coursers they flew,
            With the sleigh full of toys, and St. Nicholas too.  And then, in a twinkling,
            I heard on the roof The prancing and pawing of each little hoof. As I
            drew in my hand, and was turning around, Down the chimney St. Nicholas
            came with a bound.  He was dressed all in fur, from his head to his foot,
            And his clothes were all tarnished with ashes and soot; A bundle of toys
            he had flung on his back, And he looked like a peddler just opening his
            pack.  His eyes -- how they twinkled! his dimples how merry! His cheeks
            were like roses, his nose like a cherry! His droll little mouth was drawn
            up like a bow, And the beard of his chin was as white as the snow;  The
            stump of a pipe he held tight in his teeth, And the smoke it encircled
            his head like a wreath; He had a broad face and a little round belly,
            That shook, when he laughed like a bowlful of jelly.  He was chubby and
            plump, a right jolly old elf, And I laughed when I saw him, in spite of
            myself; A wink of his eye and a twist of his head, Soon gave me to know
            I had nothing to dread;  He spoke not a word, but went straight to his
            work, And filled all the stockings; then turned with a jerk, And laying
            his finger aside of his nose, And giving a nod, up the chimney he rose;  He
            sprang to his sleigh, to his team gave a whistle, And away they all flew
            like the down of a thistle. But I heard him exclaim, ere he drove out
            of sight, HAPPY CHRISTMAS TO ALL, AND TO ALL A GOOD-NIGHT!'
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.bl1
          - light.bl2
          - light.basement_stairs
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: light.turn_on
        data:
          transition: 10
        target:
          entity_id: light.bomb_shelter
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - repeat:
          count: '5'
          sequence:
          - service: switch.toggle
            data: {}
            target:
              entity_id: switch.grow_light
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
      - wait_template: '{{states(''binary_sensor.wyze_motion4'') == ''on''}}'
        continue_on_timeout: true
        timeout: '120'
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.grow_light
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.bomb_shelter
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.grow_mat
    - conditions:
      - condition: trigger
        id: clue-3-done
      - condition: state
        entity_id: input_select.christmas_current_step
        state: '3'
      sequence:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.turn_on_basement_when_door_is_opened
      - service: input_select.select_option
        data:
          option: '4'
        target:
          entity_id: input_select.christmas_current_step
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.motion_bomb_shelter
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.grow_mat
      - service: light.turn_on
        data: {}
        target:
          entity_id:
          - light.bl1
          - light.bl2
          - light.bomb_shelter
    - conditions:
      - condition: trigger
        id: clue-4-started
      sequence:
      - service: notify.alexa_media_nathan_s_2nd_echo_dot
        data:
          message: Another clue incoming
      - service: media_player.volume_set
        data:
          volume_level: 0.6
        target:
          entity_id: media_player.nathan_s_2nd_echo_dot
      - service: script.notify_sarah_and_nathan
        data:
          url: /lovelace/christmas-hunt
          message: Click for Fourth Clue
          use_alexa: false
          notify_sarah: true
          notify_nathan: true
    - conditions:
      - condition: trigger
        id: clue-4-done
      - condition: state
        entity_id: input_select.christmas_current_step
        state: '4'
      sequence:
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.living_space_bright
      - service: media_player.volume_set
        data:
          volume_level: 0.9
        target:
          entity_id: media_player.living_room_echo
      - service: notify.alexa_media_living_room_echo
        data:
          message: Great job playing the right song! You get a present for this one
            too. Just check the coat closet.
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - service: input_select.select_option
        data:
          option: '5'
        target:
          entity_id: input_select.christmas_current_step
    - conditions:
      - condition: trigger
        id: clue-5-started
      sequence:
      - service: notify.alexa_media_living_room_echo
        data:
          message: Ok, time for the last puzzle. Check your phone.
      - service: media_player.volume_set
        data:
          volume_level: 0.6
        target:
          entity_id: media_player.living_room_echo
      - service: script.notify_sarah_and_nathan
        data:
          message: Click for Fifth Clue
          url: /lovelace/christmas-hunt
          use_alexa: false
          notify_sarah: true
          notify_nathan: true
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.living_space_under_the_tree
    - conditions:
      - condition: trigger
        id: clue-5-done
      - condition: state
        entity_id: input_select.christmas_current_step
        state: '5'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.office_lamp_top
      - service: media_player.volume_set
        data:
          volume_level: 0.9
        target:
          entity_id: media_player.office_echo
      - service: light.turn_on
        data:
          rgb_color:
          - 255
          - 0
          - 0
          brightness: 255
        target:
          entity_id:
          - light.hue_color_downlight_1
          - light.office_ceiling_2
          - light.office_ceiling_1
      - service: notify.alexa_media_office_echo
        data:
          message: Welcome to Hell
      - delay:
          hours: 0
          minutes: 0
          seconds: 6
          milliseconds: 0
      - service: notify.alexa_media_office_echo
        data:
          message: Jk. You Win! Your last present is hidden behind the office chair
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.office_arctic_aurora
      - service: input_select.select_option
        data:
          option: '6'
        target:
          entity_id: input_select.christmas_current_step
    - conditions:
      - condition: trigger
        id: clue-6-started
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - service: notify.alexa_media_office_echo
        data:
          message: Thanks for playing, and Merry Christmas
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - service: input_select.select_option
        data:
          option: '0'
        target:
          entity_id: input_select.christmas_current_step
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.christmas_hunt_enable
      - service: media_player.media_pause
        data: {}
        target:
          entity_id: media_player.spotify_nathan_orick
  mode: parallel
  max: 5
- id: '1671113410657'
  alias: Smoke Alarm
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.smoke_alarm
    to: 'on'
    id: alarm-on
  - platform: state
    entity_id:
    - switch.smoke_alarm
    to: 'off'
    from: 'on'
    id: alarm-off
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: alarm-on
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          message: Smoke Alarm Detected
          use_alexa: true
          notify_sarah: true
          notify_nathan: true
          text_nathan: true
          text_sarah: true
          text_ice_contacts: true
          bypass_quiet_mode: true
    - conditions:
      - condition: trigger
        id: alarm-off
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          message: Smoke Alarm Has Stopped
          use_alexa: false
          notify_sarah: true
          notify_nathan: true
          text_nathan: true
          text_sarah: true
          text_ice_contacts: true
          bypass_quiet_mode: true
  mode: single
- id: '1673822055354'
  alias: Handle Guest Login
  description: ''
  trigger:
  - platform: event
    event_type: ha_auto_login_guest_logged_in
  condition: []
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: Guest Logged In
      more_info: 'ip address: {{trigger.event.data.ip}}'
      notify_nathan: true
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.visitors
  mode: single
- id: '1676900308998'
  alias: Zigbee/ZWave battery device has gone offline
  description: ''
  use_blueprint:
    path: Tahutipai/zigbee_zwave_notify_when_battery_devices_have_fallen_offline.yaml
    input:
      actions:
      - service: script.notify_sarah_and_nathan
        data:
          use_alexa: false
          notify_sarah: false
          notify_nathan: true
          text_nathan: false
          text_sarah: false
          text_ice_contacts: false
          bypass_quiet_mode: false
          message: Sensor Offline
          more_info: '{{sensors}}'
