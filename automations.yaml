- id: '1609559449831'
  alias: Morning Routine
  description: ''
  trigger:
  - platform: state
    to: 'off'
    entity_id: input_boolean.night_mode
    from: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  action:
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.wyze_motion2
      to: 'on'
      from: 'off'
    timeout: 03:00:00
    continue_on_timeout: false
  - data:
      volume_level: 0.8
    service: media_player.volume_set
    target:
      entity_id:
      - media_player.bathroom_echo
      - media_player.kitchen_echo_show
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: sensor.pixel_4_battery_state
            state: charging
        - condition: state
          entity_id: binary_sensor.pixel_4_device_locked
          state: 'on'
      sequence:
      - service: media_player.play_media
        data:
          entity_id: media_player.bathroom_echo
          media_content_id: amzn1.ask.skill.8e0fbda3-b70c-481d-878f-a2e5e17158c9
          media_content_type: skill
    default: []
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: weather.home
        attribute: temperature
        below: '55'
      - condition: not
        conditions:
        - condition: state
          entity_id: climate.kitchen
          state: cool
      sequence:
      - service: climate.turn_on
        target:
          area_id: b2672f722c53428e92427703040fb764
        data: {}
      - service: climate.set_temperature
        target:
          area_id: b2672f722c53428e92427703040fb764
        data:
          temperature: '{{states(''input_number.fireplace_temperature_when_showering'')}}'
    default: []
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_door
      to: 'on'
      from: 'off'
    timeout: 01:00:00
    continue_on_timeout: false
  - type: turn_on
    device_id: 4727b2015d290faf287bd1a335620fab
    entity_id: light.kitchen_counter
    domain: light
  - type: turn_on
    device_id: a634fea07a944853cfa4fe710f25fd04
    entity_id: light.kitchen_overhead
    domain: light
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: sensor.pixel_4_battery_state
            state: charging
        - condition: state
          entity_id: binary_sensor.pixel_4_device_locked
          state: 'on'
      sequence:
      - service: media_player.play_media
        data:
          media_content_id: amzn1.ask.skill.8e0fbda3-b70c-481d-878f-a2e5e17158c9
          media_content_type: skill
        target:
          entity_id:
          - media_player.kitchen_echo_show
  - service: media_player.media_stop
    target:
      entity_id: media_player.bathroom_echo
    data: {}
  - wait_for_trigger:
    - platform: template
      value_template: "{{\n    is_state('binary_sensor.office_door', 'off')\n    and\
        \ is_state('binary_sensor.public_space_motion', 'off')\n}}"
      id: in_office
    - platform: state
      entity_id: binary_sensor.living_room_motion
      from: 'off'
      to: 'on'
      id: in_livingroom
    timeout: 02:00:00
    continue_on_timeout: false
  - choose:
    - conditions:
      - condition: template
        value_template: '{{wait.trigger.id == "in_office"}}'
      sequence:
      - service: media_player.media_stop
        target:
          entity_id: media_player.kitchen_echo_show
        data: {}
    - conditions:
      - condition: template
        value_template: '{{wait.trigger.id == "in_livingroom"}}'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.living_room_lamp
        data:
          transition: 6
          brightness: 255
      - service: media_player.media_stop
        target:
          entity_id: media_player.kitchen_echo_show
        data: {}
      - wait_for_trigger:
        - platform: template
          value_template: "{{\n    is_state('binary_sensor.office_door', 'off')\n\
            \    and is_state('binary_sensor.public_space_motion', 'off')\n}}"
        timeout: 02:00:00
        continue_on_timeout: false
      - service: light.turn_off
        target:
          entity_id: light.living_room_lamp
        data:
          transition: 20
    default: []
  - condition: state
    entity_id: person.sarah
    state: not_home
  - service: light.turn_off
    data: {}
    entity_id: light.bedroom
  mode: single
- id: '1619291764637'
  alias: Motion -- Side Door
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.side_door_motion
      light_target:
        entity_id:
        - light.side_porch
        - light.laundry_room
      elevation_check: 10
      time_scene_evening: 0:00:00
      time_scene_day: 0:00:00
      time_scene_morning: 0:00:00
      automation_blocker: input_boolean.people_outside
      time_scene_ambient_end: 0:00:00
      automation_blocker_boolean: false
      no_motion_wait: 300
- id: '1620332636293'
  alias: Low battery level detection & notification for all battery sensors
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      exclude:
        entity_id:
        - sensor.iphone_battery_state
        - sensor.iphone_battery_level
        - sensor.nathan_s_pixel_battery_level
        - sensor.pixel_4_battery_state
        - sensor.rooben_battery_level
        - sensor.living_room_motion_sensor_battery_level
        - binary_sensor.living_room_motion_sensor_low_battery_level
      actions:
      - service: script.notify_sarah_and_nathan
        data:
          message: Battery is Dying
          url: /lovelace/data
          more_info: The battery is dying for {{ sensors }}
          use_alexa: false
          notify_nathan: true
          notify_sarah: false
- id: '1620357325146'
  alias: Motion -- Back Yard
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.back_porch_motion
      elevation_check: 10
      time_scene_evening: 0:00:00
      time_scene_day: 0:00:00
      time_scene_morning: 0:00:00
      time_scene_ambient_end: 0:00:00
      time_scene_ambient_start: 0:00:00
      automation_blocker: input_boolean.people_outside
      light_target:
        entity_id: light.back_porch
      automation_blocker_boolean: false
      no_motion_wait: 300
- id: '1620360426386'
  alias: Alarm -- Trigger when Armed Away
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.public_space_motion
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.wyze_motion1
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.wyze_motion2
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.back_door_open
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
  action:
  - service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.home_alarm
  mode: single
- id: alexa_media_player_authentication_required
  alias: Alexa Media Player Authentication Required
  trigger:
    platform: event
    event_type: alexa_media_relogin_required
  condition: []
  action:
  - service: notify.mobile_app_pixel_4
    data:
      title: Alexa Media Player Integration
      message: ðŸ”‘ Authentication Required
- id: '1620443082110'
  alias: Alarm -- Run Alarm when Triggered
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: triggered
  - platform: state
    entity_id: alarm_control_panel.wyze_home_monitoring_system
    to: triggered
  condition: []
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: Intruder Alert
      more_info: The house alarm is going off
      use_alexa: true
      notify_nathan: true
      notify_sarah: true
  - service: media_player.volume_set
    target:
      device_id: 28e026b391880a6a90ba262b30514dcc
    data:
      volume_level: 1
  - service: notify.alexa_media
    data:
      data:
        type: tts
      target: group.alexa_everywhere
      message: Alarm will sound in 10 seconds
  - delay:
      hours: 0
      minutes: 0
      seconds: 14
      milliseconds: 0
  - condition: not
    conditions:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: disarmed
  - service: media_player.volume_set
    data:
      volume_level: 1
    target:
      entity_id: media_player.everywhere
  - service: script.turn_on
    target:
      entity_id:
      - script.alarm_flash_while_triggered
      - script.alarm_beep_while_triggered
    data: {}
  mode: single
- id: '1621301311010'
  alias: Motion -- Front Door
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.front_door_motion
      time_scene_evening: 0:00:00
      time_scene_day: 0:00:00
      light_target:
        entity_id:
        - light.front_porch
      time_scene_morning: 0:00:00
      time_scene_ambient_end: 0:00:00
      automation_blocker: input_boolean.people_outside
      time_scene_ambient_start: 0:00:00
      automation_blocker_boolean: false
      no_motion_wait: 300
- id: '1622924827820'
  alias: Motion -- Bomb Shelter
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.wyze_motion4
      light_target:
        entity_id: light.bomb_shelter
- id: '1622936976816'
  alias: Motion -- Mudroom
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 0:00:00
      motion_entity: binary_sensor.laundry_room_motion
      light_target:
        entity_id: light.laundry_room
- id: '1622937162847'
  alias: Basement Lights
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.basement_door
    to: 'on'
    id: door_open
  - platform: state
    entity_id: binary_sensor.basement_motion_sensor
    id: motion_on
    to: 'on'
    from: 'off'
  - platform: state
    entity_id: binary_sensor.basement_motion_sensor
    id: motion_off
    to: 'off'
    from: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: door_open
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.basement_stairs
          - light.laundry_room
      - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.basement_door
          from: 'on'
          to: 'off'
          for:
            hours: 0
            minutes: 0
            seconds: 30
        timeout: 00:10:00
        continue_on_timeout: true
      - service: light.turn_off
        target:
          area_id: basement
        data:
          transition: 14
    - conditions:
      - condition: trigger
        id: motion_off
      sequence:
      - service: light.turn_off
        target:
          area_id: basement
        data:
          transition: 30
    - conditions:
      - condition: trigger
        id: motion_on
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.basement_stairs
          - light.basement_lights
    default: []
  mode: restart
- id: '1622939127924'
  alias: Toggle Basement Lights
  description: WIP
  trigger:
  - platform: state
    entity_id: binary_sensor.basement_door
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{\n  states.binary_sensor.basement_door.last_changed | as_timestamp\
          \ -\n  states.binary_sensor.laundry_room_motion.last_changed | as_timestamp\
          \ > 0\n}}"
      sequence: []
    default: []
  mode: parallel
  max: 10
- id: '1622946307084'
  alias: Door -- Back Door
  description: ''
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 00:00:00
      motion_entity: binary_sensor.back_door_open
      light_target:
        device_id:
        - 29856b1eb3bc143dc0aad2cc7f6013e6
        - b52c6034f5332b5f7f795cfaa4bf7eea
        entity_id: light.string_lights
      no_motion_wait: 300
      elevation_check: 4
      no_motion_blocker: automation.people_outside
      no_motion_blocker_boolean: true
- id: '1623941903977'
  alias: Outside Mode
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.people_outside
    to: 'on'
  - platform: state
    entity_id: input_boolean.people_outside
    to: 'off'
  - platform: sun
    event: sunset
    offset: -00:10:00
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.people_outside
        state: 'on'
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.back_yard
      - service: climate.set_preset_mode
        target:
          entity_id: climate.kitchen
        data:
          preset_mode: eco
      - condition: sun
        after: sunset
        after_offset: -00:10:00
      - service: light.turn_on
        target:
          entity_id: light.string_lights
      - device_id: 853415c2bf390dc15ae0e2bf6f7569b4
        domain: vacuum
        entity_id: vacuum.rooben
        type: clean
    default:
    - service: switch.turn_on
      target:
        entity_id: switch.back_yard
    - service: light.turn_off
      target:
        entity_id: light.string_lights
    - service: climate.set_preset_mode
      target:
        entity_id: climate.kitchen
      data:
        preset_mode: none
    - device_id: 853415c2bf390dc15ae0e2bf6f7569b4
      domain: vacuum
      entity_id: vacuum.rooben
      type: dock
  mode: single
- id: '1625057398961'
  alias: Charging Phones Turns on Night Mode
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.iphone_battery_state
    to: Charging
    from: Not Charging
  - platform: state
    entity_id: binary_sensor.pixel_4_is_charging
    to: 'on'
  - platform: state
    entity_id: binary_sensor.is_bedtime
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.night_mode
    state: 'off'
  - condition: state
    entity_id: sensor.iphone_battery_state
    state: Charging
  - condition: state
    entity_id: binary_sensor.pixel_4_is_charging
    state: 'on'
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_bedtime
    state: 'on'
  - condition: state
    entity_id: input_boolean.visitors
    state: 'off'
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.night_mode
  mode: single
- id: '1625057755379'
  alias: Notify of Basement Water
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.basement_water_sensor_water_detected
    to: 'on'
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: Warning, Basement Flooding
      more_info: Water has been detected in the basement. Check the water sensor attached
        to the water heater. Turn off the water main if there is active flooding.
      use_alexa: true
      notify_nathan: true
      notify_sarah: true
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - repeat:
      while:
      - condition: state
        entity_id: binary_sensor.basement_water_sensor_water_detected
        state: 'on'
      sequence:
      - service: notify.alexa_media_nathan_s_2nd_echo_dot
        data:
          message: Inspect the water sensor attached to the water heater. If there
            is active flooding from the water line, turn off the main water valve
            located on the ceiling in the northwest corner of the basement, directly
            under the guest bedroom, and diagonally opposite of the breaker box. Look
            for a yellow handle on a blue pipe. To stop notifications, pull the water
            sensor out of the water and dry it off. Otherwise, turn off the automation
            named Notify of Basement Water in Home Assistant.
          data:
            type: announce
      - service: notify.alexa_media_upstairs
        data:
          message: Warning! The basement is flooding. Inspect the water sensor near
            the water heater.
          data:
            type: announce
      - delay:
          hours: 0
          minutes: 0
          seconds: 45
          milliseconds: 0
  mode: single
- id: '1626990104585'
  alias: Send Data to OCS
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /10
  condition: []
  action:
  - service: rest_command.ocs
    data:
      payload: "[\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\"\
        ,\n    \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"\
        streamId\": \"nathan-office-temp\",\n    \"data\": {\n      \"timestamp\"\
        : \"{{now()}}\",\n      \"value\": \"{{states('sensor.bme280_temperature')}}\"\
        \n    }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\"\
        ,\n    \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"\
        streamId\": \"nathan-office-humidity\",\n    \"data\": {\n      \"timestamp\"\
        : \"{{now()}}\",\n      \"value\": \"{{states('sensor.bme280_humidity')}}\"\
        \n    }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\"\
        ,\n    \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"\
        streamId\": \"nathan-office-pressure\",\n    \"data\": {\n      \"timestamp\"\
        : \"{{now()}}\",\n      \"value\": \"{{states('sensor.bme280_pressure')}}\"\
        \n    }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\"\
        ,\n    \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"\
        streamId\": \"nathan-livingroom-temperature\",\n    \"data\": {\n      \"\
        timestamp\": \"{{now()}}\",\n      \"value\": \"{{states('sensor.living_room_motion_sensor_air_temperature')}}\"\
        \n    }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\"\
        ,\n    \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"\
        streamId\": \"nathan-livingroom-illuminance\",\n    \"data\": {\n      \"\
        timestamp\": \"{{now()}}\",\n      \"value\": \"{{states('sensor.living_room_motion_sensor_illuminance')}}\"\
        \n    }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\"\
        ,\n    \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"\
        streamId\": \"nathan-kitchen-temperature\",\n    \"data\": {\n      \"timestamp\"\
        : \"{{now()}}\",\n      \"value\": \"{{states('sensor.kitchen_temperature')}}\"\
        \n    }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\"\
        ,\n    \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"\
        streamId\": \"nathan-kitchen-humidity\",\n    \"data\": {\n      \"timestamp\"\
        : \"{{now()}}\",\n      \"value\": \"{{states('sensor.kitchen_humidity')}}\"\
        \n    }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\"\
        ,\n    \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"\
        streamId\": \"nathan-basement-temperature\",\n    \"data\": {\n      \"timestamp\"\
        : \"{{now()}}\",\n      \"value\": \"{{states('sensor.basement_water_sensor_temperature')}}\"\
        \n    }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\"\
        ,\n    \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"\
        streamId\": \"nathan-basement-humidity\",\n    \"data\": {\n      \"timestamp\"\
        : \"{{now()}}\",\n      \"value\": \"{{states('sensor.basement_water_sensor_humidity')}}\"\
        \n    }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\"\
        ,\n    \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"\
        streamId\": \"nathan-bathroom-humidity\",\n    \"data\": {\n      \"timestamp\"\
        : \"{{now()}}\",\n      \"value\": \"{{states('sensor.bathroom_humidity')}}\"\
        \n    }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\"\
        ,\n    \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"\
        streamId\": \"nathan-bathroom-temperature\",\n    \"data\": {\n      \"timestamp\"\
        : \"{{now()}}\",\n      \"value\": \"{{states('sensor.bathroom_temperature')}}\"\
        \n    }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\"\
        ,\n    \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"\
        streamId\": \"nathan-outside-temperature\",\n    \"data\": {\n      \"timestamp\"\
        : \"{{now()}}\",\n      \"value\": \"{{state_attr('weather.home', 'temperature')}}\"\
        \n    }\n  },\n  {\n    \"tenantId\": \"82139b11-fc78-4d03-9b21-e6f5cb9178eb\"\
        ,\n    \"namespaceId\": \"2bb60ae7-dedd-4ae1-83a1-4f379ea02e0a\",\n    \"\
        streamId\": \"nathan-outside-humidity\",\n    \"data\": {\n      \"timestamp\"\
        : \"{{now()}}\",\n      \"value\": \"{{state_attr('weather.home', 'humidity')}}\"\
        \n    }\n  }\n]"
  mode: single
- id: '1627506438431'
  alias: Turn on Lights When Doors are Opened
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_door
    to: 'on'
    id: bedroom_door
  - platform: state
    entity_id: binary_sensor.office_door
    id: office_door
    to: 'on'
  - platform: state
    entity_id: binary_sensor.guest_bedroom_door
    id: guest_bedroom_door
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.couch_sleepers
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.living_room_motion_sensor_illuminance
    below: '5'
  action:
  - service: light.turn_on
    target:
      area_id: dining_room
    data:
      transition: 5
      brightness_pct: 40
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: office_door
        - condition: trigger
          id: guest_bedroom_door
      sequence:
      - service: light.turn_on
        target:
          area_id: hallway
    default: []
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    target:
      area_id: dining_room
    data:
      transition: 9
  - service: light.turn_off
    target:
      area_id: hallway
  mode: parallel
  max: 2
- id: '1628378848989'
  alias: Alexa, I'm Leaving
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.alexa_leaving
    from: 'off'
    to: 'on'
  - platform: time_pattern
    id: time
    hours: /5
  - platform: tag
    tag_id: leaving
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: time
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.alexa_leaving
        data: {}
    default:
    - service: alarm_control_panel.alarm_arm_away
      data: {}
      target:
        entity_id: alarm_control_panel.wyze_home_monitoring_system
    - parallel:
      - if:
        - condition: state
          entity_id: device_tracker.location_tracker
          state: home
        then:
        - service: script.start_tesla
          data: {}
        - delay:
            hours: 0
            minutes: 12
            seconds: 0
            milliseconds: 0
        - if:
          - condition: state
            entity_id: device_tracker.location_tracker
            state: home
          then:
          - service: climate.turn_off
            data: {}
            target:
              entity_id: climate.hvac_climate_system
      - sequence:
        - wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.back_door_open
            from: 'on'
            to: 'off'
          continue_on_timeout: true
          timeout: '120'
        - delay:
            hours: 0
            minutes: 2
            seconds: 0
            milliseconds: 0
        - service: lock.lock
          target:
            entity_id: lock.back_door
          data: {}
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.alexa_leaving
          data: {}
  mode: restart
- id: '1629672385421'
  alias: Notify of Object Detection
  description: ''
  trigger:
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_parking_pad'', ''summary'').person
      | default(0) > 0}}'
    id: person
  - platform: template
    id: person
    value_template: '{{ state_attr(''image_processing.doods_back_porch'', ''summary'').person
      | default(0) > 0}}'
  - platform: template
    id: person
    value_template: '{{ state_attr(''image_processing.doods_front_yard'', ''summary'').person
      | default(0) > 0}}'
  - platform: template
    id: person
    value_template: '{{ state_attr(''image_processing.doods_side_porch'', ''summary'').person
      | default(0) > 0}}'
  - platform: template
    id: person
    value_template: '{{ state_attr(''image_processing.doods_front_gate'', ''summary'').person
      | default(0) > 0}}'
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_parking_pad'', ''summary'').cat
      | default(0) > 0}}'
    id: cat
  - platform: template
    id: cat
    value_template: '{{ state_attr(''image_processing.doods_back_porch'', ''summary'').cat
      | default(0) > 0}}'
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_front_yard'', ''summary'').cat
      | default(0) > 0}}'
    id: cat
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_side_porch'', ''summary'').cat
      | default(0) > 0}}'
    id: cat
  - platform: template
    value_template: '{{ state_attr(''image_processing.doods_front_gate'', ''summary'').cat
      | default(0) > 0}}'
    id: cat
  condition:
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_back_porch''
        and states(''var.back_porch_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_parking_pad''
        and states(''var.parking_pad_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_front_yard''
        and states(''var.front_yard_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_front_gate''
        and states(''var.front_gate_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
    - condition: template
      value_template: '{{ trigger.entity_id == ''image_processing.doods_side_porch''
        and states(''var.side_porch_last_notified'') | as_timestamp < now() | as_timestamp
        - 60 * states(''input_number.camera_notification_refractory_period'') | float
        }}'
  - condition: state
    entity_id: input_boolean.people_outside
    state: 'off'
  - condition: state
    entity_id: input_boolean.alexa_leaving
    state: 'off'
  - condition: template
    value_template: '{{ states.binary_sensor.back_door_open.last_changed | as_timestamp
      < now() | as_timestamp - 60* states(''input_number.camera_notification_refractory_period'')
      | float }}'
  - condition: template
    value_template: "{{\n   states.sensor.number_of_people_at_home.last_changed |\
      \ as_timestamp < now() | as_timestamp - 60 * states('input_number.camera_notification_refractory_period')\
      \ | float or states('sensor.number_of_people_at_home') | int < states('sensor.last_number_of_people_at_home')\
      \ | int\n}}"
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_parking_pad''
          }}'
      sequence:
      - service: camera.snapshot
        target:
          entity_id: camera.parking_pad
        data:
          filename: /config/www/doods/parking_pad.jpg
      - service: var.update
        data:
          entity_id: var.parking_pad_last_notified
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_back_porch''
          }}'
      sequence:
      - service: camera.snapshot
        data:
          filename: /config/www/doods/back_porch.jpg
        target:
          entity_id: camera.back_porch
      - service: var.update
        data:
          entity_id: var.back_porch_last_notified
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_front_yard''
          }}'
      sequence:
      - service: camera.snapshot
        data:
          filename: /config/www/doods/front_yard.jpg
        target:
          entity_id: camera.front_yard
      - service: var.update
        data:
          entity_id: var.front_yard_last_notified
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_front_gate''
          }}'
      sequence:
      - service: camera.snapshot
        data:
          filename: /config/www/doods/front_gate.jpg
        target:
          entity_id: camera.front_gate
      - service: var.update
        data:
          entity_id: var.front_gate_last_notified
    - conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == ''image_processing.doods_side_porch''
          }}'
      sequence:
      - service: camera.snapshot
        data:
          filename: /config/www/doods/side_porch.jpg
        target:
          entity_id: camera.side_porch
      - service: var.update
        data:
          entity_id: var.side_porch_last_notified
    default: []
  - service: script.notify_sarah_and_nathan
    data_template:
      use_alexa: false
      message: '{% if trigger.id == ''person'' %} Person {% elif trigger.id == ''cat''
        %} Cat {% else %} Motion {% endif %} Detected {% if trigger.entity_id == ''image_processing.doods_back_porch''
        %} on Back Porch {% elif trigger.entity_id == ''image_processing.doods_parking_pad''
        %} on Parking Pad {% elif trigger.entity_id == ''image_processing.doods_front_yard''
        %} on Front Yard {% elif trigger.entity_id == ''image_processing.doods_front_gate''
        %} on Front Gate {% elif trigger.entity_id == ''image_processing.doods_side_porch''
        %} on Side Porch {% endif %}'
      image: https://zeryje96cijoslllthx5qprkm9drlxwz.ui.nabu.casa/local/doods/{%-
        if trigger.entity_id == 'image_processing.doods_back_porch' -%} back_porch.jpg
        {%- elif trigger.entity_id == 'image_processing.doods_parking_pad' -%} parking_pad.jpg
        {%- elif trigger.entity_id == 'image_processing.doods_front_yard' -%} front_yard.jpg
        {%- elif trigger.entity_id == 'image_processing.doods_front_gate' -%} front_gate.jpg
        {%- elif trigger.entity_id == 'image_processing.doods_side_porch' -%} side_porch.jpg
        {%- endif -%}
      image_type: jpg
      url: /lovelace/Cameras
      notify_nathan: true
      notify_sarah: true
  mode: queued
  max: 10
- id: '1630441700096'
  alias: Turn On AC When Headed Home and Leaving
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: proximity.home
    below: '80'
    id: headed_home
  - platform: numeric_state
    entity_id: proximity.home
    id: leaving_home
    above: '80'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: headed_home
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          message: AC Turned On
          more_info: '{% set fallback = {"to_state": {"attributes": {"nearest": "you"}}}
            %} {% set value = trigger | default(fallback) %} {% set value = value.to_state
            | default(fallback.to_state) %} {% set value = value.attributes | default(fallback.to_state.attributes)
            %} {% set value = value.nearest | default(fallback.to_state.attributes.nearest)
            %} {% set person = value.split('','') | join('' and'') %} {% set verb
            = ''is'' %} {% if person == ''you'' or value.split('','') | count > 1
            %} {% set verb = ''are'' %} {% endif %} Home Assistant has observed {{
            person }} {{ verb }} headed home and has turned on the AC. If this is
            not expected, click this notification to turn it off.'
          url: /lovelace/climate
          notify_nathan: true
          notify_sarah: true
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.keep_ac_in_eco
      - service: climate.set_preset_mode
        data:
          preset_mode: none
        target:
          entity_id: climate.kitchen
    - conditions:
      - condition: trigger
        id: leaving_home
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          message: AC Turned Off
          more_info: '{% set fallback = {"to_state": {"attributes": {"nearest": "you"}}}
            %} {% set value = trigger | default(fallback) %} {% set value = value.to_state
            | default(fallback.to_state) %} {% set value = value.attributes | default(fallback.to_state.attributes)
            %} {% set value = value.nearest | default(fallback.to_state.attributes.nearest)
            %} {% set person = value.split('','') | join('' and'') %} {% set verb
            = ''is'' %} {% if person == ''you'' or value.split('','') | count > 1
            %} {% set verb = ''are'' %} {% endif %} Home Assistant has observed {{
            person }} {{ verb }} leaving home and has turned off the AC. If this is
            not expected, click this notification to turn it back on.'
          url: /lovelace/climate
          notify_nathan: true
          notify_sarah: true
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.keep_ac_in_eco
      - service: climate.set_preset_mode
        data:
          preset_mode: Eco
        target:
          entity_id: climate.kitchen
    default: []
  mode: single
- id: '1637193742323'
  alias: Christmas Lights
  description: ''
  trigger:
  - platform: sun
    event: sunset
    id: sunset
    offset: -01:00:00
  - platform: state
    entity_id: input_boolean.night_mode
    id: sleep
    to: 'on'
    from: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id: binary_sensor.occupied
    id: occupation
  - platform: state
    entity_id: input_boolean.night_mode
    id: wake
    from: 'on'
    to: 'off'
  - platform: time
    at: 00:00:00
    id: midnight
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sunset
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.outside_christmas_lights
          - switch.wp1_smart_socket_2_socket
          - switch.wp1_smart_socket_socket
          - switch.sarah_s_fan_socket_1
          - switch.christmas_tree_socket_1
      - service: light.turn_on
        target:
          entity_id:
          - light.side_porch
          - light.front_porch
          - light.garland
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: sleep
        - condition: trigger
          id: midnight
      sequence:
      - service: switch.turn_off
        target:
          entity_id:
          - switch.outside_christmas_lights
          - switch.wp1_smart_socket_2_socket
          - switch.wp1_smart_socket_socket
          - switch.sarah_s_fan_socket_1
          - switch.christmas_tree_socket_1
      - service: light.turn_off
        target:
          entity_id:
          - light.front_porch
          - light.side_porch
          - light.garland
    - conditions:
      - condition: trigger
        id: wake
      - condition: state
        entity_id: input_boolean.visitors
        state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.garland
    default: []
  mode: queued
  max: 10
- id: '1643038941823'
  alias: Birthday Reminders
  description: ''
  trigger:
  - platform: time
    at: input_datetime.birthday_reminder_time
    id: notification_time
  - platform: state
    entity_id: calendar.birthdays
    id: next_birthday
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: notification_time
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{% set reminderDate = ((state_attr(''calendar.birthdays'',
              ''start_time'') | as_datetime - timedelta(days=states(''input_number.birthday_reminder_offset'')
              | int)) | as_local) %}

              {{ reminderDate.month == now().month and reminderDate.day == now().day
              }}'
          sequence:
          - service: script.notify_sarah_and_nathan
            data:
              message: '{{ state_attr(''calendar.birthdays'', ''message'') }} ðŸŽ‰'
              more_info: '{{ state_attr(''calendar.birthdays'', ''message'') }} is
                coming up on {{ state_attr(''calendar.birthdays'', ''start_time'')
                | as_timestamp | timestamp_custom("%A, %B %d", True)}}'
              notify_nathan: true
              notify_sarah: true
        - conditions:
          - condition: state
            entity_id: calendar.birthdays
            state: 'on'
          sequence:
          - service: script.notify_sarah_and_nathan
            data:
              message: '{{ state_attr(''calendar.birthdays'', ''message'') }}'
              more_info: Today is {{ state_attr('calendar.birthdays', 'message') }}
                ðŸŽ‚
              notify_nathan: true
              notify_sarah: true
    - conditions:
      - condition: trigger
        id: next_birthday
      sequence:
      - wait_for_trigger:
        - platform: time
          at: input_datetime.birthday_reminder_time
      - service: script.notify_sarah_and_nathan
        data:
          message: '{{ state_attr(''calendar.birthdays'', ''message'') }} ðŸŽ‰'
          more_info: '{{ state_attr(''calendar.birthdays'', ''message'') }} is coming
            up on {{ state_attr(''calendar.birthdays'', ''start_time'') | as_timestamp
            | timestamp_custom("%A, %B %d", True)}}'
          notify_nathan: true
          notify_sarah: true
    default: []
  mode: parallel
  max: 2
- id: '1643585268012'
  alias: Bathroom Fan
  description: Toggle Fan Based on Humidity and Motion
  trigger:
  - platform: numeric_state
    entity_id: sensor.bathroom_humidity
    above: input_number.bathroom_humidity_threshold
    id: too_humid
  - platform: state
    entity_id: switch.bathroom_fan
    id: run_for_small_time
    to: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  - platform: state
    entity_id: switch.bathroom_fan
    id: run_for_long_time
    to: 'on'
    for:
      hours: 0
      minutes: 45
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.bathroom_humidity
    id: humidity_lowered
    below: input_number.bathroom_humidity_threshold
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: too_humid
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.bathroom_fan
        data: {}
    - conditions:
      - condition: trigger
        id: run_for_small_time
      - condition: numeric_state
        entity_id: sensor.bathroom_humidity
        below: input_number.bathroom_humidity_threshold
      - condition: state
        entity_id: binary_sensor.wyze_motion2
        state: 'off'
        for:
          hours: 0
          minutes: 5
          seconds: 0
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.bathroom_fan
        data: {}
    - conditions:
      - condition: trigger
        id: run_for_long_time
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.bathroom_fan
        data: {}
    - conditions:
      - condition: trigger
        id: humidity_lowered
      - condition: state
        entity_id: binary_sensor.wyze_motion2
        state: 'off'
        for:
          hours: 0
          minutes: 3
          seconds: 0
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.bathroom_fan
        data: {}
    default: []
  mode: restart
- id: '1645303901832'
  alias: Grow Room
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    id: sunrise
  - platform: template
    value_template: '{% set hours = states(''input_number.hours_of_plant_light'')|float
      %}

      {% set turn_off_time = (state_attr(''sun.sun'', ''next_rising'') | as_datetime
      - timedelta(days = 1) + timedelta(hours = hours))%}

      {{ now() > turn_off_time }}'
    id: time_expired
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sunrise
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.grow_light
    - conditions:
      - condition: trigger
        id: time_expired
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.grow_light
    default: []
  mode: single
- id: '1646491578504'
  alias: Keep AC in Eco
  description: ''
  trigger:
  - platform: state
    entity_id: climate.kitchen
    attribute: preset_mode
    to: none
  - platform: state
    entity_id: input_boolean.keep_ac_in_eco
  condition:
  - condition: state
    entity_id: input_boolean.keep_ac_in_eco
    state: 'on'
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: eco
    target:
      entity_id: climate.kitchen
  mode: queued
  max: 10
- id: '1587852659451'
  alias: Tv Night Scenes
  description: Turns on the appropriate living room scenes when the tv is playing
    at night
  trigger:
  - platform: sun
    event: sunset
    offset: -00:20:00
  - entity_id: media_player.living_room_tv_2
    for: 00:00:10
    platform: state
    to: playing
  - entity_id: media_player.living_room_tv_2
    platform: state
    to: paused
  - entity_id: media_player.living_room_tv_2
    for: 00:00:22
    platform: state
    to: standby
  - entity_id: media_player.living_room_tv_2
    platform: state
    to: 'off'
  condition:
  - condition: or
    conditions:
    - after: sunset
      condition: sun
      after_offset: -00:25:00
    - before: sunrise
      condition: sun
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  - condition: state
    entity_id: input_boolean.night_mode
    state: 'off'
  - condition: template
    value_template: '{{ trigger.from_state.state != "unavailable" }}'
  action:
  - data_template:
      entity_id: "{% if is_state('media_player.living_room_tv_2', 'playing') %}\n\
        \  scene.tv_playing_at_night\n{% elif is_state('media_player.living_room_tv_2',\
        \ 'standby')\n   or is_state('media_player.living_room_tv_2', 'paused')\n\
        %}\n  scene.tv_paused_at_night\n{% else %}\n  scene.tv_off_at_night\n{% endif\
        \ %}\n"
      transition: 10
    service: scene.turn_on
- id: '1587264300585'
  alias: Phone Alarm Sync
  description: Turns on alarm in bedroom when Pixel alarm goes off
  mode: parallel
  trigger:
  - platform: template
    id: ease_on_lights
    value_template: '{{ now() > states(''sensor.pixel_4_next_alarm'') | as_datetime
      - timedelta(minutes = 15) }}'
  - platform: template
    id: play_alarm
    value_template: '{{ now() > states(''sensor.pixel_4_next_alarm'') | as_datetime
      - timedelta(minutes = 1) }} '
  condition:
  - condition: state
    entity_id: person.nathan
    state: home
  action:
  - alias: either turn on lights or play alarm
    choose:
    - conditions:
      - condition: trigger
        id: ease_on_lights
      sequence:
        service: script.turn_on
        target:
          entity_id:
          - script.slow_alarm
    - conditions:
      - condition: trigger
        id: play_alarm
      sequence:
        service: script.turn_on
        target:
          entity_id:
          - script.alarm
- id: '1587255222033'
  alias: Run Roomba Every Morning
  description: ''
  trigger:
  - platform: time
    at: input_datetime.roomba_run_time
  condition: []
  action:
  - service: script.vacuum_rooms
    data:
      rooms:
      - '15'
      - '17'
      - '18'
      - '11'
      - '9'
      - '5'
- id: '1586661602545'
  alias: Turn On Master Bedroom Before Bed
  description: ''
  trigger:
  - at: '21:00:00'
    platform: time
  condition:
  - condition: state
    entity_id: group.master_room_people
    state: home
  - condition: state
    entity_id: input_boolean.night_mode
    state: 'off'
  action:
  - service: scene.turn_on
    data:
      entity_id: scene.bedtime
      transition: 15
- id: '1587443561409'
  alias: Notify of Intruder
  description: ''
  trigger:
  - entity_id: binary_sensor.kitchen_motion
    platform: state
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: alarm_control_panel.alexa_guard_ee9c2
      state: armed_away
    - condition: state
      entity_id: binary_sensor.occupied
      state: 'off'
  action:
  - data:
      message: Motion Detected in Living Room
      title: Hide Yo Kids, Hide Yo Wife!
    service: notify.notify
- id: jammed-lock-notifications
  alias: Notify when Door is Jammed
  description: ''
  trigger:
  - entity_id: lock.back_door
    platform: state
    to: jammed
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: Back Door is Jammed
      use_alexa: true
      notify_nathan: true
      notify_sarah: true
  mode: single
- id: shed-notifications
  alias: Notify when Shed Door is Opened
  description: ''
  trigger:
  - entity_id: binary_sensor.shed_door
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id:
    - input_boolean.people_outside
    state: 'off'
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: Shed Door Was Opened
      use_alexa: true
      notify_nathan: true
      notify_sarah: true
  mode: single
- id: '1587614908680'
  alias: Notify If Bedroom Door Changes When We're Away
  description: ''
  trigger:
  - entity_id: binary_sensor.wyze_door1
    platform: state
    to: 'off'
  - entity_id: binary_sensor.wyze_door1
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: group.master_room_people
    state: not_home
  action:
  - data:
      message: The bedroom door was {% if is_state('binary_sensor.wyze_door1', 'on')
        %}opened{% else %}closed{% endif %}!
      title: Someone is in your room
    service: notify.mobile_app_iphone
  - data:
      message: The bedroom door was {% if is_state('binary_sensor.wyze_door1', 'on')
        %}opened{% else %}closed{% endif %}!
      title: Someone is in your room
    service: notify.mobile_app_pixel_4
- id: '1590193462462'
  alias: Notify Rooben's Bin is Full
  description: Send notification when the bin becomes full, then again each time the
    person comes home
  trigger:
  - entity_id: vacuum.rooben
    platform: state
    to: docked
  - entity_id: person.nathan
    for: 00:03:00
    platform: state
    to: home
  - entity_id: person.sarah
    for: 00:03:00
    platform: state
    to: home
  condition:
  - condition: state
    entity_id: binary_sensor.rooben_bin_full
    state: 'on'
  action:
  - service: '{% if trigger.entity_id == ''person.nathan'' %} notify.mobile_app_pixel_4
      {% else %} notify.mobile_app_iphone {% endif %}'
    data:
      title: Rooben's Bin is Full
      message: Time to empty the bin.
  - condition: template
    value_template: '{{ trigger.entity_id == ''vacuum.rooben''}}'
  - service: script.notify_sarah_and_nathan
    data:
      message: Rooben's Bin is Full
      more_info: Time to empty the bin
  mode: single
- id: '1604755622228'
  alias: Notify When There Are Packages
  description: Sends a notification to everyone when there are packages to be checked.
  trigger:
  - platform: state
    entity_id: sensor.mail_packages_delivered
  condition:
  - condition: numeric_state
    entity_id: sensor.mail_packages_delivered
    above: '0'
  - condition: state
    entity_id: input_boolean.night_mode
    state: 'off'
  action:
  - service: script.notify_sarah_and_nathan
    data:
      message: Package Delivered
      more_info: Packages have been delivered. Click to see package status.
      url: /lovelace/mail
      use_alexa: true
      notify_nathan: true
      notify_sarah: true
  mode: single
- id: '1604755622229'
  alias: Notify When There Is Mail
  description: Sends a notification to everyone when there is mail to be checked.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.mailbox_vibration
    to: 'on'
    id: vibration
  - platform: time
    at: 00:00:00
    id: midnight
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.mail_usps_mail
        above: '0'
      - condition: state
        entity_id: input_boolean.night_mode
        state: 'off'
      - condition: state
        entity_id:
        - input_boolean.mail_in_box
        state: 'off'
      - condition: trigger
        id: vibration
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          message: Mail Time
          more_info: Mail has been delivered to the mailbox. Click to see what you
            have.
          url: /lovelace/mail
          image: '{{ states(''sensor.mail_image_url'') }}'
          image_type: gif
          use_alexa: true
          notify_nathan: true
          notify_sarah: true
      - service: input_boolean.turn_on
        entity_id: input_boolean.mail_in_box
    default:
    - service: input_boolean.turn_off
      entity_id: input_boolean.mail_in_box
  mode: single
- id: '1586306345598'
  alias: Turn Off Fans When Cold
  description: Turn off the fans if the temperature drops below 40 and we're in bed
  trigger:
  - below: '60'
    entity_id: weather.home
    platform: numeric_state
    value_template: '{{ state.attributes.temperature }}'
  condition:
  - after: sunset
    before: sunrise
    before_offset: '+3:00:00'
    condition: sun
  action:
  - data: {}
    entity_id: group.fans
    service: homeassistant.turn_off
- id: '1587668411958'
  alias: Calendar Toggles WFH
  description: ''
  trigger:
  - entity_id: calendar.wfh
    platform: state
  condition:
  - condition: state
    entity_id: binary_sensor.is_workday
    state: 'on'
  action:
  - entity_id: input_boolean.wfh
    service: "{% if is_state('binary_sensor.is_workday', 'on') %}\n  input_boolean.turn_on\n\
      {% else %}\n  input_boolean.turn_off\n{% endif %}"
- id: wfh_fan
  alias: WFH -- Fan
  mode: single
  trigger:
  - platform: numeric_state
    entity_id: sensor.bme280_temperature
    above: input_number.fan_temperature
    for: 00:01:00
  - platform: numeric_state
    entity_id: sensor.bme280_temperature
    below: input_number.fan_temperature
    for: 00:01:00
  - platform: state
    entity_id: binary_sensor.is_during_workday
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.wfh
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.occupied
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_number.fan_temperature
  condition:
  - condition: state
    entity_id: input_boolean.wfh
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_during_workday
    state: 'on'
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.bme280_temperature
        above: input_number.fan_temperature
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.office_plug
    default:
    - service: switch.turn_off
      target:
        entity_id: switch.office_plug
- id: mutesync
  alias: WFH -- Unmuting
  trigger:
  - platform: state
    entity_id: binary_sensor.muted
  condition:
  - condition: state
    entity_id: input_boolean.wfh
    state: 'on'
  - condition: state
    entity_id: binary_sensor.in_meeting
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.muted
        state: 'on'
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.before_unmute
      - service: scene.create
        data:
          scene_id: before_unmute
          snapshot_entities: []
    - conditions:
      - condition: state
        entity_id: binary_sensor.muted
        state: 'off'
      sequence:
      - service: scene.create
        data:
          scene_id: before_unmute
          snapshot_entities:
          - switch.office_plug
      - service: scene.turn_on
        target:
          entity_id: scene.wfh_unmuted
- id: wfh
  alias: Work from Home
  mode: restart
  trigger:
  - platform: state
    entity_id: binary_sensor.is_during_workday
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.wfh
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: person.nathan
    from: not_home
    to: home
  - platform: state
    entity_id: person.sarah
    from: not_home
    to: home
  - platform: state
    entity_id: person.nathan
    from: home
    to: not_home
    id: nathan_left
  - platform: state
    entity_id: person.sarah
    from: home
    to: not_home
    id: sarah_left
  - platform: state
    entity_id: binary_sensor.occupied
    from: 'off'
    to: 'on'
  - platform: homeassistant
    event: start
  - platform: event
    event_type: automation_reloaded
  condition:
  - condition: state
    entity_id: input_boolean.wfh
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_during_workday
    state: 'on'
  - condition: state
    entity_id: binary_sensor.occupied
    state: 'on'
  action:
  - alias: Someone leaves during work day
    choose:
    - conditions:
      - condition: trigger
        id: nathan_left
      sequence:
      - service: homeassistant.turn_off
        target:
          area_id: a78dc9b8222b47eebe4561988e57b0b0
    - conditions:
      - condition: trigger
        id: sarah_left
      sequence:
      - service: homeassistant.turn_off
        target:
          area_id: b2672f722c53428e92427703040fb764
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_morning
        state: 'on'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.sarah
            state: home
          sequence:
          - service: scene.turn_on
            target:
              entity_id: scene.wfh_bedroom
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.nathan
            state: home
          sequence:
          - service: scene.turn_on
            target:
              entity_id: scene.wfh
          - wait_for_trigger:
            - platform: state
              entity_id: binary_sensor.office_door
              to: 'off'
              from: 'on'
            timeout: 03:00:00
            continue_on_timeout: true
          - service: media_player.media_stop
            target:
              entity_id: media_player.kitchen_echo_show
          - service: media_player.select_source
            data:
              source: Office Echo
            target:
              entity_id: media_player.spotify_nathan_orick
          - delay: 00:00:05
          - service: media_player.media_play
            target:
              entity_id: media_player.spotify_nathan_orick
      - wait_template: '{{ is_state(''binary_sensor.is_lunch'', ''on'') }}'
        timeout: 05:00:00
        continue_on_timeout: false
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.occupied
      state: 'on'
    - condition: state
      entity_id: input_boolean.wfh
      state: 'on'
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_lunch
        state: 'on'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.nathan
            state: home
          sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.wfh_relax
              transition: 600
          - service: switch.turn_off
            entity_id: switch.office_plug
          - wait_for_trigger:
            - platform: state
              entity_id: binary_sensor.wyze_motion3
              to: 'on'
          - service: media_player.play_media
            data:
              media_content_id: amzn1.ask.skill.8e0fbda3-b70c-481d-878f-a2e5e17158c9
              media_content_type: skill
            target:
              entity_id:
              - media_player.kitchen_echo_show
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.sarah
            state: home
          sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.wfh_relax_bedroom
              transition: 600
      - wait_for_trigger:
        - platform: state
          entity_id:
          - binary_sensor.living_room_motion
          to: 'on'
        timeout:
          minutes: 30
      - service: media_player.media_stop
        target:
          entity_id: media_player.kitchen_echo_show
      - service: media_player.turn_on
        target:
          entity_id: media_player.living_room_tv
      - service: media_player.select_source
        target:
          entity_id: media_player.living_room_tv
        data:
          source: '{{states("input_select.lunch_tv_app")}}'
      - wait_template: '{{ is_state(''binary_sensor.is_afternoon'', ''on'') }}'
        timeout:
          hours: '5'
        continue_on_timeout: false
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.occupied
      state: 'on'
    - condition: state
      entity_id: input_boolean.wfh
      state: 'on'
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_afternoon
        state: 'on'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.nathan
            state: home
          sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.wfh
              transition: 60
          - service: automation.trigger
            entity_id: automation.wfh_fan
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.sarah
            state: home
          sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.wfh_bedroom
              transition: 60
      - wait_template: '{{ is_state(''binary_sensor.is_evening'', ''on'') }}'
        timeout:
          hours: '5'
        continue_on_timeout: false
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.occupied
      state: 'on'
    - condition: state
      entity_id: input_boolean.wfh
      state: 'on'
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_evening
        state: 'on'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.nathan
            state: home
          sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.wfh_relax
              transition: 600
          - service: switch.turn_off
            entity_id: switch.office_plug
      - choose:
        - conditions:
          - condition: state
            entity_id:
            - person.sarah
            state: home
          sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.wfh_relax_bedroom
              transition: 600
      - delay: 00:10:00
      - service: light.turn_off
        data:
          transition: 10
        target:
          area_id: a78dc9b8222b47eebe4561988e57b0b0
      - service: light.turn_off
        data:
          transition: 10
        target:
          area_id: b2672f722c53428e92427703040fb764
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.wfh
- id: '1586737651295'
  alias: Toggle Automations When There Are Visitors
  description: ''
  trigger:
  - entity_id: input_boolean.visitors
    platform: state
  condition: []
  action:
  - entity_id: group.visitor_automations
    service: "{% if is_state('input_boolean.visitors', 'on') %}\n  homeassistant.turn_off\n\
      {% else %}\n  homeassistant.turn_on\n{% endif %}"
- id: '1587273614675'
  alias: Calendar Toggles Visitors
  description: ''
  trigger:
  - entity_id: calendar.visitors
    platform: state
  condition: []
  action:
  - entity_id: input_boolean.visitors
    service: "{% if is_state('calendar.visitors', 'on') %}\n  input_boolean.turn_on\n\
      {% else %}\n  input_boolean.turn_off\n{% endif %}"
- id: known_visitor_presence_toggle
  alias: Known Visitor Presence Toggles Visitor Mode
  description: When a visitor that is on the list shows up, visitor mode turns on
    automatically
  trigger:
  - entity_id: group.known_visitors
    platform: state
  condition: []
  action:
  - entity_id: input_boolean.visitors
    service: '{% if is_state(''group.known_visitors'', ''home'') %} input_boolean.turn_on
      {% else %} input_boolean.turn_off {% endif %}'
- id: '1588639275094'
  alias: Toggle Night Mode
  description: ''
  trigger:
  - entity_id: binary_sensor.everyone_in_bed
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: calendar.alarm
    from: 'off'
    platform: state
    to: 'on'
  - platform: template
    value_template: '{{ states(''sensor.time'') >= states(''input_datetime.morning'')
      }}'
  action:
  - entity_id: input_boolean.night_mode
    service: '{% if trigger.entity_id == ''binary_sensor.everyone_in_bed'' %} input_boolean.turn_on
      {% else %} input_boolean.turn_off {% endif %}'
- id: '1587677710011'
  alias: Toggle Night Automations
  description: ''
  trigger:
  - entity_id: input_boolean.night_mode
    platform: state
  condition: []
  action:
  - entity_id: group.bedtime_automations
    service: '{% if is_state(''input_boolean.night_mode'', ''on'') %} homeassistant.turn_on
      {% else %} homeassistant.turn_off {% endif %}'
- id: '1587996987502'
  alias: Night Mode -- Set Night State for All Devices
  description: ''
  trigger:
  - entity_id: input_boolean.night_mode
    platform: state
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.couch_sleepers
        state: 'off'
      - condition: state
        entity_id: input_boolean.office_sleepers
        state: 'off'
      sequence:
      - entity_id: group.all_lights
        service: homeassistant.turn_off
      - service: switch.turn_off
        entity_id: switch.office_plug
    - conditions:
      - condition: state
        entity_id: input_boolean.couch_sleepers
        state: 'off'
      - condition: state
        entity_id: input_boolean.office_sleepers
        state: 'on'
      sequence:
      - service: homeassistant.turn_off
        target:
          entity_id: group.public_lights
        data: {}
    - conditions:
      - condition: state
        entity_id: input_boolean.couch_sleepers
        state: 'on'
      - condition: state
        entity_id: input_boolean.office_sleepers
        state: 'off'
      sequence:
      - service: homeassistant.turn_off
        target:
          area_id: a78dc9b8222b47eebe4561988e57b0b0
        data: {}
      - service: homeassistant.turn_off
        target:
          entity_id: group.kitchen_lights
        data: {}
      - service: switch.turn_off
        entity_id: switch.office_plug
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id: light.hallway
    - conditions:
      - condition: state
        entity_id: input_boolean.couch_sleepers
        state: 'on'
      - condition: state
        entity_id: input_boolean.office_sleepers
        state: 'on'
      sequence:
      - service: homeassistant.turn_off
        target:
          entity_id: group.kitchen_lights
        data: {}
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id: light.hallway
  - service: switch.turn_on
    entity_id: switch.nathans_fan
  - service: lock.lock
    entity_id: lock.back_door
  - data: {}
    entity_id: media_player.living_room_tv
    service: media_player.turn_off
  - service: switch.turn_off
    entity_id: switch.truck
  - alias: Reminder to Let Water Drip
    choose:
    - conditions:
      - condition: template
        value_template: '{{ state_attr(''weather.home'', ''forecast'') | map(attribute=''templow'')
          | first < 32}}'
      sequence:
      - service: notify.alexa_media
        data:
          data:
            type: tts
          message: Don't forget to let the water drip. The low for tonight is {{ state_attr('weather.home',
            'forecast') | map(attribute='templow') | first}}
          target: media_player.bedroom_echo
    default: []
- id: couch_sleepers
  alias: Toggle Automations When Someone is Sleeping on the Couch
  description: ''
  trigger:
  - entity_id: input_boolean.couch_sleepers
    platform: state
  condition: []
  action:
  - entity_id: group.couch_sleeping_automations
    service: '{% if is_state(''input_boolean.couch_sleepers'', ''on'') %} homeassistant.turn_off
      {% else %} homeassistant.turn_on {% endif %}'
- id: '1589240357141'
  alias: Turn Off Public Lights After No Motion
  description: ''
  trigger:
  - entity_id: binary_sensor.public_space_motion
    for: 0:05:00
    platform: state
    to: 'off'
  condition: []
  action:
  - data: {}
    entity_id: group.public_lights
    service: homeassistant.turn_off
- id: '1587438080867'
  alias: Turn On Kitchen if Motion
  description: ''
  trigger:
  - entity_id: binary_sensor.wyze_motion3
    platform: state
    to: 'on'
  action:
  - data: {}
    entity_id: group.kitchen_lights
    service: homeassistant.turn_on
- id: '1587438080868'
  alias: Turn Off Kitchen After No Motion
  description: ''
  trigger:
  - entity_id: binary_sensor.wyze_motion3
    for:
      seconds: '{{ states(''input_number.kitchen_motion_timeout'') | int * 60 }}'
    platform: state
    to: 'off'
  condition: []
  action:
  - data: {}
    entity_id: group.kitchen_lights
    service: homeassistant.turn_off
  - service: light.turn_off
    entity_id: light.back_door
- id: bathroom_on_motion
  alias: Toggle Bathroom on Motion
  description: ''
  mode: restart
  trigger:
  - entity_id: binary_sensor.wyze_motion2
    platform: state
    to: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.night_mode
        state: 'off'
      sequence:
      - service: script.tier_toggle_devices
        data:
          action: true
          entity_1:
            entity_id: light.bath_1
          entity_2:
            entity_id: light.bath_2
          entity_3:
            entity_id: light.bath_3
          entity_4:
            entity_id: light.bath_4
          entity_5:
            entity_id: light.bath_5
          entity_6:
            entity_id: light.bath_6
          entity_7:
            entity_id: light.bath_ceiling
          delay: 250
    - conditions:
      - condition: state
        entity_id: input_boolean.night_mode
        state: 'on'
      sequence:
      - service: scene.turn_on
        entity_id: scene.bathroom_night
  - service: scene.turn_on
    data_template:
      entity_id: '{% if is_state("input_boolean.night_mode", "on") %} scene.bathroom_night
        {% else %} scene.bathroom_day {% endif %}'
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.wyze_motion2
      to: 'off'
      for:
        seconds: '{% set pee_timeout = states(''input_number.pee_timeout'') | int
          * 60 %} {% set poo_timeout = states(''input_number.poo_timeout'') | int
          * 60 %} {% set night_timeout = states(''input_number.night_timeout'') |
          int * 60 %} {% if is_state("binary_sensor.bathroom_door", "off") %} {% set
          action = "poo" %} {% else %} {% set action = "pee" %} {% endif %} {% if
          action == "poo" %} {{ poo_timeout }} {% elif is_state(''input_boolean.night_mode'',
          ''on'') %} {{ night_timeout }} {% else %} {{ pee_timeout }} {% endif %}'
    timeout: 3600
    continue_on_timeout: true
  - service: script.tier_toggle_devices
    data:
      action: false
      entity_1:
        entity_id: light.bath_1
      entity_2:
        entity_id: light.bath_2
      entity_3:
        entity_id: light.bath_3
      entity_4:
        entity_id: light.bath_4
      entity_5:
        entity_id: light.bath_5
      entity_6:
        entity_id: light.bath_6
      entity_7:
        entity_id: light.bath_ceiling
      delay: 1000
- id: guest_bathroom_on_motion
  alias: Toggle Guest Bathroom on Motion
  description: ''
  mode: restart
  trigger:
  - entity_id: binary_sensor.wyze_motion1
    platform: state
    to: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.night_mode
        state: 'off'
      sequence:
      - service: script.tier_toggle_devices
        data:
          action: true
          entity_1:
            entity_id: light.guest_bath_1
          entity_2:
            entity_id: light.guest_bath_3
          entity_3:
            entity_id: light.guest_bath_2
          delay: 250
    - conditions:
      - condition: state
        entity_id: input_boolean.night_mode
        state: 'on'
      sequence:
      - service: scene.turn_on
        entity_id: scene.guest_bathroom_night
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.wyze_motion1
      to: 'off'
      for:
        seconds: '{% set pee_timeout = states(''input_number.pee_timeout'') | int
          * 60 %} {% set poo_timeout = states(''input_number.poo_timeout'') | int
          * 60 %} {% set night_timeout = states(''input_number.night_timeout'') |
          int * 60 %} {% if is_state("binary_sensor.guest_bathroom_door", "off") %}
          {% set action = "poo" %} {% else %} {% set action = "pee" %} {% endif %}
          {% if action == "poo" %} {{ poo_timeout }} {% elif is_state(''input_boolean.night_mode'',
          ''on'') %} {{ night_timeout }} {% else %} {{ pee_timeout }} {% endif %}'
    timeout: 3600
    continue_on_timeout: true
  - service: script.tier_toggle_devices
    data:
      action: false
      entity_1:
        entity_id: light.guest_bath_1
      entity_2:
        entity_id: light.guest_bath_3
      entity_3:
        entity_id: light.guest_bath_2
      delay: 1000
- id: guest_air_freshener
  alias: Turn On Air Freshener When Bathroom Is Occupied When There Are Scheduled
    Visitors
  description: ''
  trigger:
  - entity_id: light.guest_bathroom
    platform: state
  condition:
  - condition: state
    entity_id: input_boolean.visitors
    state: 'on'
  action:
  - service: '{% if is_state(''light.guest_bathroom'', ''on'') %} switch.turn_on {%
      else %} switch.turn_off {% endif %}'
    data:
      entity_id: switch.guest_air_freshener
- id: '1586735161292'
  alias: Turn Off Everything When Everyone Leaves
  description: ''
  trigger:
  - entity_id: binary_sensor.occupied
    for: 00:05:00
    platform: state
    to: 'off'
  condition: []
  action:
  - data: {}
    entity_id: group.all_lights
    service: homeassistant.turn_off
  - data: {}
    entity_id: media_player.living_room_tv
    service: media_player.turn_off
  - entity_id: group.fans
    service: homeassistant.turn_off
  - service: climate.turn_off
    entity_id: climate.bedroom_thermostat
  - service: switch.turn_on
    entity_id: switch.mudroom_camera
  - service: script.vacuum_rooms
    data:
      rooms:
      - '1'
      - '8'
      - '15'
      - '17'
      - '18'
      - '9'
      - '5'
      - '11'
  - service: alarm_control_panel.alarm_arm_away
    entity_id: alarm_control_panel.alexa_guard_ee9c2
  - service: switch.turn_off
    entity_id: switch.truck
  - service: climate.set_preset_mode
    target:
      entity_id: climate.kitchen
    data:
      preset_mode: eco
- id: '1587162726799'
  alias: First Person Home
  description: ''
  trigger:
  - entity_id: binary_sensor.occupied
    from: 'off'
    platform: state
    to: 'on'
  variables:
    lights:
    - light.front_porch
    - light.back_porch
    - light.side_porch
    - light.laundry_room
    - light.back_door
    - light.front_door
  condition: []
  action:
  - choose:
    - conditions:
      - condition: sun
        after: sunset
        after_offset: -01:00:00
      sequence:
      - service: light.turn_on
        target:
          entity_id: '{{ lights }}'
    default: []
  - service: switch.turn_off
    entity_id: switch.mudroom_camera
  - service: alarm_control_panel.alarm_disarm
    entity_id: alarm_control_panel.alexa_guard_ee9c2
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.keep_ac_in_eco
  - service: climate.set_preset_mode
    target:
      entity_id: climate.kitchen
    data:
      preset_mode: none
  - data: {}
    entity_id: vacuum.rooben
    service: vacuum.stop
  - wait_template: '{{ is_state(''vacuum.rooben'', ''idle'') }}'
    continue_on_timeout: true
    timeout: 00:00:10
  - data: {}
    entity_id: vacuum.rooben
    service: vacuum.return_to_base
  - delay: 00:10:00
  - service: light.turn_off
    target:
      entity_id: '{{ lights }}'
- id: '1587673304305'
  alias: Turn On Kitchen When Leaving Bedroom
  description: ''
  trigger:
  - entity_id: binary_sensor.bedroom_door
    platform: state
    to: 'on'
  condition: []
  action:
  - data: {}
    target:
      area_id: 1f75029558cd46f69ddb7d3a9f537726
    service: light.turn_on
- id: '1650657538334'
  alias: Notify of Kitchen Leak
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.kitchen_sink_moisture
    to: 'on'
  condition: []
  action:
  - repeat:
      until:
      - condition: state
        entity_id: binary_sensor.kitchen_sink_moisture
        state: 'off'
      sequence:
      - service: script.notify_sarah_and_nathan
        data:
          message: The Kitchen Sink is Flooding!
          more_info: Check under the kitchen sink for water. If it is a bad leak,
            you may need to turn off the main water valve in the basement. Turn off
            the automation named "Notify of Kitchen Leak" to silence the notification
          use_alexa: true
          notify_nathan: true
          notify_sarah: true
      - delay:
          hours: 0
          minutes: 3
          seconds: 0
          milliseconds: 0
  mode: single
- id: '1651167205604'
  alias: Tag Office is scanned
  description: ''
  trigger:
  - platform: tag
    tag_id: office
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.spotify_nathan_orick
        state: playing
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.spotify_nathan_orick
            attribute: source
            state: Office Echo
          sequence:
          - service: media_player.select_source
            data:
              source: Everywhere
            target:
              entity_id: media_player.spotify_nathan_orick
        default:
        - service: media_player.select_source
          data:
            source: Office Echo
          target:
            entity_id: media_player.spotify_nathan_orick
    default:
    - service: media_player.select_source
      data:
        source: Office Echo
      target:
        entity_id: media_player.spotify_nathan_orick
    - wait_template: '{{is_state_attr(''media_player.spotify_nathan_orick'', ''source'',
        ''Office Echo'')}}'
      timeout: '5'
      continue_on_timeout: true
    - service: media_player.media_play
      data: {}
      target:
        entity_id: media_player.spotify_nathan_orick
  mode: single
- id: '1651260896457'
  alias: Tag Back Porch Speakers is scanned
  description: ''
  trigger:
  - platform: tag
    tag_id: back-porch
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.spotify_nathan_orick
        state: playing
      sequence:
      - service: media_player.media_pause
        data: {}
        target:
          entity_id: media_player.spotify_nathan_orick
    default:
    - service: media_player.select_source
      data:
        source: Back Porch
      target:
        entity_id: media_player.spotify_nathan_orick
    - wait_template: '{{is_state_attr(''media_player.spotify_nathan_orick'', ''source'',
        ''Back Porch'')}}'
      timeout: '10'
      continue_on_timeout: true
    - service: media_player.media_play
      data: {}
      target:
        entity_id: media_player.spotify_nathan_orick
  mode: single
- id: '1651684693891'
  alias: Switch Turns On Showering Mode
  description: Turn on news and fan when switch is toggled twice
  trigger:
  - platform: state
    entity_id: binary_sensor.bathroom_fan_input
  condition: []
  action:
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.bathroom_fan_input
      for:
        hours: 0
        minutes: 0
        seconds: 2
    timeout: '5'
    continue_on_timeout: false
  - service: media_player.play_media
    data:
      entity_id: media_player.bathroom_echo
      media_content_id: amzn1.ask.skill.8e0fbda3-b70c-481d-878f-a2e5e17158c9
      media_content_type: skill
  - delay:
      hours: 0
      minutes: 0
      seconds: 4
      milliseconds: 0
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.bathroom_fan
  mode: single
- id: '1653422336570'
  alias: Start Tesla
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_button.start_tesla
  condition: []
  action:
  - service: script.start_tesla
    data: {}
  mode: single
