# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Text to speech
tts:
  - platform: google_translate
homeassistant:
  customize: !include customize.yaml

group: !include_dir_merge_named ./groups
automation: !include automations.yaml
script: !include scripts.yaml
script secret: !include secret_scripts.yaml
scene: !include scenes.yaml
frontend:
  themes: !include_dir_merge_named ./themes

http:
  server_port: 80

media_player: !include_dir_merge_list ./media_players

spotcast:
  sp_dc: !secret sp_dc
  sp_key: !secret sp_key
  country: US #optional, added in 3.6.24

device_tracker: !include ./devices_to_track.yaml

binary_sensor:
  - platform: template
    sensors: !include sensors/template_binary_sensors.yaml

  - platform: wyzesense
    device: auto

sensor: !include_dir_merge_list ./sensors

template:
  - sensor:
    - name: Number of People at Home
      unique_id: 'number_of_people_at_home'
      state: >-
        {{ dict((states.person)|groupby('state'))['home']|count }}
  - sensor:
    - name: Last Number of People at Home
      unique_id: 'last_number_of_people_at_home'
      state: >-
        {{ trigger.from_state.state }}
    trigger:
    - platform: state
      entity_id: sensor.number_of_people_at_home
  - binary_sensor:
    - name: Back Yard Floodlight Motion
      state: >-
        {{states("input_boolean.alexa_back_yard_floodlight_motion")}}
      device_class: motion
  - binary_sensor:
    - name: Parking Pad Floodlight Motion
      state: >-
        {{states("input_boolean.alexa_parking_pad_floodlight_motion")}}
      device_class: motion
  - sensor:
    - name: clean_tesla_wall_connector_energy
      unit_of_measurement: kWh
      state: >-
        {% set data_source = states('sensor.tesla_wall_connector_energy') %}
        {% if data_source in ['unavailable', 'unknown'] %} 
          {{this.state | default('unavailable')}}
        {% else %}
          {{data_source}}
        {% endif %}
  - sensor:
    - name: Tesla Energy Added At Home
      unit_of_measurement: kWh
      state: >-
        {% if trigger.id == "unplugged" %}
          {% if is_state("device_tracker.tesleigh_lynn_location_tracker", "home") %}
            {{states('sensor.tesla_energy_added_at_home') | float(0) + states('sensor.tesleigh_lynn_energy_added') | float(0)}}
          {% else %}
            {{states('sensor.tesla_energy_added_at_home') | float(0)}}
          {% endif %}
        {% elif trigger.id == "left" %}
          {% if states.binary_sensor.tesleigh_lynn_charger.last_changed + timedelta(minutes=1) >= now() and is_state('binary_sensor.tesleigh_lynn_charger', 'off') %}
            {{states('sensor.tesla_energy_added_at_home') | float(0) + states('sensor.tesleigh_lynn_energy_added') | float(0)}}
          {% else %}
            {{states('sensor.tesla_energy_added_at_home') | float(0)}}
          {% endif %}
        {% endif %}
    trigger:
      - platform: state
        entity_id: binary_sensor.tesleigh_lynn_charger
        id: unplugged
        from: "on"
        to: "off"
      - platform: state
        entity_id: device_tracker.tesleigh_lynn_location_tracker
        id: left
        from: "home"
  - sensor:
    - name: Tesla Home Monthly Charging Cost
      unit_of_measurement: $
      state: >-
        {{((states("sensor.tesla_home_charging") | float) * (states("sensor.brightridge_electricity_price") | float)) | round(2)}}
  - sensor:
    - name: Energy Added at Rusty and Donna's
      unit_of_measurement: kWh
      state: >-
        {% if trigger.id == "unplugged" %}
          {% if is_state("device_tracker.tesleigh_lynn_location_tracker", "Donna and Rusty's") %}
            {{states('sensor.energy_added_at_rusty_and_donna_s') | float(0) + states('sensor.tesleigh_lynn_energy_added') | float(0)}}
          {% else %}
            {{states('sensor.energy_added_at_rusty_and_donna_s') | float(0)}}
          {% endif %}
        {% elif trigger.id == "left" %}
          {% if states.binary_sensor.tesleigh_lynn_charger.last_changed + timedelta(minutes=1) >= now() and is_state('binary_sensor.tesleigh_lynn_charger', 'off') %}
            {{states('sensor.energy_added_at_rusty_and_donna_s') | float(0) + states('sensor.tesleigh_lynn_energy_added') | float(0)}}
          {% else %}
            {{states('sensor.energy_added_at_rusty_and_donna_s') | float(0)}}
          {% endif %}
        {% endif %}
    trigger:
      - platform: state
        entity_id: binary_sensor.tesleigh_lynn_charger
        id: unplugged
        from: "on"
        to: "off"
      - platform: state
        entity_id: device_tracker.tesleigh_lynn_location_tracker
        id: left
        from: "Donna and Rusty's"
  - sensor:
    - name: Weekly Charging Cost at Rusty and Donna's
      unit_of_measurement: $
      state: >-
        {{((states("sensor.tesla_rusty_and_donna_s_charging") | float) * (states("sensor.brightridge_electricity_price") | float)) | round(2)}}
  - sensor:
    - name: Last Week's Charging Cost at Rusty and Donna's
      unit_of_measurement: $
      state: >-
        {{states('sensor.weekly_charging_cost_at_rusty_and_donna_s')}}
    trigger:
      - platform: template
        value_template: >-
          {{(states('sensor.date_time_iso') | as_datetime).weekday() == 6 and (states('sensor.date_time_iso') | as_datetime).hour == 23}}
  - sensor:
    - name: Home Charging Cost Last Month
      unit_of_measurement: $
      state: >-
        {{states('sensor.tesla_home_monthly_charging_cost')}}
    trigger:
      - platform: template
        value_template: >-
          {% set dt = now() %}
          {% set lastDayOfMonth = (dt.replace(month=dt.month % 12 + 1, day=1) - timedelta(days=1)).day %}
          {{(states('sensor.date_time_iso') | as_datetime).day == lastDayOfMonth and (states('sensor.date_time_iso') | as_datetime).hour == 23}}
  - sensor:
    - name: Others Charging at Home Cost Last Month
      unit_of_measurement: $
      state: >-
        {{states('sensor.others_charging_at_home_total_monthly_cost')}}
    trigger:
      - platform: template
        value_template: >-
          {% set dt = now() %}
          {% set lastDayOfMonth = (dt.replace(month=dt.month % 12 + 1, day=1) - timedelta(days=1)).day %}
          {{(states('sensor.date_time_iso') | as_datetime).day == lastDayOfMonth and (states('sensor.date_time_iso') | as_datetime).hour == 23}}
  - sensor:
    - name: Wall Charger Monthly Charging Cost
      unit_of_measurement: $
      state: >-
        {{((states("sensor.wall_charger_total_monthly_energy") | float) * (states("sensor.brightridge_electricity_price") | float)) | round(2)}}
  - sensor:
    - name: Others Charging at Home Total Monthly Energy
      unit_of_measurement: kWh
      state: >-
        {{(states('sensor.wall_charger_total_monthly_energy') | float) - states('sensor.tesla_home_charging') | float}}
  - sensor:
    - name: Others Charging at Home Total Monthly Cost
      unit_of_measurement: $
      state: >-
        {{((states("sensor.others_charging_at_home_total_monthly_energy") | float) * (states("sensor.brightridge_electricity_price") | float)) | round(2)}}

light:
  - platform: flux_led
    devices:
      192.168.1.48:
        name: Under Desk Lights
  - platform: switch
    name: String Lights
    entity_id: switch.string_lights
  - platform: switch
    name: BL1
    entity_id: switch.bl1
  - platform: switch
    name: BL2
    entity_id: switch.bl2
  - platform: switch
    name: g1
    entity_id: switch.g1
  - platform: switch
    name: g2
    entity_id: switch.g2
  - platform: group
    name: Garland
    entities:
      - light.g1
      - light.g2
  - platform: group
    name: Basement Lights
    entities:
      - light.bl1
      - light.bl2
# Alexa routines don't support light toggle as a trigger. yet?
#  - platform: template
#    lights:
#      back_yard_floodlight:
#        friendly_name: Back Yard Floodlight
#        value_template: >-
#          {{states("input_boolean.alexa_back_yard_floodlight")}}
#        turn_off:
#          service: input_boolean.turn_off
#          entity_id: input_boolean.alexa_back_yard_floodlight
#        turn_on:
#          service: input_boolean.turn_on
#          entity_id: input_boolean.alexa_back_yard_floodlight
#      parking_pad_floodlight:
#        friendly_name: Parking Pad Floodlight
#        value_template: >-
#          {{states("input_boolean.alexa_parking_pad_floodlight")}}
#        turn_off:
#          service: input_boolean.turn_off
#          entity_id: input_boolean.alexa_parking_pad_floodlight
#        turn_on:
#          service: input_boolean.turn_on
#          entity_id: input_boolean.alexa_parking_pad_floodlight
        

var: !include variables.yaml

recorder:
  exclude:
    entities:
      - sensor.date_time_iso
      - sensor.time
      - sensor.timestamp
      - sensor.vehicle_state_data_sensor
      - sensor.climate_state_data_sensor
      - sensor.drive_state_data_sensor
      - sensor.gui_settings_data_sensor
      - sensor.sensor
      - sensor.software_data_sensor
      - sensor.speed_limit_data_sensor
      - sensor.vehicle_config_data_sensor

alexa_media:
  accounts:
    - email: !secret amazon_email
      password: !secret amazon_password
      url: amazon.com

wyzeapi:
  username: !secret wyze_username
  password: !secret wyze_password
  sensors: false

switch:
  # - platform: switchmate
  #   mac: 'f3:7e:9f:7b:3e:95'
  # - platform: switchmate
  #   mac: 'f7:37:b9:d5:53:23'
  - platform: template
    switches: !include switches/template_switches.yaml
  - platform: wake_on_lan
    mac: !secret nathan_pc_mac
    name: "Tater_PC"
    host: !secret nathan_pc_ip
    broadcast_address: !secret nathan_pc_ip

alarm_control_panel:
  - platform: manual
    name: Home Alarm
    code: !secret alarm_code
    disarmed:
      trigger_time: 0
    armed_home:
      arming_time: 0
      delay_time: 0

rest_command: !include rest_commands.yaml

camera: !include cameras.yaml
# image_processing: !include image_processing.yaml

aws:
  credentials:
    - name: HomeAssistantUser
      aws_access_key_id: !secret aws_access_key_id
      aws_secret_access_key: !secret aws_secret_access_key
  notify:
    - service: sns
      region_name: us-east-1
      aws_access_key_id: !secret aws_access_key_id
      aws_secret_access_key: !secret aws_secret_access_key

proximity:
  home:
    ignored_zones:
      - zone.project_access
      - zone.osi
    devices:
      - person.nathan
      - person.sarah
    tolerance: 100
    unit_of_measurement: mi

scrape:
  - resource: https://www.brightridge.com/home-service/rates/
    sensor:
      - name: Brightridge Electricity Price
        select: "table.brd > tbody > tr:nth-child(2) > td:nth-child(7)"
        value_template: '{{ value | replace ("$", "") | float }}'
        unit_of_measurement: "$/kWh"
